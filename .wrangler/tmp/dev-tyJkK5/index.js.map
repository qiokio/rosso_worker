{
  "version": 3,
  "sources": ["../bundle-6kWoPr/strip-cf-connecting-ip-header.js", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/tty.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "wrangler-modules-watch:wrangler:modules-watch", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/templates/modules-watch-stub.js", "node-built-in-modules:buffer", "../../../node_modules/safe-buffer/index.js", "node-built-in-modules:stream", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/util/legacy-types.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/util/log.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/util.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/util.mjs", "node-built-in-modules:util", "../../../node_modules/jws/lib/data-stream.js", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/crypto/web.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/crypto/node.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/crypto/constants.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/crypto.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/crypto.mjs", "node-built-in-modules:crypto", "../../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js", "../../../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js", "../../../node_modules/buffer-equal-constant-time/index.js", "../../../node_modules/jwa/index.js", "../../../node_modules/jws/lib/tostring.js", "../../../node_modules/jws/lib/sign-stream.js", "../../../node_modules/jws/lib/verify-stream.js", "../../../node_modules/jws/index.js", "../../../node_modules/jsonwebtoken/decode.js", "../../../node_modules/jsonwebtoken/lib/JsonWebTokenError.js", "../../../node_modules/jsonwebtoken/lib/NotBeforeError.js", "../../../node_modules/jsonwebtoken/lib/TokenExpiredError.js", "../../../node_modules/ms/index.js", "../../../node_modules/jsonwebtoken/lib/timespan.js", "../../../node_modules/semver/internal/constants.js", "../../../node_modules/semver/internal/debug.js", "../../../node_modules/semver/internal/re.js", "../../../node_modules/semver/internal/parse-options.js", "../../../node_modules/semver/internal/identifiers.js", "../../../node_modules/semver/classes/semver.js", "../../../node_modules/semver/functions/parse.js", "../../../node_modules/semver/functions/valid.js", "../../../node_modules/semver/functions/clean.js", "../../../node_modules/semver/functions/inc.js", "../../../node_modules/semver/functions/diff.js", "../../../node_modules/semver/functions/major.js", "../../../node_modules/semver/functions/minor.js", "../../../node_modules/semver/functions/patch.js", "../../../node_modules/semver/functions/prerelease.js", "../../../node_modules/semver/functions/compare.js", "../../../node_modules/semver/functions/rcompare.js", "../../../node_modules/semver/functions/compare-loose.js", "../../../node_modules/semver/functions/compare-build.js", "../../../node_modules/semver/functions/sort.js", "../../../node_modules/semver/functions/rsort.js", "../../../node_modules/semver/functions/gt.js", "../../../node_modules/semver/functions/lt.js", "../../../node_modules/semver/functions/eq.js", "../../../node_modules/semver/functions/neq.js", "../../../node_modules/semver/functions/gte.js", "../../../node_modules/semver/functions/lte.js", "../../../node_modules/semver/functions/cmp.js", "../../../node_modules/semver/functions/coerce.js", "../../../node_modules/semver/internal/lrucache.js", "../../../node_modules/semver/classes/range.js", "../../../node_modules/semver/classes/comparator.js", "../../../node_modules/semver/functions/satisfies.js", "../../../node_modules/semver/ranges/to-comparators.js", "../../../node_modules/semver/ranges/max-satisfying.js", "../../../node_modules/semver/ranges/min-satisfying.js", "../../../node_modules/semver/ranges/min-version.js", "../../../node_modules/semver/ranges/valid.js", "../../../node_modules/semver/ranges/outside.js", "../../../node_modules/semver/ranges/gtr.js", "../../../node_modules/semver/ranges/ltr.js", "../../../node_modules/semver/ranges/intersects.js", "../../../node_modules/semver/ranges/simplify.js", "../../../node_modules/semver/ranges/subset.js", "../../../node_modules/semver/index.js", "../../../node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js", "../../../node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js", "../../../node_modules/jsonwebtoken/lib/validateAsymmetricKey.js", "../../../node_modules/jsonwebtoken/lib/psSupported.js", "../../../node_modules/jsonwebtoken/verify.js", "../../../node_modules/lodash.includes/index.js", "../../../node_modules/lodash.isboolean/index.js", "../../../node_modules/lodash.isinteger/index.js", "../../../node_modules/lodash.isnumber/index.js", "../../../node_modules/lodash.isplainobject/index.js", "../../../node_modules/lodash.isstring/index.js", "../../../node_modules/lodash.once/index.js", "../../../node_modules/jsonwebtoken/sign.js", "../../../node_modules/jsonwebtoken/index.js", "../../../node_modules/node-forge/lib/forge.js", "../../../node_modules/node-forge/lib/baseN.js", "../../../node_modules/node-forge/lib/util.js", "../../../node_modules/node-forge/lib/cipher.js", "../../../node_modules/node-forge/lib/cipherModes.js", "../../../node_modules/node-forge/lib/aes.js", "../../../node_modules/node-forge/lib/oids.js", "../../../node_modules/node-forge/lib/asn1.js", "../../../node_modules/node-forge/lib/md.js", "../../../node_modules/node-forge/lib/hmac.js", "../../../node_modules/node-forge/lib/md5.js", "../../../node_modules/node-forge/lib/pem.js", "../../../node_modules/node-forge/lib/des.js", "../../../node_modules/node-forge/lib/pbkdf2.js", "../../../node_modules/node-forge/lib/sha256.js", "../../../node_modules/node-forge/lib/prng.js", "../../../node_modules/node-forge/lib/random.js", "../../../node_modules/node-forge/lib/rc2.js", "../../../node_modules/node-forge/lib/jsbn.js", "../../../node_modules/node-forge/lib/sha1.js", "../../../node_modules/node-forge/lib/pkcs1.js", "../../../node_modules/node-forge/lib/prime.js", "../../../node_modules/node-forge/lib/rsa.js", "../../../node_modules/node-forge/lib/pbe.js", "../../../node_modules/node-forge/lib/pkcs7asn1.js", "../../../node_modules/node-forge/lib/mgf1.js", "../../../node_modules/node-forge/lib/mgf.js", "../../../node_modules/node-forge/lib/pss.js", "../../../node_modules/node-forge/lib/x509.js", "../../../node_modules/node-forge/lib/pkcs12.js", "../../../node_modules/node-forge/lib/pki.js", "../../../node_modules/node-forge/lib/tls.js", "../../../node_modules/node-forge/lib/aesCipherSuites.js", "../../../node_modules/node-forge/lib/sha512.js", "../../../node_modules/node-forge/lib/asn1-validator.js", "../../../node_modules/node-forge/lib/ed25519.js", "../../../node_modules/node-forge/lib/kem.js", "../../../node_modules/node-forge/lib/log.js", "../../../node_modules/node-forge/lib/md.all.js", "../../../node_modules/node-forge/lib/pkcs7.js", "../../../node_modules/node-forge/lib/ssh.js", "../../../node_modules/node-forge/lib/index.js", "../../../node_modules/pako/lib/utils/common.js", "../../../node_modules/pako/lib/zlib/trees.js", "../../../node_modules/pako/lib/zlib/adler32.js", "../../../node_modules/pako/lib/zlib/crc32.js", "../../../node_modules/pako/lib/zlib/messages.js", "../../../node_modules/pako/lib/zlib/deflate.js", "../../../node_modules/pako/lib/utils/strings.js", "../../../node_modules/pako/lib/zlib/zstream.js", "../../../node_modules/pako/lib/deflate.js", "../../../node_modules/pako/lib/zlib/inffast.js", "../../../node_modules/pako/lib/zlib/inftrees.js", "../../../node_modules/pako/lib/zlib/inflate.js", "../../../node_modules/pako/lib/zlib/constants.js", "../../../node_modules/pako/lib/zlib/gzheader.js", "../../../node_modules/pako/lib/inflate.js", "../../../node_modules/pako/index.js", "../../../node_modules/samlify/src/utility.ts", "../../../node_modules/samlify/src/urn.ts", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/regex.js", "../../../node_modules/uuid/dist/esm-browser/validate.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/v1.js", "../../../node_modules/uuid/dist/esm-browser/parse.js", "../../../node_modules/uuid/dist/esm-browser/v35.js", "../../../node_modules/uuid/dist/esm-browser/md5.js", "../../../node_modules/uuid/dist/esm-browser/v3.js", "../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../node_modules/uuid/dist/esm-browser/sha1.js", "../../../node_modules/uuid/dist/esm-browser/v5.js", "../../../node_modules/uuid/dist/esm-browser/nil.js", "../../../node_modules/uuid/dist/esm-browser/version.js", "../../../node_modules/uuid/dist/esm-browser/index.js", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/fs/promises.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/fs/constants.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/fs/promises.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/fs/classes.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/fs/fs.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/fs.mjs", "node-built-in-modules:fs", "../../../node_modules/xpath/xpath.js", "../../../node_modules/@xmldom/xmldom/lib/conventions.js", "../../../node_modules/@xmldom/xmldom/lib/dom.js", "../../../node_modules/@xmldom/xmldom/lib/entities.js", "../../../node_modules/@xmldom/xmldom/lib/sax.js", "../../../node_modules/@xmldom/xmldom/lib/dom-parser.js", "../../../node_modules/@xmldom/xmldom/lib/index.js", "../../../node_modules/samlify/src/api.ts", "../../../node_modules/camelcase/index.js", "../../../node_modules/samlify/src/extractor.ts", "../../../node_modules/samlify/src/metadata.ts", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/os/constants.mjs", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/node_modules/unenv/dist/runtime/node/constants.mjs", "node-built-in-modules:constants", "../../../node_modules/node-rsa/src/utils.js", "../../../node_modules/node-rsa/src/libs/jsbn.js", "../../../node_modules/node-rsa/src/schemes/pkcs1.js", "../../../node_modules/node-rsa/src/schemes/oaep.js", "../../../node_modules/node-rsa/src/schemes/pss.js", "../../../node_modules/node-rsa/src/schemes/schemes.js", "../../../node_modules/node-rsa/src/encryptEngines/js.js", "../../../node_modules/node-rsa/src/encryptEngines/io.js", "../../../node_modules/node-rsa/src/encryptEngines/node12.js", "../../../node_modules/node-rsa/src/encryptEngines/encryptEngines.js", "../../../node_modules/node-rsa/src/libs/rsa.js", "../../../node_modules/asn1/lib/ber/errors.js", "../../../node_modules/asn1/lib/ber/types.js", "node-built-in-modules:assert", "../../../node_modules/safer-buffer/safer.js", "../../../node_modules/asn1/lib/ber/reader.js", "../../../node_modules/asn1/lib/ber/writer.js", "../../../node_modules/asn1/lib/ber/index.js", "../../../node_modules/asn1/lib/index.js", "../../../node_modules/node-rsa/src/formats/pkcs1.js", "../../../node_modules/node-rsa/src/formats/pkcs8.js", "../../../node_modules/node-rsa/src/formats/components.js", "../../../node_modules/node-rsa/src/formats/openssh.js", "../../../node_modules/node-rsa/src/formats/formats.js", "../../../node_modules/node-rsa/src/NodeRSA.js", "../../../node_modules/xml-crypto/node_modules/xpath/xpath.js", "../../../node_modules/@xmldom/is-dom-node/src/index.ts", "../../../node_modules/xml-crypto/src/utils.ts", "../../../node_modules/xml-crypto/src/c14n-canonicalization.ts", "../../../node_modules/xml-crypto/src/exclusive-canonicalization.ts", "../../../node_modules/xml-crypto/src/enveloped-signature.ts", "../../../node_modules/xml-crypto/src/hash-algorithms.ts", "../../../node_modules/xml-crypto/src/types.ts", "../../../node_modules/xml-crypto/src/signature-algorithms.ts", "../../../node_modules/xml-crypto/src/signed-xml.ts", "../../../node_modules/xml-crypto/src/index.ts", "node-built-in-modules:path", "../../../node_modules/escape-html/index.js", "../../../node_modules/@authenio/xml-encryption/lib/templates/encrypted-key.tpl.xml.js", "../../../node_modules/@authenio/xml-encryption/lib/templates/keyinfo.tpl.xml.js", "../../../node_modules/@authenio/xml-encryption/lib/utils.js", "../../../node_modules/@authenio/xml-encryption/lib/xmlenc.js", "../../../node_modules/@authenio/xml-encryption/lib/index.js", "../../../node_modules/xml-escape/index.js", "../../../node_modules/samlify/src/libsaml.ts", "../../../node_modules/xml/lib/escapeForXML.js", "../../../node_modules/xml/lib/xml.js", "../../../node_modules/samlify/src/metadata-idp.ts", "../../../node_modules/samlify/src/metadata-sp.ts", "node-built-in-modules:url", "../../../node_modules/samlify/src/binding-redirect.ts", "../../../node_modules/samlify/src/binding-post.ts", "../../../node_modules/samlify/src/validator.ts", "../../../node_modules/samlify/src/flow.ts", "../../../node_modules/samlify/src/entity.ts", "../../../node_modules/samlify/src/binding-simplesign.ts", "../../../node_modules/samlify/src/entity-idp.ts", "../../../node_modules/samlify/src/entity-sp.ts", "../../../node_modules/samlify/index.ts", "../bundle-6kWoPr/middleware-loader.entry.ts", "../bundle-6kWoPr/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/itty-router/dist/itty-router.mjs", "../../../src/handlers/auth.ts", "../../../src/utils/password.ts", "../../../node_modules/bcryptjs/index.js", "../../../src/utils/cookies.ts", "../../../src/utils/auth.ts", "../../../src/handlers/users.ts", "../../../src/handlers/applications.ts", "../../../src/handlers/saml.ts", "../../../src/handlers/oidc.ts", "../../../src/utils/cors.ts", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../Program Files/nodejs/node_cache/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "d:\\Project\\sso\\worker\\.wrangler\\tmp\\dev-tyJkK5",
  "sourcesContent": ["function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "export const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\tconst seconds = Math.trunc(now / 1e3);\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "import { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream: WriteStream,\n\tWriteStream,\n\tisatty\n};\n", "export const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\tref() {}\n\tunref() {}\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\tmainModule = undefined;\n\tdomain = undefined;\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "import libDefault from 'buffer';\nmodule.exports = libDefault;", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "import libDefault from 'stream';\nmodule.exports = libDefault;", "export const isRegExp = (val) => val instanceof RegExp;\nexport const isDate = (val) => val instanceof Date;\nexport const isArray = (val) => Array.isArray(val);\nexport const isBoolean = (val) => typeof val === \"boolean\";\nexport const isNull = (val) => val === null;\nexport const isNullOrUndefined = (val) => val === null || val === undefined;\nexport const isNumber = (val) => typeof val === \"number\";\nexport const isString = (val) => typeof val === \"string\";\nexport const isSymbol = (val) => typeof val === \"symbol\";\nexport const isUndefined = (val) => val === undefined;\nexport const isFunction = (val) => typeof val === \"function\";\nexport const isBuffer = (val) => {\n\treturn val && typeof val === \"object\" && typeof val.copy === \"function\" && typeof val.fill === \"function\" && typeof val.readUInt8 === \"function\";\n};\nexport const isDeepStrictEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\nexport const isObject = (val) => val !== null && typeof val === \"object\" && Object.getPrototypeOf(val).isPrototypeOf(Object);\nexport const isError = (val) => val instanceof Error;\nexport const isPrimitive = (val) => {\n\tif (typeof val === \"object\") {\n\t\treturn val === null;\n\t}\n\treturn typeof val !== \"function\";\n};\n", "export const log = (...args) => {\n\tconsole.log(...args);\n};\nexport const debuglog = (section, _cb) => {\n\tconst fn = (msg, ...params) => {\n\t\tif (fn.enabled) {\n\t\t\tconsole.debug(`[${section}] ${msg}`, ...params);\n\t\t}\n\t};\n\tfn.enabled = true;\n\treturn fn;\n};\nexport const debug = debuglog;\nexport const inspect = (object) => JSON.stringify(object, null, 2);\nexport const format = (...args) => _format(...args);\nexport const formatWithOptions = (_options, ...args) => _format(...args);\nfunction _format(fmt, ...args) {\n\tconst re = /(%?)(%([djos]))/g;\n\tif (args.length > 0) {\n\t\tfmt = fmt.replace(re, (match, escaped, ptn, flag) => {\n\t\t\tlet arg = args.shift();\n\t\t\tswitch (flag) {\n\t\t\t\tcase \"o\":\n\t\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\t\targ = JSON.stringify(arg);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\targ = \"\" + arg;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"d\":\n\t\t\t\t\targ = Number(arg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"j\":\n\t\t\t\t\targ = JSON.stringify(arg);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!escaped) {\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t\targs.unshift(arg);\n\t\t\treturn match;\n\t\t});\n\t}\n\tif (args.length > 0) {\n\t\tfmt += \" \" + args.join(\" \");\n\t}\n\tfmt = fmt.replace(/%{2}/g, \"%\");\n\treturn \"\" + fmt;\n}\n", "import types from \"node:util/types\";\nimport { notImplemented } from \"../_internal/utils.mjs\";\nimport { inherits } from \"./internal/util/inherits.mjs\";\nimport { promisify } from \"./internal/util/promisify.mjs\";\nimport { MIMEParams, MIMEType } from \"./internal/util/mime.mjs\";\nimport { isArray, isBoolean, isBuffer, isDate, isDeepStrictEqual, isError, isFunction, isNull, isNullOrUndefined, isNumber, isObject, isPrimitive, isRegExp, isString, isSymbol, isUndefined } from \"./internal/util/legacy-types.mjs\";\nimport { debug, debuglog, format, formatWithOptions, inspect, log } from \"./internal/util/log.mjs\";\nexport { MIMEParams, MIMEType } from \"./internal/util/mime.mjs\";\nexport * from \"./internal/util/legacy-types.mjs\";\nexport * from \"./internal/util/log.mjs\";\nexport { inherits } from \"./internal/util/inherits.mjs\";\nexport { promisify } from \"./internal/util/promisify.mjs\";\nexport { default as types } from \"node:util/types\";\nexport const TextDecoder = globalThis.TextDecoder;\nexport const TextEncoder = globalThis.TextEncoder;\nexport const deprecate = (fn) => fn;\nexport const _errnoException = /* @__PURE__ */ notImplemented(\"util._errnoException\");\nexport const _exceptionWithHostPort = /* @__PURE__ */ notImplemented(\"util._exceptionWithHostPort\");\nexport const _extend = /* @__PURE__ */ notImplemented(\"util._extend\");\nexport const aborted = /* @__PURE__ */ notImplemented(\"util.aborted\");\nexport const callbackify = /* @__PURE__ */ notImplemented(\"util.callbackify\");\nexport const getSystemErrorMap = /* @__PURE__ */ notImplemented(\"util.getSystemErrorMap\");\nexport const getSystemErrorName = /* @__PURE__ */ notImplemented(\"util.getSystemErrorName\");\nexport const toUSVString = /* @__PURE__ */ notImplemented(\"util.toUSVString\");\nexport const stripVTControlCharacters = /* @__PURE__ */ notImplemented(\"util.stripVTControlCharacters\");\nexport const transferableAbortController = /* @__PURE__ */ notImplemented(\"util.transferableAbortController\");\nexport const transferableAbortSignal = /* @__PURE__ */ notImplemented(\"util.transferableAbortSignal\");\nexport const parseArgs = /* @__PURE__ */ notImplemented(\"util.parseArgs\");\nexport const parseEnv = /* @__PURE__ */ notImplemented(\"util.parseEnv\");\nexport const styleText = /* @__PURE__ */ notImplemented(\"util.styleText\");\n/** @deprecated */\nexport const getCallSite = /* @__PURE__ */ notImplemented(\"util.getCallSite\");\nexport const getCallSites = /* @__PURE__ */ notImplemented(\"util.getCallSites\");\nexport const getSystemErrorMessage = /* @__PURE__ */ notImplemented(\"util.getSystemErrorMessage\");\nexport default {\n\t_errnoException,\n\t_exceptionWithHostPort,\n\t_extend,\n\taborted,\n\tcallbackify,\n\tdeprecate,\n\tgetCallSite,\n\tgetCallSites,\n\tgetSystemErrorMessage,\n\tgetSystemErrorMap,\n\tgetSystemErrorName,\n\tinherits,\n\tpromisify,\n\tstripVTControlCharacters,\n\ttoUSVString,\n\tTextDecoder,\n\tTextEncoder,\n\ttypes,\n\ttransferableAbortController,\n\ttransferableAbortSignal,\n\tparseArgs,\n\tparseEnv,\n\tstyleText,\n\tMIMEParams,\n\tMIMEType,\n\tisArray,\n\tisBoolean,\n\tisBuffer,\n\tisDate,\n\tisDeepStrictEqual,\n\tisError,\n\tisFunction,\n\tisNull,\n\tisNullOrUndefined,\n\tisNumber,\n\tisObject,\n\tisPrimitive,\n\tisRegExp,\n\tisString,\n\tisSymbol,\n\tisUndefined,\n\tdebug,\n\tdebuglog,\n\tformat,\n\tformatWithOptions,\n\tinspect,\n\tlog\n};\n", "import {\n  _errnoException,\n  _exceptionWithHostPort,\n  getSystemErrorMap,\n  getSystemErrorName,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  parseEnv,\n  styleText\n} from \"unenv/node/util\";\nexport {\n  _errnoException,\n  _exceptionWithHostPort,\n  getSystemErrorMap,\n  getSystemErrorName,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  parseEnv,\n  styleText\n} from \"unenv/node/util\";\nconst workerdUtil = process.getBuiltinModule(\"node:util\");\nexport const {\n  MIMEParams,\n  MIMEType,\n  TextDecoder,\n  TextEncoder,\n  // @ts-expect-error missing types?\n  _extend,\n  aborted,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  format,\n  formatWithOptions,\n  // @ts-expect-error unknown type\n  getCallSite,\n  inherits,\n  inspect,\n  isArray,\n  isDeepStrictEqual,\n  log,\n  parseArgs,\n  promisify,\n  stripVTControlCharacters,\n  toUSVString,\n  transferableAbortController,\n  transferableAbortSignal\n} = workerdUtil;\nexport const types = workerdUtil.types;\nexport default {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  _errnoException,\n  _exceptionWithHostPort,\n  // @ts-expect-error unenv has unknown type\n  getSystemErrorMap,\n  // @ts-expect-error unenv has unknown type\n  getSystemErrorName,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  // @ts-expect-error unenv has unknown type\n  parseEnv,\n  // @ts-expect-error unenv has unknown type\n  styleText,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  _extend,\n  aborted,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  format,\n  formatWithOptions,\n  getCallSite,\n  inherits,\n  inspect,\n  isArray,\n  isDeepStrictEqual,\n  log,\n  MIMEParams,\n  MIMEType,\n  parseArgs,\n  promisify,\n  stripVTControlCharacters,\n  TextDecoder,\n  TextEncoder,\n  toUSVString,\n  transferableAbortController,\n  transferableAbortSignal,\n  // special-cased deep merged symbols\n  types\n};\n", "import libDefault from 'util';\nmodule.exports = libDefault;", "/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n", "export const subtle = globalThis.crypto?.subtle;\nexport const randomUUID = () => {\n\treturn globalThis.crypto?.randomUUID();\n};\nexport const getRandomValues = (array) => {\n\treturn globalThis.crypto?.getRandomValues(array);\n};\n", "import { notImplemented, notImplementedClass } from \"../../../_internal/utils.mjs\";\nimport { getRandomValues } from \"./web.mjs\";\nconst MAX_RANDOM_VALUE_BYTES = 65536;\nexport const webcrypto = new Proxy(globalThis.crypto, { get(_, key) {\n\tif (key === \"CryptoKey\") {\n\t\treturn globalThis.CryptoKey;\n\t}\n\tif (typeof globalThis.crypto[key] === \"function\") {\n\t\treturn globalThis.crypto[key].bind(globalThis.crypto);\n\t}\n\treturn globalThis.crypto[key];\n} });\nexport const randomBytes = (size, cb) => {\n\tconst bytes = Buffer.alloc(size, 0, undefined);\n\tfor (let generated = 0; generated < size; generated += MAX_RANDOM_VALUE_BYTES) {\n\t\tgetRandomValues(\n\t\t\t// Use subarray to get a view of the buffer\n\t\t\tUint8Array.prototype.subarray.call(bytes, generated, generated + MAX_RANDOM_VALUE_BYTES)\n);\n\t}\n\tif (typeof cb === \"function\") {\n\t\tcb(null, bytes);\n\t\treturn undefined;\n\t}\n\treturn bytes;\n};\nexport const rng = randomBytes;\nexport const prng = randomBytes;\nexport const fips = false;\nexport const checkPrime = /* @__PURE__ */ notImplemented(\"crypto.checkPrime\");\nexport const checkPrimeSync = /* @__PURE__ */ notImplemented(\"crypto.checkPrimeSync\");\n/** @deprecated */\nexport const createCipher = /* @__PURE__ */ notImplemented(\"crypto.createCipher\");\n/** @deprecated */\nexport const createDecipher = /* @__PURE__ */ notImplemented(\"crypto.createDecipher\");\nexport const pseudoRandomBytes = /* @__PURE__ */ notImplemented(\"crypto.pseudoRandomBytes\");\nexport const createCipheriv = /* @__PURE__ */ notImplemented(\"crypto.createCipheriv\");\nexport const createDecipheriv = /* @__PURE__ */ notImplemented(\"crypto.createDecipheriv\");\nexport const createDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellman\");\nexport const createDiffieHellmanGroup = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellmanGroup\");\nexport const createECDH = /* @__PURE__ */ notImplemented(\"crypto.createECDH\");\nexport const createHash = /* @__PURE__ */ notImplemented(\"crypto.createHash\");\nexport const createHmac = /* @__PURE__ */ notImplemented(\"crypto.createHmac\");\nexport const createPrivateKey = /* @__PURE__ */ notImplemented(\"crypto.createPrivateKey\");\nexport const createPublicKey = /* @__PURE__ */ notImplemented(\"crypto.createPublicKey\");\nexport const createSecretKey = /* @__PURE__ */ notImplemented(\"crypto.createSecretKey\");\nexport const createSign = /* @__PURE__ */ notImplemented(\"crypto.createSign\");\nexport const createVerify = /* @__PURE__ */ notImplemented(\"crypto.createVerify\");\nexport const diffieHellman = /* @__PURE__ */ notImplemented(\"crypto.diffieHellman\");\nexport const generatePrime = /* @__PURE__ */ notImplemented(\"crypto.generatePrime\");\nexport const generatePrimeSync = /* @__PURE__ */ notImplemented(\"crypto.generatePrimeSync\");\nexport const getCiphers = /* @__PURE__ */ notImplemented(\"crypto.getCiphers\");\nexport const getCipherInfo = /* @__PURE__ */ notImplemented(\"crypto.getCipherInfo\");\nexport const getCurves = /* @__PURE__ */ notImplemented(\"crypto.getCurves\");\nexport const getDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.getDiffieHellman\");\nexport const getHashes = /* @__PURE__ */ notImplemented(\"crypto.getHashes\");\nexport const hkdf = /* @__PURE__ */ notImplemented(\"crypto.hkdf\");\nexport const hkdfSync = /* @__PURE__ */ notImplemented(\"crypto.hkdfSync\");\nexport const pbkdf2 = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2\");\nexport const pbkdf2Sync = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2Sync\");\nexport const generateKeyPair = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPair\");\nexport const generateKeyPairSync = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPairSync\");\nexport const generateKey = /* @__PURE__ */ notImplemented(\"crypto.generateKey\");\nexport const generateKeySync = /* @__PURE__ */ notImplemented(\"crypto.generateKeySync\");\nexport const privateDecrypt = /* @__PURE__ */ notImplemented(\"crypto.privateDecrypt\");\nexport const privateEncrypt = /* @__PURE__ */ notImplemented(\"crypto.privateEncrypt\");\nexport const publicDecrypt = /* @__PURE__ */ notImplemented(\"crypto.publicDecrypt\");\nexport const publicEncrypt = /* @__PURE__ */ notImplemented(\"crypto.publicEncrypt\");\nexport const randomFill = /* @__PURE__ */ notImplemented(\"crypto.randomFill\");\nexport const randomFillSync = /* @__PURE__ */ notImplemented(\"crypto.randomFillSync\");\nexport const randomInt = /* @__PURE__ */ notImplemented(\"crypto.randomInt\");\nexport const scrypt = /* @__PURE__ */ notImplemented(\"crypto.scrypt\");\nexport const scryptSync = /* @__PURE__ */ notImplemented(\"crypto.scryptSync\");\nexport const sign = /* @__PURE__ */ notImplemented(\"crypto.sign\");\nexport const setEngine = /* @__PURE__ */ notImplemented(\"crypto.setEngine\");\nexport const timingSafeEqual = /* @__PURE__ */ notImplemented(\"crypto.timingSafeEqual\");\nexport const getFips = /* @__PURE__ */ notImplemented(\"crypto.getFips\");\nexport const setFips = /* @__PURE__ */ notImplemented(\"crypto.setFips\");\nexport const verify = /* @__PURE__ */ notImplemented(\"crypto.verify\");\nexport const secureHeapUsed = /* @__PURE__ */ notImplemented(\"crypto.secureHeapUsed\");\nexport const hash = /* @__PURE__ */ notImplemented(\"crypto.hash\");\nexport const Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.Certificate\");\nexport const Cipher = /* @__PURE__ */ notImplementedClass(\"crypto.Cipher\");\nexport const Cipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Cipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const Decipher = /* @__PURE__ */ notImplementedClass(\"crypto.Decipher\");\nexport const Decipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Decipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const DiffieHellman = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellman\");\nexport const DiffieHellmanGroup = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellmanGroup\");\nexport const ECDH = /* @__PURE__ */ notImplementedClass(\"crypto.ECDH\");\nexport const Hash = /* @__PURE__ */ notImplementedClass(\"crypto.Hash\");\nexport const Hmac = /* @__PURE__ */ notImplementedClass(\"crypto.Hmac\");\nexport const KeyObject = /* @__PURE__ */ notImplementedClass(\"crypto.KeyObject\");\nexport const Sign = /* @__PURE__ */ notImplementedClass(\"crypto.Sign\");\nexport const Verify = /* @__PURE__ */ notImplementedClass(\"crypto.Verify\");\nexport const X509Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.X509Certificate\");\n", "export const SSL_OP_ALL = 2147485776;\nexport const SSL_OP_ALLOW_NO_DHE_KEX = 1024;\nexport const SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION = 262144;\nexport const SSL_OP_CIPHER_SERVER_PREFERENCE = 4194304;\nexport const SSL_OP_CISCO_ANYCONNECT = 32768;\nexport const SSL_OP_COOKIE_EXCHANGE = 8192;\nexport const SSL_OP_CRYPTOPRO_TLSEXT_BUG = 2147483648;\nexport const SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS = 2048;\nexport const SSL_OP_LEGACY_SERVER_CONNECT = 4;\nexport const SSL_OP_NO_COMPRESSION = 131072;\nexport const SSL_OP_NO_ENCRYPT_THEN_MAC = 524288;\nexport const SSL_OP_NO_QUERY_MTU = 4096;\nexport const SSL_OP_NO_RENEGOTIATION = 1073741824;\nexport const SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION = 65536;\nexport const SSL_OP_NO_SSLv2 = 0;\nexport const SSL_OP_NO_SSLv3 = 33554432;\nexport const SSL_OP_NO_TICKET = 16384;\nexport const SSL_OP_NO_TLSv1 = 67108864;\nexport const SSL_OP_NO_TLSv1_1 = 268435456;\nexport const SSL_OP_NO_TLSv1_2 = 134217728;\nexport const SSL_OP_NO_TLSv1_3 = 536870912;\nexport const SSL_OP_PRIORITIZE_CHACHA = 2097152;\nexport const SSL_OP_TLS_ROLLBACK_BUG = 8388608;\nexport const ENGINE_METHOD_RSA = 1;\nexport const ENGINE_METHOD_DSA = 2;\nexport const ENGINE_METHOD_DH = 4;\nexport const ENGINE_METHOD_RAND = 8;\nexport const ENGINE_METHOD_EC = 2048;\nexport const ENGINE_METHOD_CIPHERS = 64;\nexport const ENGINE_METHOD_DIGESTS = 128;\nexport const ENGINE_METHOD_PKEY_METHS = 512;\nexport const ENGINE_METHOD_PKEY_ASN1_METHS = 1024;\nexport const ENGINE_METHOD_ALL = 65535;\nexport const ENGINE_METHOD_NONE = 0;\nexport const DH_CHECK_P_NOT_SAFE_PRIME = 2;\nexport const DH_CHECK_P_NOT_PRIME = 1;\nexport const DH_UNABLE_TO_CHECK_GENERATOR = 4;\nexport const DH_NOT_SUITABLE_GENERATOR = 8;\nexport const RSA_PKCS1_PADDING = 1;\nexport const RSA_NO_PADDING = 3;\nexport const RSA_PKCS1_OAEP_PADDING = 4;\nexport const RSA_X931_PADDING = 5;\nexport const RSA_PKCS1_PSS_PADDING = 6;\nexport const RSA_PSS_SALTLEN_DIGEST = -1;\nexport const RSA_PSS_SALTLEN_MAX_SIGN = -2;\nexport const RSA_PSS_SALTLEN_AUTO = -2;\nexport const POINT_CONVERSION_COMPRESSED = 2;\nexport const POINT_CONVERSION_UNCOMPRESSED = 4;\nexport const POINT_CONVERSION_HYBRID = 6;\nexport const defaultCoreCipherList = \"\";\nexport const defaultCipherList = \"\";\nexport const OPENSSL_VERSION_NUMBER = 0;\nexport const TLS1_VERSION = 0;\nexport const TLS1_1_VERSION = 0;\nexport const TLS1_2_VERSION = 0;\nexport const TLS1_3_VERSION = 0;\n", "import { getRandomValues, randomUUID, subtle } from \"./internal/crypto/web.mjs\";\nimport { Certificate, Cipher, Cipheriv, Decipher, Decipheriv, DiffieHellman, DiffieHellmanGroup, ECDH, Hash, Hmac, KeyObject, Sign, Verify, X509Certificate, checkPrime, checkPrimeSync, createCipheriv, createDecipheriv, createDiffieHellman, createDiffieHellmanGroup, createECDH, createHash, createHmac, createPrivateKey, createPublicKey, createSecretKey, createSign, createVerify, diffieHellman, fips, generateKey, generateKeyPair, generateKeyPairSync, generateKeySync, generatePrime, generatePrimeSync, getCipherInfo, getCiphers, getCurves, getDiffieHellman, getFips, getHashes, hash, hkdf, hkdfSync, pbkdf2, pbkdf2Sync, privateDecrypt, privateEncrypt, pseudoRandomBytes, publicDecrypt, prng, publicEncrypt, randomBytes, randomFill, randomFillSync, randomInt, rng, scrypt, scryptSync, secureHeapUsed, setEngine, setFips, sign, timingSafeEqual, verify, webcrypto } from \"./internal/crypto/node.mjs\";\nimport { OPENSSL_VERSION_NUMBER, SSL_OP_ALL, SSL_OP_ALLOW_NO_DHE_KEX, SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION, SSL_OP_CIPHER_SERVER_PREFERENCE, SSL_OP_CISCO_ANYCONNECT, SSL_OP_COOKIE_EXCHANGE, SSL_OP_CRYPTOPRO_TLSEXT_BUG, SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS, SSL_OP_LEGACY_SERVER_CONNECT, SSL_OP_NO_COMPRESSION, SSL_OP_NO_ENCRYPT_THEN_MAC, SSL_OP_NO_QUERY_MTU, SSL_OP_NO_RENEGOTIATION, SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION, SSL_OP_NO_SSLv2, SSL_OP_NO_SSLv3, SSL_OP_NO_TICKET, SSL_OP_NO_TLSv1, SSL_OP_NO_TLSv1_1, SSL_OP_NO_TLSv1_2, SSL_OP_NO_TLSv1_3, SSL_OP_PRIORITIZE_CHACHA, SSL_OP_TLS_ROLLBACK_BUG, ENGINE_METHOD_RSA, ENGINE_METHOD_DSA, ENGINE_METHOD_DH, ENGINE_METHOD_RAND, ENGINE_METHOD_EC, ENGINE_METHOD_CIPHERS, ENGINE_METHOD_DIGESTS, ENGINE_METHOD_PKEY_METHS, ENGINE_METHOD_PKEY_ASN1_METHS, ENGINE_METHOD_ALL, ENGINE_METHOD_NONE, DH_CHECK_P_NOT_SAFE_PRIME, DH_CHECK_P_NOT_PRIME, DH_UNABLE_TO_CHECK_GENERATOR, DH_NOT_SUITABLE_GENERATOR, RSA_PKCS1_PADDING, RSA_NO_PADDING, RSA_PKCS1_OAEP_PADDING, RSA_X931_PADDING, RSA_PKCS1_PSS_PADDING, RSA_PSS_SALTLEN_DIGEST, RSA_PSS_SALTLEN_MAX_SIGN, RSA_PSS_SALTLEN_AUTO, defaultCoreCipherList, TLS1_VERSION, TLS1_1_VERSION, TLS1_2_VERSION, TLS1_3_VERSION, POINT_CONVERSION_COMPRESSED, POINT_CONVERSION_UNCOMPRESSED, POINT_CONVERSION_HYBRID, defaultCipherList } from \"./internal/crypto/constants.mjs\";\nexport * from \"./internal/crypto/web.mjs\";\nexport * from \"./internal/crypto/node.mjs\";\nexport const constants = {\n\tOPENSSL_VERSION_NUMBER,\n\tSSL_OP_ALL,\n\tSSL_OP_ALLOW_NO_DHE_KEX,\n\tSSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION,\n\tSSL_OP_CIPHER_SERVER_PREFERENCE,\n\tSSL_OP_CISCO_ANYCONNECT,\n\tSSL_OP_COOKIE_EXCHANGE,\n\tSSL_OP_CRYPTOPRO_TLSEXT_BUG,\n\tSSL_OP_DONT_INSERT_EMPTY_FRAGMENTS,\n\tSSL_OP_LEGACY_SERVER_CONNECT,\n\tSSL_OP_NO_COMPRESSION,\n\tSSL_OP_NO_ENCRYPT_THEN_MAC,\n\tSSL_OP_NO_QUERY_MTU,\n\tSSL_OP_NO_RENEGOTIATION,\n\tSSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION,\n\tSSL_OP_NO_SSLv2,\n\tSSL_OP_NO_SSLv3,\n\tSSL_OP_NO_TICKET,\n\tSSL_OP_NO_TLSv1,\n\tSSL_OP_NO_TLSv1_1,\n\tSSL_OP_NO_TLSv1_2,\n\tSSL_OP_NO_TLSv1_3,\n\tSSL_OP_PRIORITIZE_CHACHA,\n\tSSL_OP_TLS_ROLLBACK_BUG,\n\tENGINE_METHOD_RSA,\n\tENGINE_METHOD_DSA,\n\tENGINE_METHOD_DH,\n\tENGINE_METHOD_RAND,\n\tENGINE_METHOD_EC,\n\tENGINE_METHOD_CIPHERS,\n\tENGINE_METHOD_DIGESTS,\n\tENGINE_METHOD_PKEY_METHS,\n\tENGINE_METHOD_PKEY_ASN1_METHS,\n\tENGINE_METHOD_ALL,\n\tENGINE_METHOD_NONE,\n\tDH_CHECK_P_NOT_SAFE_PRIME,\n\tDH_CHECK_P_NOT_PRIME,\n\tDH_UNABLE_TO_CHECK_GENERATOR,\n\tDH_NOT_SUITABLE_GENERATOR,\n\tRSA_PKCS1_PADDING,\n\tRSA_NO_PADDING,\n\tRSA_PKCS1_OAEP_PADDING,\n\tRSA_X931_PADDING,\n\tRSA_PKCS1_PSS_PADDING,\n\tRSA_PSS_SALTLEN_DIGEST,\n\tRSA_PSS_SALTLEN_MAX_SIGN,\n\tRSA_PSS_SALTLEN_AUTO,\n\tdefaultCoreCipherList,\n\tTLS1_VERSION,\n\tTLS1_1_VERSION,\n\tTLS1_2_VERSION,\n\tTLS1_3_VERSION,\n\tPOINT_CONVERSION_COMPRESSED,\n\tPOINT_CONVERSION_UNCOMPRESSED,\n\tPOINT_CONVERSION_HYBRID,\n\tdefaultCipherList\n};\nexport default {\n\tconstants,\n\tgetRandomValues,\n\trandomUUID,\n\tsubtle,\n\tCertificate,\n\tCipher,\n\tCipheriv,\n\tDecipher,\n\tDecipheriv,\n\tDiffieHellman,\n\tDiffieHellmanGroup,\n\tECDH,\n\tHash,\n\tHmac,\n\tKeyObject,\n\tSign,\n\tVerify,\n\tX509Certificate,\n\tcheckPrime,\n\tcheckPrimeSync,\n\tcreateCipheriv,\n\tcreateDecipheriv,\n\tcreateDiffieHellman,\n\tcreateDiffieHellmanGroup,\n\tcreateECDH,\n\tcreateHash,\n\tcreateHmac,\n\tcreatePrivateKey,\n\tcreatePublicKey,\n\tcreateSecretKey,\n\tcreateSign,\n\tcreateVerify,\n\tdiffieHellman,\n\tfips,\n\tgenerateKey,\n\tgenerateKeyPair,\n\tgenerateKeyPairSync,\n\tgenerateKeySync,\n\tgeneratePrime,\n\tgeneratePrimeSync,\n\tgetCipherInfo,\n\tgetCiphers,\n\tgetCurves,\n\tgetDiffieHellman,\n\tgetFips,\n\tgetHashes,\n\thash,\n\thkdf,\n\thkdfSync,\n\tpbkdf2,\n\tpbkdf2Sync,\n\tprivateDecrypt,\n\tprivateEncrypt,\n\tpseudoRandomBytes,\n\tpublicDecrypt,\n\tprng,\n\tpublicEncrypt,\n\trandomBytes,\n\trandomFill,\n\trandomFillSync,\n\trandomInt,\n\trng,\n\tscrypt,\n\tscryptSync,\n\tsecureHeapUsed,\n\tsetEngine,\n\tsetFips,\n\tsign,\n\ttimingSafeEqual,\n\tverify,\n\twebcrypto\n};\n", "import {\n  Cipher,\n  constants,\n  createCipher,\n  createDecipher,\n  Decipher,\n  pseudoRandomBytes,\n  webcrypto as unenvCryptoWebcrypto\n} from \"unenv/node/crypto\";\nexport { Cipher, constants, Decipher } from \"unenv/node/crypto\";\nconst workerdCrypto = process.getBuiltinModule(\"node:crypto\");\nexport const {\n  Certificate,\n  checkPrime,\n  checkPrimeSync,\n  // @ts-expect-error\n  Cipheriv,\n  createCipheriv,\n  createDecipheriv,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createECDH,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  createSign,\n  createVerify,\n  // @ts-expect-error\n  Decipheriv,\n  diffieHellman,\n  DiffieHellman,\n  DiffieHellmanGroup,\n  ECDH,\n  fips,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCipherInfo,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hash,\n  Hash,\n  hkdf,\n  hkdfSync,\n  Hmac,\n  KeyObject,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  scrypt,\n  scryptSync,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  sign,\n  Sign,\n  subtle,\n  timingSafeEqual,\n  verify,\n  Verify,\n  X509Certificate\n} = workerdCrypto;\nexport const webcrypto = {\n  // @ts-expect-error\n  CryptoKey: unenvCryptoWebcrypto.CryptoKey,\n  getRandomValues,\n  randomUUID,\n  subtle\n};\nexport default {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  Certificate,\n  Cipher,\n  Cipheriv,\n  Decipher,\n  Decipheriv,\n  ECDH,\n  Sign,\n  Verify,\n  X509Certificate,\n  // @ts-expect-error @types/node is out of date - this is a bug in typings\n  constants,\n  createCipheriv,\n  createDecipheriv,\n  createECDH,\n  createSign,\n  createVerify,\n  diffieHellman,\n  getCipherInfo,\n  hash,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  scrypt,\n  scryptSync,\n  sign,\n  verify,\n  // default-only export from unenv\n  // @ts-expect-error unenv has unknown type\n  createCipher,\n  // @ts-expect-error unenv has unknown type\n  createDecipher,\n  // @ts-expect-error unenv has unknown type\n  pseudoRandomBytes,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  DiffieHellman,\n  DiffieHellmanGroup,\n  Hash,\n  Hmac,\n  KeyObject,\n  checkPrime,\n  checkPrimeSync,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hkdf,\n  hkdfSync,\n  pbkdf2,\n  pbkdf2Sync,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  subtle,\n  timingSafeEqual,\n  // default-only export from workerd\n  fips,\n  // special-cased deep merged symbols\n  webcrypto\n};\n", "import libDefault from 'crypto';\nmodule.exports = libDefault;", "'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n", "/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n", "var Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nvar bufferEqual;\nvar timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return crypto.timingSafeEqual(a, b)\n} : function timingSafeEqual(a, b) {\n  if (!bufferEqual) {\n    bufferEqual = require('buffer-equal-constant-time');\n  }\n\n  return bufferEqual(a, b)\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n", "/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n", "/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n", "var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n", "var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;", "var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};", "'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n", "'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n", "'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=15.7.0');\n", "const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=16.9.0');\n", "const ASYMMETRIC_KEY_DETAILS_SUPPORTED = require('./asymmetricKeyDetailsSupported');\nconst RSA_PSS_KEY_DETAILS_SUPPORTED = require('./rsaPssKeyDetailsSupported');\n\nconst allowedAlgorithmsForKeys = {\n  'ec': ['ES256', 'ES384', 'ES512'],\n  'rsa': ['RS256', 'PS256', 'RS384', 'PS384', 'RS512', 'PS512'],\n  'rsa-pss': ['PS256', 'PS384', 'PS512']\n};\n\nconst allowedCurves = {\n  ES256: 'prime256v1',\n  ES384: 'secp384r1',\n  ES512: 'secp521r1',\n};\n\nmodule.exports = function(algorithm, key) {\n  if (!algorithm || !key) return;\n\n  const keyType = key.asymmetricKeyType;\n  if (!keyType) return;\n\n  const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];\n\n  if (!allowedAlgorithms) {\n    throw new Error(`Unknown key type \"${keyType}\".`);\n  }\n\n  if (!allowedAlgorithms.includes(algorithm)) {\n    throw new Error(`\"alg\" parameter for \"${keyType}\" key type must be one of: ${allowedAlgorithms.join(', ')}.`)\n  }\n\n  /*\n   * Ignore the next block from test coverage because it gets executed\n   * conditionally depending on the Node version. Not ignoring it would\n   * prevent us from reaching the target % of coverage for versions of\n   * Node under 15.7.0.\n   */\n  /* istanbul ignore next */\n  if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {\n    switch (keyType) {\n    case 'ec':\n      const keyCurve = key.asymmetricKeyDetails.namedCurve;\n      const allowedCurve = allowedCurves[algorithm];\n\n      if (keyCurve !== allowedCurve) {\n        throw new Error(`\"alg\" parameter \"${algorithm}\" requires curve \"${allowedCurve}\".`);\n      }\n      break;\n\n    case 'rsa-pss':\n      if (RSA_PSS_KEY_DETAILS_SUPPORTED) {\n        const length = parseInt(algorithm.slice(-3), 10);\n        const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n\n        if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${algorithm}.`);\n        }\n\n        if (saltLength !== undefined && saltLength > length >> 3) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${algorithm}.`)\n        }\n      }\n      break;\n    }\n  }\n}\n", "var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n", "const JsonWebTokenError = require('./lib/JsonWebTokenError');\nconst NotBeforeError = require('./lib/NotBeforeError');\nconst TokenExpiredError = require('./lib/TokenExpiredError');\nconst decode = require('./decode');\nconst timespan = require('./lib/timespan');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst jws = require('jws');\nconst {KeyObject, createSecretKey, createPublicKey} = require(\"crypto\");\n\nconst PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];\nconst RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  let done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {\n    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));\n  }\n\n  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  const parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  let decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  const header = decodedToken.header;\n  let getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    const hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      return done(new JsonWebTokenError('please specify \"none\" in \"algorithms\" to verify unsigned tokens'));\n    }\n\n    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {\n      try {\n        secretOrPublicKey = createPublicKey(secretOrPublicKey);\n      } catch (_) {\n        try {\n          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);\n        } catch (_) {\n          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))\n        }\n      }\n    }\n\n    if (!options.algorithms) {\n      if (secretOrPublicKey.type === 'secret') {\n        options.algorithms = HS_ALGS;\n      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {\n        options.algorithms = RSA_KEY_ALGS\n      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {\n        options.algorithms = EC_KEY_ALGS\n      } else {\n        options.algorithms = PUB_KEY_ALGS\n      }\n    }\n\n    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))\n    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))\n    }\n\n    if (!options.allowInvalidAsymmetricKeyTypes) {\n      try {\n        validateAsymmetricKey(header.alg, secretOrPublicKey);\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    let valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    const payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      const match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      const invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      const signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n", "/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n", "/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n", "const timespan = require('./lib/timespan');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst jws = require('jws');\nconst includes = require('lodash.includes');\nconst isBoolean = require('lodash.isboolean');\nconst isInteger = require('lodash.isinteger');\nconst isNumber = require('lodash.isnumber');\nconst isPlainObject = require('lodash.isplainobject');\nconst isString = require('lodash.isstring');\nconst once = require('lodash.once');\nconst { KeyObject, createSecretKey, createPrivateKey } = require('crypto')\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' },\n  allowInsecureKeySizes: { isValid: isBoolean, message: '\"allowInsecureKeySizes\" must be a boolean'},\n  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'}\n};\n\nconst registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      const validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nconst options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))\n    }\n    if (!options.allowInsecureKeySizes &&\n      !header.alg.startsWith('ES') &&\n      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))\n        }\n        callback(null, signature);\n      });\n  } else {\n    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)\n    }\n    return signature\n  }\n};\n", "module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n", "/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n", "/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n", "/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n", "/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n", "/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n", "/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n", "/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n", "/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n", "/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n", "/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n", "/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n", "/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n", "/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n", "/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n", "/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n", "/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n", "/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n", "/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n", "// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n", "/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n", "/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n", "/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n", "/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n", "/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n", "/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n", "/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n", "/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n", "/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n", "/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n", "/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n", "/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n", "/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./md5');\nrequire('./pem');\nrequire('./pki');\nrequire('./random');\nrequire('./sha1');\nrequire('./util');\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n", "/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./tls');\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n", "/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n", "/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n", "/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n", "/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./jsbn');\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n", "/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars in current URL.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null &&\n  typeof window !== 'undefined' && window.location\n) {\n  var query = new URL(window.location.href).searchParams;\n  if(query.has('console.level')) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query.get('console.level').slice(-1)[0]);\n  }\n  if(query.has('console.lock')) {\n    // set with last value\n    var lock = query.get('console.lock').slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n", "/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = require('./md');\n\nrequire('./md5');\nrequire('./sha1');\nrequire('./sha256');\nrequire('./sha512');\n", "/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n", "/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n", "/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = require('./forge');\nrequire('./aes');\nrequire('./aesCipherSuites');\nrequire('./asn1');\nrequire('./cipher');\nrequire('./des');\nrequire('./ed25519');\nrequire('./hmac');\nrequire('./kem');\nrequire('./log');\nrequire('./md.all');\nrequire('./mgf1');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./pkcs1');\nrequire('./pkcs12');\nrequire('./pkcs7');\nrequire('./pki');\nrequire('./prime');\nrequire('./prng');\nrequire('./pss');\nrequire('./random');\nrequire('./rc2');\nrequire('./ssh');\nrequire('./tls');\nrequire('./util');\n", "'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n", "'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n", "'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n", "// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n", "'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n", "'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n", "// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n", "/**\n* @file utility.ts\n* @author tngan\n* @desc  Library for some common functions (e.g. de/inflation, en/decoding)\n*/\nimport { pki, util, asn1 } from 'node-forge';\nimport { inflate, deflate } from 'pako';\n\nconst BASE64_STR = 'base64';\n\n/**\n * @desc Mimic lodash.zipObject\n * @param arr1 {string[]}\n * @param arr2 {[]}\n */\nexport function zipObject(arr1: string[], arr2: any[], skipDuplicated = true) {\n  return arr1.reduce((res, l, i) => {\n\n    if (skipDuplicated) {\n      res[l] = arr2[i];\n      return res;\n    }\n    // if key exists, aggregate with array in order to get rid of duplicate key\n    if (res[l] !== undefined) {\n      res[l] = Array.isArray(res[l])\n        ? res[l].concat(arr2[i])\n        : [res[l]].concat(arr2[i]);\n      return res;\n    }\n\n    res[l] = arr2[i];\n    return res;\n\n  }, {});\n}\n/**\n * @desc Alternative to lodash.flattenDeep\n * @reference https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_flattendeep\n * @param input {[]}\n */\nexport function flattenDeep(input: any[]) {\n  return Array.isArray(input)\n  ? input.reduce( (a, b) => a.concat(flattenDeep(b)) , [])\n  : [input];\n}\n/**\n * @desc Alternative to lodash.last\n * @reference https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_last\n * @param input {[]}\n */\nexport function last(input: any[]) {\n  return input.slice(-1)[0];\n}\n/**\n * @desc Alternative to lodash.uniq\n * @reference https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_uniq\n * @param input {string[]}\n */\nexport function uniq(input: string[]) {\n  const set = new Set(input);\n  return [... set];\n}\n/**\n * @desc Alternative to lodash.get\n * @reference https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get(obj, path, defaultValue) {\n  return path.split('.')\n  .reduce((a, c) => (a && a[c] ? a[c] : (defaultValue || null)), obj);\n}\n/**\n * @desc Check if the input is string\n * @param {any} input\n */\nexport function isString(input: any) {\n  return typeof input === 'string';\n}\n/**\n* @desc Encode string with base64 format\n* @param  {string} message                       plain-text message\n* @return {string} base64 encoded string\n*/\nfunction base64Encode(message: string | number[]) {\n  return Buffer.from(message as string).toString(BASE64_STR);\n}\n/**\n* @desc Decode string from base64 format\n* @param  {string} base64Message                 encoded string\n* @param  {boolean} isBytes                      determine the return value type (True: bytes False: string)\n* @return {bytes/string}  decoded bytes/string depends on isBytes, default is {string}\n*/\nexport function base64Decode(base64Message: string, isBytes?: boolean): string | Buffer {\n  const bytes = Buffer.from(base64Message, BASE64_STR);\n  return Boolean(isBytes) ? bytes : bytes.toString();\n}\n/**\n* @desc Compress the string\n* @param  {string} message\n* @return {string} compressed string\n*/\nfunction deflateString(message: string): number[] {\n  const input = Array.prototype.map.call(message, char => char.charCodeAt(0));\n  return Array.from(deflate(input, { raw: true }));\n}\n/**\n* @desc Decompress the compressed string\n* @param  {string} compressedString\n* @return {string} decompressed string\n*/\nexport function inflateString(compressedString: string): string {\n  const inputBuffer = Buffer.from(compressedString, BASE64_STR);\n  const input = Array.prototype.map.call(inputBuffer.toString('binary'), char => char.charCodeAt(0));\n  return Array.from(inflate(input, { raw: true }))\n    .map((byte: number) => String.fromCharCode(byte))\n    .join('');\n}\n/**\n* @desc Abstract the normalizeCerString and normalizePemString\n* @param {buffer} File stream or string\n* @param {string} String for header and tail\n* @return {string} A formatted certificate string\n*/\nfunction _normalizeCerString(bin: string | Buffer, format: string) {\n  return bin.toString().replace(/\\n/g, '').replace(/\\r/g, '').replace(`-----BEGIN ${format}-----`, '').replace(`-----END ${format}-----`, '').replace(/ /g, '').replace(/\\t/g, '');\n}\n/**\n* @desc Parse the .cer to string format without line break, header and footer\n* @param  {string} certString     declares the certificate contents\n* @return {string} certificiate in string format\n*/\nfunction normalizeCerString(certString: string | Buffer) {\n  return _normalizeCerString(certString, 'CERTIFICATE');\n}\n/**\n* @desc Normalize the string in .pem format without line break, header and footer\n* @param  {string} pemString\n* @return {string} private key in string format\n*/\nfunction normalizePemString(pemString: string | Buffer) {\n  return _normalizeCerString(pemString.toString(), 'RSA PRIVATE KEY');\n}\n/**\n* @desc Return the complete URL\n* @param  {object} req                   HTTP request\n* @return {string} URL\n*/\nfunction getFullURL(req) {\n  return `${req.protocol}://${req.get('host')}${req.originalUrl}`;\n}\n/**\n* @desc Parse input string, return default value if it is undefined\n* @param  {string/boolean}\n* @return {boolean}\n*/\nfunction parseString(str, defaultValue = '') {\n  return str || defaultValue;\n}\n/**\n* @desc Override the object by another object (rtl)\n* @param  {object} default object\n* @param  {object} object applied to the default object\n* @return {object} result object\n*/\nfunction applyDefault(obj1, obj2) {\n  return Object.assign({}, obj1, obj2);\n}\n/**\n* @desc Get public key in pem format from the certificate included in the metadata\n* @param {string} x509 certificate\n* @return {string} public key fetched from the certificate\n*/\nfunction getPublicKeyPemFromCertificate(x509Certificate: string) {\n  const certDerBytes = util.decode64(x509Certificate);\n  const obj = asn1.fromDer(certDerBytes);\n  const cert = pki.certificateFromAsn1(obj);\n  return pki.publicKeyToPem(cert.publicKey);\n}\n/**\n* @desc Read private key from pem-formatted string\n* @param {string | Buffer} keyString pem-formatted string\n* @param {string} protected passphrase of the key\n* @return {string} string in pem format\n* If passphrase is used to protect the .pem content (recommend)\n*/\nexport function readPrivateKey(keyString: string | Buffer, passphrase: string | undefined, isOutputString?: boolean) {\n  return isString(passphrase) ? this.convertToString(pki.privateKeyToPem(pki.decryptRsaPrivateKey(String(keyString), passphrase)), isOutputString) : keyString;\n}\n/**\n* @desc Inline syntax sugar\n*/\nfunction convertToString(input, isOutputString) {\n  return Boolean(isOutputString) ? String(input) : input;\n}\n/**\n * @desc Check if the input is an array with non-zero size\n */\nexport function isNonEmptyArray(a) {\n  return Array.isArray(a) && a.length > 0;\n}\n\nexport function castArrayOpt<T>(a?: T | T[]): T[] {\n  if (a === undefined) return []\n  return Array.isArray(a) ? a : [a]\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined;\n}\n\nconst utility = {\n  isString,\n  base64Encode,\n  base64Decode,\n  deflateString,\n  inflateString,\n  normalizeCerString,\n  normalizePemString,\n  getFullURL,\n  parseString,\n  applyDefault,\n  getPublicKeyPemFromCertificate,\n  readPrivateKey,\n  convertToString,\n  isNonEmptyArray,\n};\n\nexport default utility;\n", "/**\n* @file urn.ts\n* @author tngan\n* @desc  Includes all keywords need in samlify\n*/\n\nexport enum BindingNamespace {\n  Redirect = 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n  Post = 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n  SimpleSign = 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign',\n  Artifact = 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact'\n}\n\nexport enum MessageSignatureOrder {\n  STE = 'sign-then-encrypt',\n  ETS = 'encrypt-then-sign'\n}\n\nexport enum StatusCode {\n  // top-tier\n  Success = 'urn:oasis:names:tc:SAML:2.0:status:Success',\n  Requester = 'urn:oasis:names:tc:SAML:2.0:status:Requester',\n  Responder = 'urn:oasis:names:tc:SAML:2.0:status:Responder',\n  VersionMismatch = 'urn:oasis:names:tc:SAML:2.0:status:VersionMismatch',\n  // second-tier to provide more information\n  AuthFailed = 'urn:oasis:names:tc:SAML:2.0:status:AuthnFailed',\n  InvalidAttrNameOrValue = 'urn:oasis:names:tc:SAML:2.0:status:InvalidAttrNameOrValue',\n  InvalidNameIDPolicy = 'urn:oasis:names:tc:SAML:2.0:status:InvalidNameIDPolicy',\n  NoAuthnContext = 'urn:oasis:names:tc:SAML:2.0:status:NoAuthnContext',\n  NoAvailableIDP = 'urn:oasis:names:tc:SAML:2.0:status:NoAvailableIDP',\n  NoPassive = 'urn:oasis:names:tc:SAML:2.0:status:NoPassive',\n  NoSupportedIDP = 'urn:oasis:names:tc:SAML:2.0:status:NoSupportedIDP',\n  PartialLogout = 'urn:oasis:names:tc:SAML:2.0:status:PartialLogout',\n  ProxyCountExceeded = 'urn:oasis:names:tc:SAML:2.0:status:ProxyCountExceeded',\n  RequestDenied = 'urn:oasis:names:tc:SAML:2.0:status:RequestDenied',\n  RequestUnsupported = 'urn:oasis:names:tc:SAML:2.0:status:RequestUnsupported',\n  RequestVersionDeprecated = 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionDeprecated',\n  RequestVersionTooHigh = 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionTooHigh',\n  RequestVersionTooLow = 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionTooLow',\n  ResourceNotRecognized = 'urn:oasis:names:tc:SAML:2.0:status:ResourceNotRecognized',\n  TooManyResponses = 'urn:oasis:names:tc:SAML:2.0:status:TooManyResponses',\n  UnknownAttrProfile = 'urn:oasis:names:tc:SAML:2.0:status:UnknownAttrProfile',\n  UnknownPrincipal = 'urn:oasis:names:tc:SAML:2.0:status:UnknownPrincipal',\n  UnsupportedBinding = 'urn:oasis:names:tc:SAML:2.0:status:UnsupportedBinding',\n}\n\nconst namespace = {\n  binding: {\n    redirect: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n    post: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n    simpleSign: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign',\n    artifact: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact',\n  },\n  names: {\n    protocol: 'urn:oasis:names:tc:SAML:2.0:protocol',\n    assertion: 'urn:oasis:names:tc:SAML:2.0:assertion',\n    metadata: 'urn:oasis:names:tc:SAML:2.0:metadata',\n    userLogout: 'urn:oasis:names:tc:SAML:2.0:logout:user',\n    adminLogout: 'urn:oasis:names:tc:SAML:2.0:logout:admin',\n  },\n  authnContextClassRef: {\n    password: 'urn:oasis:names:tc:SAML:2.0:ac:classes:Password',\n    passwordProtectedTransport: 'urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport',\n  },\n  format: {\n    emailAddress: 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress',\n    persistent: 'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent',\n    transient: 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient',\n    entity: 'urn:oasis:names:tc:SAML:2.0:nameid-format:entity',\n    unspecified: 'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified',\n    kerberos: 'urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos',\n    windowsDomainQualifiedName: 'urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName',\n    x509SubjectName: 'urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName',\n  },\n  statusCode: {\n    // permissible top-level status codes\n    success: 'urn:oasis:names:tc:SAML:2.0:status:Success',\n    requester: 'urn:oasis:names:tc:SAML:2.0:status:Requester',\n    responder: 'urn:oasis:names:tc:SAML:2.0:status:Responder',\n    versionMismatch: 'urn:oasis:names:tc:SAML:2.0:status:VersionMismatch',\n    // second-level status codes\n    authFailed: 'urn:oasis:names:tc:SAML:2.0:status:AuthnFailed',\n    invalidAttrNameOrValue: 'urn:oasis:names:tc:SAML:2.0:status:InvalidAttrNameOrValue',\n    invalidNameIDPolicy: 'urn:oasis:names:tc:SAML:2.0:status:InvalidNameIDPolicy',\n    noAuthnContext: 'urn:oasis:names:tc:SAML:2.0:status:NoAuthnContext',\n    noAvailableIDP: 'urn:oasis:names:tc:SAML:2.0:status:NoAvailableIDP',\n    noPassive: 'urn:oasis:names:tc:SAML:2.0:status:NoPassive',\n    noSupportedIDP: 'urn:oasis:names:tc:SAML:2.0:status:NoSupportedIDP',\n    partialLogout: 'urn:oasis:names:tc:SAML:2.0:status:PartialLogout',\n    proxyCountExceeded: 'urn:oasis:names:tc:SAML:2.0:status:ProxyCountExceeded',\n    requestDenied: 'urn:oasis:names:tc:SAML:2.0:status:RequestDenied',\n    requestUnsupported: 'urn:oasis:names:tc:SAML:2.0:status:RequestUnsupported',\n    requestVersionDeprecated: 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionDeprecated',\n    requestVersionTooHigh: 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionTooHigh',\n    requestVersionTooLow: 'urn:oasis:names:tc:SAML:2.0:status:RequestVersionTooLow',\n    resourceNotRecognized: 'urn:oasis:names:tc:SAML:2.0:status:ResourceNotRecognized',\n    tooManyResponses: 'urn:oasis:names:tc:SAML:2.0:status:TooManyResponses',\n    unknownAttrProfile: 'urn:oasis:names:tc:SAML:2.0:status:UnknownAttrProfile',\n    unknownPrincipal: 'urn:oasis:names:tc:SAML:2.0:status:UnknownPrincipal',\n    unsupportedBinding: 'urn:oasis:names:tc:SAML:2.0:status:UnsupportedBinding',\n  },\n};\n\nconst tags = {\n  request: {\n    AllowCreate: '{AllowCreate}',\n    AssertionConsumerServiceURL: '{AssertionConsumerServiceURL}',\n    AuthnContextClassRef: '{AuthnContextClassRef}',\n    AssertionID: '{AssertionID}',\n    Audience: '{Audience}',\n    AuthnStatement: '{AuthnStatement}',\n    AttributeStatement: '{AttributeStatement}',\n    ConditionsNotBefore: '{ConditionsNotBefore}',\n    ConditionsNotOnOrAfter: '{ConditionsNotOnOrAfter}',\n    Destination: '{Destination}',\n    EntityID: '{EntityID}',\n    ID: '{ID}',\n    Issuer: '{Issuer}',\n    IssueInstant: '{IssueInstant}',\n    InResponseTo: '{InResponseTo}',\n    NameID: '{NameID}',\n    NameIDFormat: '{NameIDFormat}',\n    ProtocolBinding: '{ProtocolBinding}',\n    SessionIndex: '{SessionIndex}',\n    SubjectRecipient: '{SubjectRecipient}',\n    SubjectConfirmationDataNotOnOrAfter: '{SubjectConfirmationDataNotOnOrAfter}',\n    StatusCode: '{StatusCode}',\n  },\n  xmlTag: {\n    loginRequest: 'AuthnRequest',\n    logoutRequest: 'LogoutRequest',\n    loginResponse: 'Response',\n    logoutResponse: 'LogoutResponse',\n  },\n};\n\nconst messageConfigurations = {\n  signingOrder: {\n    SIGN_THEN_ENCRYPT: 'sign-then-encrypt',\n    ENCRYPT_THEN_SIGN: 'encrypt-then-sign',\n  },\n};\n\nconst algorithms = {\n  signature: {\n    RSA_SHA1: 'http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n    RSA_SHA256: 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',\n    RSA_SHA512: 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512',\n  },\n  encryption: {\n    data: {\n      AES_128: 'http://www.w3.org/2001/04/xmlenc#aes128-cbc',\n      AES_256: 'http://www.w3.org/2001/04/xmlenc#aes256-cbc',\n      TRI_DEC: 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc',\n      AES_128_GCM: 'http://www.w3.org/2009/xmlenc11#aes128-gcm'\n    },\n    key: {\n      RSA_OAEP_MGF1P: 'http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p',\n      RSA_1_5: 'http://www.w3.org/2001/04/xmlenc#rsa-1_5',\n    },\n  },\n  digest: {\n    'http://www.w3.org/2000/09/xmldsig#rsa-sha1': 'http://www.w3.org/2000/09/xmldsig#sha1',\n    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256': 'http://www.w3.org/2001/04/xmlenc#sha256',\n    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512': 'http://www.w3.org/2001/04/xmlenc#sha512', // support hashing algorithm sha512 in xml-crypto after 0.8.0\n  },\n};\n\nexport enum ParserType {\n  SAMLRequest = 'SAMLRequest',\n  SAMLResponse = 'SAMLResponse',\n  LogoutRequest = 'LogoutRequest',\n  LogoutResponse = 'LogoutResponse'\n}\n\nconst wording = {\n  urlParams: {\n    samlRequest: 'SAMLRequest',\n    samlResponse: 'SAMLResponse',\n    logoutRequest: 'LogoutRequest',\n    logoutResponse: 'LogoutResponse',\n    sigAlg: 'SigAlg',\n    signature: 'Signature',\n    relayState: 'RelayState',\n  },\n  binding: {\n    redirect: 'redirect',\n    post: 'post',\n    simpleSign: 'simpleSign',\n    artifact: 'artifact',\n  },\n  certUse: {\n    signing: 'signing',\n    encrypt: 'encryption',\n  },\n  metadata: {\n    sp: 'metadata-sp',\n    idp: 'metadata-idp',\n  },\n};\n\n// https://wiki.shibboleth.net/confluence/display/CONCEPT/MetadataForSP\n// some idps restrict the order of elements in entity descriptors\nconst elementsOrder = {\n  default: ['KeyDescriptor', 'NameIDFormat', 'SingleLogoutService', 'AssertionConsumerService'],\n  onelogin: ['KeyDescriptor', 'NameIDFormat', 'SingleLogoutService', 'AssertionConsumerService'],\n  shibboleth: ['KeyDescriptor', 'SingleLogoutService', 'NameIDFormat', 'AssertionConsumerService', 'AttributeConsumingService'],\n};\n\nexport { namespace, tags, algorithms, wording, elementsOrder, messageConfigurations };\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "import { notImplemented } from \"../../../_internal/utils.mjs\";\nexport const access = /* @__PURE__ */ notImplemented(\"fs.access\");\nexport const copyFile = /* @__PURE__ */ notImplemented(\"fs.copyFile\");\nexport const cp = /* @__PURE__ */ notImplemented(\"fs.cp\");\nexport const open = /* @__PURE__ */ notImplemented(\"fs.open\");\nexport const opendir = /* @__PURE__ */ notImplemented(\"fs.opendir\");\nexport const rename = /* @__PURE__ */ notImplemented(\"fs.rename\");\nexport const truncate = /* @__PURE__ */ notImplemented(\"fs.truncate\");\nexport const rm = /* @__PURE__ */ notImplemented(\"fs.rm\");\nexport const rmdir = /* @__PURE__ */ notImplemented(\"fs.rmdir\");\nexport const mkdir = /* @__PURE__ */ notImplemented(\"fs.mkdir\");\nexport const readdir = /* @__PURE__ */ notImplemented(\"fs.readdir\");\nexport const readlink = /* @__PURE__ */ notImplemented(\"fs.readlink\");\nexport const symlink = /* @__PURE__ */ notImplemented(\"fs.symlink\");\nexport const lstat = /* @__PURE__ */ notImplemented(\"fs.lstat\");\nexport const stat = /* @__PURE__ */ notImplemented(\"fs.stat\");\nexport const link = /* @__PURE__ */ notImplemented(\"fs.link\");\nexport const unlink = /* @__PURE__ */ notImplemented(\"fs.unlink\");\nexport const chmod = /* @__PURE__ */ notImplemented(\"fs.chmod\");\nexport const lchmod = /* @__PURE__ */ notImplemented(\"fs.lchmod\");\nexport const lchown = /* @__PURE__ */ notImplemented(\"fs.lchown\");\nexport const chown = /* @__PURE__ */ notImplemented(\"fs.chown\");\nexport const utimes = /* @__PURE__ */ notImplemented(\"fs.utimes\");\nexport const lutimes = /* @__PURE__ */ notImplemented(\"fs.lutimes\");\nexport const realpath = /* @__PURE__ */ notImplemented(\"fs.realpath\");\nexport const mkdtemp = /* @__PURE__ */ notImplemented(\"fs.mkdtemp\");\nexport const writeFile = /* @__PURE__ */ notImplemented(\"fs.writeFile\");\nexport const appendFile = /* @__PURE__ */ notImplemented(\"fs.appendFile\");\nexport const readFile = /* @__PURE__ */ notImplemented(\"fs.readFile\");\nexport const watch = /* @__PURE__ */ notImplemented(\"fs.watch\");\nexport const statfs = /* @__PURE__ */ notImplemented(\"fs.statfs\");\nexport const glob = /* @__PURE__ */ notImplemented(\"fs.glob\");\n", "export const UV_FS_SYMLINK_DIR = 1;\nexport const UV_FS_SYMLINK_JUNCTION = 2;\nexport const O_RDONLY = 0;\nexport const O_WRONLY = 1;\nexport const O_RDWR = 2;\nexport const UV_DIRENT_UNKNOWN = 0;\nexport const UV_DIRENT_FILE = 1;\nexport const UV_DIRENT_DIR = 2;\nexport const UV_DIRENT_LINK = 3;\nexport const UV_DIRENT_FIFO = 4;\nexport const UV_DIRENT_SOCKET = 5;\nexport const UV_DIRENT_CHAR = 6;\nexport const UV_DIRENT_BLOCK = 7;\nexport const EXTENSIONLESS_FORMAT_JAVASCRIPT = 0;\nexport const EXTENSIONLESS_FORMAT_WASM = 1;\nexport const S_IFMT = 61440;\nexport const S_IFREG = 32768;\nexport const S_IFDIR = 16384;\nexport const S_IFCHR = 8192;\nexport const S_IFBLK = 24576;\nexport const S_IFIFO = 4096;\nexport const S_IFLNK = 40960;\nexport const S_IFSOCK = 49152;\nexport const O_CREAT = 64;\nexport const O_EXCL = 128;\nexport const UV_FS_O_FILEMAP = 0;\nexport const O_NOCTTY = 256;\nexport const O_TRUNC = 512;\nexport const O_APPEND = 1024;\nexport const O_DIRECTORY = 65536;\nexport const O_NOATIME = 262144;\nexport const O_NOFOLLOW = 131072;\nexport const O_SYNC = 1052672;\nexport const O_DSYNC = 4096;\nexport const O_DIRECT = 16384;\nexport const O_NONBLOCK = 2048;\nexport const S_IRWXU = 448;\nexport const S_IRUSR = 256;\nexport const S_IWUSR = 128;\nexport const S_IXUSR = 64;\nexport const S_IRWXG = 56;\nexport const S_IRGRP = 32;\nexport const S_IWGRP = 16;\nexport const S_IXGRP = 8;\nexport const S_IRWXO = 7;\nexport const S_IROTH = 4;\nexport const S_IWOTH = 2;\nexport const S_IXOTH = 1;\nexport const F_OK = 0;\nexport const R_OK = 4;\nexport const W_OK = 2;\nexport const X_OK = 1;\nexport const UV_FS_COPYFILE_EXCL = 1;\nexport const COPYFILE_EXCL = 1;\nexport const UV_FS_COPYFILE_FICLONE = 2;\nexport const COPYFILE_FICLONE = 2;\nexport const UV_FS_COPYFILE_FICLONE_FORCE = 4;\nexport const COPYFILE_FICLONE_FORCE = 4;\n", "import { access, appendFile, chmod, chown, copyFile, cp, glob, lchmod, lchown, link, lstat, lutimes, mkdir, mkdtemp, open, opendir, readFile, readdir, readlink, realpath, rename, rm, rmdir, stat, statfs, symlink, truncate, unlink, utimes, watch, writeFile } from \"../internal/fs/promises.mjs\";\nimport * as constants from \"../internal/fs/constants.mjs\";\nexport { constants };\nexport * from \"../internal/fs/promises.mjs\";\nexport default {\n\tconstants,\n\taccess,\n\tappendFile,\n\tchmod,\n\tchown,\n\tcopyFile,\n\tcp,\n\tglob,\n\tlchmod,\n\tlchown,\n\tlink,\n\tlstat,\n\tlutimes,\n\tmkdir,\n\tmkdtemp,\n\topen,\n\topendir,\n\treadFile,\n\treaddir,\n\treadlink,\n\trealpath,\n\trename,\n\trm,\n\trmdir,\n\tstat,\n\tstatfs,\n\tsymlink,\n\ttruncate,\n\tunlink,\n\tutimes,\n\twatch,\n\twriteFile\n};\n", "import { notImplementedClass } from \"../../../_internal/utils.mjs\";\nexport const Dir = /* @__PURE__ */ notImplementedClass(\"fs.Dir\");\nexport const Dirent = /* @__PURE__ */ notImplementedClass(\"fs.Dirent\");\nexport const Stats = /* @__PURE__ */ notImplementedClass(\"fs.Stats\");\nexport const ReadStream = /* @__PURE__ */ notImplementedClass(\"fs.ReadStream\");\nexport const WriteStream = /* @__PURE__ */ notImplementedClass(\"fs.WriteStream\");\nexport const FileReadStream = ReadStream;\nexport const FileWriteStream = WriteStream;\n", "import { notImplemented, notImplementedAsync } from \"../../../_internal/utils.mjs\";\nimport * as fsp from \"./promises.mjs\";\nfunction callbackify(fn) {\n\tconst fnc = function(...args) {\n\t\tconst cb = args.pop();\n\t\tfn().catch((error) => cb(error)).then((val) => cb(undefined, val));\n\t};\n\tfnc.__promisify__ = fn;\n\tfnc.native = fnc;\n\treturn fnc;\n}\nexport const access = callbackify(fsp.access);\nexport const appendFile = callbackify(fsp.appendFile);\nexport const chown = callbackify(fsp.chown);\nexport const chmod = callbackify(fsp.chmod);\nexport const copyFile = callbackify(fsp.copyFile);\nexport const cp = callbackify(fsp.cp);\nexport const lchown = callbackify(fsp.lchown);\nexport const lchmod = callbackify(fsp.lchmod);\nexport const link = callbackify(fsp.link);\nexport const lstat = callbackify(fsp.lstat);\nexport const lutimes = callbackify(fsp.lutimes);\nexport const mkdir = callbackify(fsp.mkdir);\nexport const mkdtemp = callbackify(fsp.mkdtemp);\nexport const realpath = callbackify(fsp.realpath);\nexport const open = callbackify(fsp.open);\nexport const opendir = callbackify(fsp.opendir);\nexport const readdir = callbackify(fsp.readdir);\nexport const readFile = callbackify(fsp.readFile);\nexport const readlink = callbackify(fsp.readlink);\nexport const rename = callbackify(fsp.rename);\nexport const rm = callbackify(fsp.rm);\nexport const rmdir = callbackify(fsp.rmdir);\nexport const stat = callbackify(fsp.stat);\nexport const symlink = callbackify(fsp.symlink);\nexport const truncate = callbackify(fsp.truncate);\nexport const unlink = callbackify(fsp.unlink);\nexport const utimes = callbackify(fsp.utimes);\nexport const writeFile = callbackify(fsp.writeFile);\nexport const statfs = callbackify(fsp.statfs);\nexport const close = /* @__PURE__ */ notImplementedAsync(\"fs.close\");\nexport const createReadStream = /* @__PURE__ */ notImplementedAsync(\"fs.createReadStream\");\nexport const createWriteStream = /* @__PURE__ */ notImplementedAsync(\"fs.createWriteStream\");\nexport const exists = /* @__PURE__ */ notImplementedAsync(\"fs.exists\");\nexport const fchown = /* @__PURE__ */ notImplementedAsync(\"fs.fchown\");\nexport const fchmod = /* @__PURE__ */ notImplementedAsync(\"fs.fchmod\");\nexport const fdatasync = /* @__PURE__ */ notImplementedAsync(\"fs.fdatasync\");\nexport const fstat = /* @__PURE__ */ notImplementedAsync(\"fs.fstat\");\nexport const fsync = /* @__PURE__ */ notImplementedAsync(\"fs.fsync\");\nexport const ftruncate = /* @__PURE__ */ notImplementedAsync(\"fs.ftruncate\");\nexport const futimes = /* @__PURE__ */ notImplementedAsync(\"fs.futimes\");\nexport const lstatSync = /* @__PURE__ */ notImplementedAsync(\"fs.lstatSync\");\nexport const read = /* @__PURE__ */ notImplementedAsync(\"fs.read\");\nexport const readv = /* @__PURE__ */ notImplementedAsync(\"fs.readv\");\nexport const realpathSync = /* @__PURE__ */ notImplementedAsync(\"fs.realpathSync\");\nexport const statSync = /* @__PURE__ */ notImplementedAsync(\"fs.statSync\");\nexport const unwatchFile = /* @__PURE__ */ notImplementedAsync(\"fs.unwatchFile\");\nexport const watch = /* @__PURE__ */ notImplementedAsync(\"fs.watch\");\nexport const watchFile = /* @__PURE__ */ notImplementedAsync(\"fs.watchFile\");\nexport const write = /* @__PURE__ */ notImplementedAsync(\"fs.write\");\nexport const writev = /* @__PURE__ */ notImplementedAsync(\"fs.writev\");\nexport const _toUnixTimestamp = /* @__PURE__ */ notImplementedAsync(\"fs._toUnixTimestamp\");\nexport const openAsBlob = /* @__PURE__ */ notImplementedAsync(\"fs.openAsBlob\");\nexport const glob = /* @__PURE__ */ notImplementedAsync(\"fs.glob\");\nexport const appendFileSync = /* @__PURE__ */ notImplemented(\"fs.appendFileSync\");\nexport const accessSync = /* @__PURE__ */ notImplemented(\"fs.accessSync\");\nexport const chownSync = /* @__PURE__ */ notImplemented(\"fs.chownSync\");\nexport const chmodSync = /* @__PURE__ */ notImplemented(\"fs.chmodSync\");\nexport const closeSync = /* @__PURE__ */ notImplemented(\"fs.closeSync\");\nexport const copyFileSync = /* @__PURE__ */ notImplemented(\"fs.copyFileSync\");\nexport const cpSync = /* @__PURE__ */ notImplemented(\"fs.cpSync\");\nexport const existsSync = () => false;\nexport const fchownSync = /* @__PURE__ */ notImplemented(\"fs.fchownSync\");\nexport const fchmodSync = /* @__PURE__ */ notImplemented(\"fs.fchmodSync\");\nexport const fdatasyncSync = /* @__PURE__ */ notImplemented(\"fs.fdatasyncSync\");\nexport const fstatSync = /* @__PURE__ */ notImplemented(\"fs.fstatSync\");\nexport const fsyncSync = /* @__PURE__ */ notImplemented(\"fs.fsyncSync\");\nexport const ftruncateSync = /* @__PURE__ */ notImplemented(\"fs.ftruncateSync\");\nexport const futimesSync = /* @__PURE__ */ notImplemented(\"fs.futimesSync\");\nexport const lchownSync = /* @__PURE__ */ notImplemented(\"fs.lchownSync\");\nexport const lchmodSync = /* @__PURE__ */ notImplemented(\"fs.lchmodSync\");\nexport const linkSync = /* @__PURE__ */ notImplemented(\"fs.linkSync\");\nexport const lutimesSync = /* @__PURE__ */ notImplemented(\"fs.lutimesSync\");\nexport const mkdirSync = /* @__PURE__ */ notImplemented(\"fs.mkdirSync\");\nexport const mkdtempSync = /* @__PURE__ */ notImplemented(\"fs.mkdtempSync\");\nexport const openSync = /* @__PURE__ */ notImplemented(\"fs.openSync\");\nexport const opendirSync = /* @__PURE__ */ notImplemented(\"fs.opendirSync\");\nexport const readdirSync = /* @__PURE__ */ notImplemented(\"fs.readdirSync\");\nexport const readSync = /* @__PURE__ */ notImplemented(\"fs.readSync\");\nexport const readvSync = /* @__PURE__ */ notImplemented(\"fs.readvSync\");\nexport const readFileSync = /* @__PURE__ */ notImplemented(\"fs.readFileSync\");\nexport const readlinkSync = /* @__PURE__ */ notImplemented(\"fs.readlinkSync\");\nexport const renameSync = /* @__PURE__ */ notImplemented(\"fs.renameSync\");\nexport const rmSync = /* @__PURE__ */ notImplemented(\"fs.rmSync\");\nexport const rmdirSync = /* @__PURE__ */ notImplemented(\"fs.rmdirSync\");\nexport const symlinkSync = /* @__PURE__ */ notImplemented(\"fs.symlinkSync\");\nexport const truncateSync = /* @__PURE__ */ notImplemented(\"fs.truncateSync\");\nexport const unlinkSync = /* @__PURE__ */ notImplemented(\"fs.unlinkSync\");\nexport const utimesSync = /* @__PURE__ */ notImplemented(\"fs.utimesSync\");\nexport const writeFileSync = /* @__PURE__ */ notImplemented(\"fs.writeFileSync\");\nexport const writeSync = /* @__PURE__ */ notImplemented(\"fs.writeSync\");\nexport const writevSync = /* @__PURE__ */ notImplemented(\"fs.writevSync\");\nexport const statfsSync = /* @__PURE__ */ notImplemented(\"fs.statfsSync\");\nexport const globSync = /* @__PURE__ */ notImplemented(\"fs.globSync\");\n", "import promises from \"node:fs/promises\";\nimport { Dir, Dirent, FileReadStream, FileWriteStream, ReadStream, Stats, WriteStream } from \"./internal/fs/classes.mjs\";\nimport { _toUnixTimestamp, access, accessSync, appendFile, appendFileSync, chmod, chmodSync, chown, chownSync, close, closeSync, copyFile, copyFileSync, cp, cpSync, createReadStream, createWriteStream, exists, existsSync, fchmod, fchmodSync, fchown, fchownSync, fdatasync, fdatasyncSync, fstat, fstatSync, fsync, fsyncSync, ftruncate, ftruncateSync, futimes, futimesSync, glob, lchmod, globSync, lchmodSync, lchown, lchownSync, link, linkSync, lstat, lstatSync, lutimes, lutimesSync, mkdir, mkdirSync, mkdtemp, mkdtempSync, open, openAsBlob, openSync, opendir, opendirSync, read, readFile, readFileSync, readSync, readdir, readdirSync, readlink, readlinkSync, readv, readvSync, realpath, realpathSync, rename, renameSync, rm, rmSync, rmdir, rmdirSync, stat, statSync, statfs, statfsSync, symlink, symlinkSync, truncate, truncateSync, unlink, unlinkSync, unwatchFile, utimes, utimesSync, watch, watchFile, write, writeFile, writeFileSync, writeSync, writev, writevSync } from \"./internal/fs/fs.mjs\";\nimport * as constants from \"./internal/fs/constants.mjs\";\nimport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { promises, constants };\nexport * from \"./internal/fs/fs.mjs\";\nexport * from \"./internal/fs/classes.mjs\";\nexport default {\n\tF_OK,\n\tR_OK,\n\tW_OK,\n\tX_OK,\n\tconstants,\n\tpromises,\n\tDir,\n\tDirent,\n\tFileReadStream,\n\tFileWriteStream,\n\tReadStream,\n\tStats,\n\tWriteStream,\n\t_toUnixTimestamp,\n\taccess,\n\taccessSync,\n\tappendFile,\n\tappendFileSync,\n\tchmod,\n\tchmodSync,\n\tchown,\n\tchownSync,\n\tclose,\n\tcloseSync,\n\tcopyFile,\n\tcopyFileSync,\n\tcp,\n\tcpSync,\n\tcreateReadStream,\n\tcreateWriteStream,\n\texists,\n\texistsSync,\n\tfchmod,\n\tfchmodSync,\n\tfchown,\n\tfchownSync,\n\tfdatasync,\n\tfdatasyncSync,\n\tfstat,\n\tfstatSync,\n\tfsync,\n\tfsyncSync,\n\tftruncate,\n\tftruncateSync,\n\tfutimes,\n\tfutimesSync,\n\tglob,\n\tlchmod,\n\tglobSync,\n\tlchmodSync,\n\tlchown,\n\tlchownSync,\n\tlink,\n\tlinkSync,\n\tlstat,\n\tlstatSync,\n\tlutimes,\n\tlutimesSync,\n\tmkdir,\n\tmkdirSync,\n\tmkdtemp,\n\tmkdtempSync,\n\topen,\n\topenAsBlob,\n\topenSync,\n\topendir,\n\topendirSync,\n\tread,\n\treadFile,\n\treadFileSync,\n\treadSync,\n\treaddir,\n\treaddirSync,\n\treadlink,\n\treadlinkSync,\n\treadv,\n\treadvSync,\n\trealpath,\n\trealpathSync,\n\trename,\n\trenameSync,\n\trm,\n\trmSync,\n\trmdir,\n\trmdirSync,\n\tstat,\n\tstatSync,\n\tstatfs,\n\tstatfsSync,\n\tsymlink,\n\tsymlinkSync,\n\ttruncate,\n\ttruncateSync,\n\tunlink,\n\tunlinkSync,\n\tunwatchFile,\n\tutimes,\n\tutimesSync,\n\twatch,\n\twatchFile,\n\twrite,\n\twriteFile,\n\twriteFileSync,\n\twriteSync,\n\twritev,\n\twritevSync\n};\n", "import libDefault from 'fs';\nmodule.exports = libDefault;", "/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === 9 /*Node.DOCUMENT_NODE*/) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == 2 /*Node.ATTRIBUTE_NODE*/ ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9 /*Node.DOCUMENT_NODE*/ && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == 1 /*Node.ELEMENT_NODE*/; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*');\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()');\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()');\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == 9   /*Node.DOCUMENT_NODE*/ ||\r\n            n.nodeType == 1   /*Node.ELEMENT_NODE */ ||\r\n            n.nodeType === 11 /*Node.DOCUMENT_FRAGMENT*/) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === 2 /* Node.ATTRIBUTE_NODE */) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == 9 /*Node.DOCUMENT_NODE*/) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != 1 /*Node.ELEMENT_NODE*/) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === 7 /*Node.PROCESSING_INSTRUCTION_NODE*/) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != 9 /*Node.DOCUMENT_NODE*/; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === 2 || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === 9 /*Node.DOCUMENT_NODE*/ ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath,\r\n            XPathParser,\r\n            XPathResult,\r\n\r\n            Step,\r\n            PathExpr,\r\n            NodeTest,\r\n            LocationPath,\r\n\r\n            OrOperation,\r\n            AndOperation,\r\n\r\n            BarOperation,\r\n\r\n            EqualsOperation,\r\n            NotEqualOperation,\r\n            LessThanOperation,\r\n            GreaterThanOperation,\r\n            LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation,\r\n            MinusOperation,\r\n            MultiplyOperation,\r\n            DivOperation,\r\n            ModOperation,\r\n            UnaryMinusOperation,\r\n\r\n            FunctionCall,\r\n            VariableReference,\r\n\r\n            XPathContext,\r\n\r\n            XNodeSet,\r\n            XBoolean,\r\n            XString,\r\n            XNumber,\r\n\r\n            NamespaceResolver,\r\n            FunctionResolver,\r\n            VariableResolver,\r\n\r\n            Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    // end non-node wrapper\r\n})(xpath);\r\n", "'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n", "var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE\uFF1A\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n", "'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n", "var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: \u8FD9\u91CC\u6709\u53EF\u80FDsax\u56DE\u9000\uFF0C\u6709\u4F4D\u7F6E\u9519\u8BEF\u98CE\u9669\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//\u5FD8\u8BB0\u95ED\u5408\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n", "var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n", "var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n", "import { DOMParser as dom, Options as DOMParserOptions } from '@xmldom/xmldom';\n\n// global module configuration\ninterface Context extends ValidatorContext, DOMParserContext {}\n\ninterface ValidatorContext {\n  validate?: (xml: string) => Promise<any>;\n}\n\ninterface DOMParserContext {\n  dom: dom;\n}\n\nconst context: Context = {\n  validate: undefined,\n  dom: new dom()\n};\n\nexport function getContext() {\n  return context;\n}\n\nexport function setSchemaValidator(params: ValidatorContext) {\n\n  if (typeof params.validate !== 'function') {\n    throw new Error('validate must be a callback function having one argument as xml input');\n  }\n\n  // assign the validate function to the context\n  context.validate = params.validate;\n\n}\n\nexport function setDOMParserOptions(options: DOMParserOptions = {}) {\n  context.dom = new dom(options);\n}\n", "'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n", "import { select, SelectedValue } from 'xpath';\nimport { uniq, last, zipObject, notEmpty } from './utility';\nimport { getContext } from './api';\nimport camelCase from 'camelcase';\n\ninterface ExtractorField {\n  key: string;\n  localPath: string[] | string[][];\n  attributes: string[];\n  index?: string[];\n  attributePath?: string[];\n  context?: boolean;\n}\n\nexport type ExtractorFields = ExtractorField[];\n\nfunction buildAbsoluteXPath(paths) {\n  return paths.reduce((currentPath, name) => {\n    let appendedPath = currentPath;\n    const isWildcard = name.startsWith('~');\n    if (isWildcard) {\n      const pathName = name.replace('~', '');\n      appendedPath = currentPath + `/*[contains(local-name(), '${pathName}')]`;\n    }\n    if (!isWildcard) {\n      appendedPath = currentPath + `/*[local-name(.)='${name}']`;\n    }\n    return appendedPath;\n  }, '');\n}\n\nfunction buildAttributeXPath(attributes) {\n  if (attributes.length === 0) {\n    return '/text()';\n  }\n  if (attributes.length === 1) {\n    return `/@${attributes[0]}`;\n  }\n  const filters = attributes.map(attribute => `name()='${attribute}'`).join(' or ');\n  return `/@*[${filters}]`;\n}\n\nexport const loginRequestFields: ExtractorFields = [\n  {\n    key: 'request',\n    localPath: ['AuthnRequest'],\n    attributes: ['ID', 'IssueInstant', 'Destination', 'AssertionConsumerServiceURL']\n  },\n  {\n    key: 'issuer',\n    localPath: ['AuthnRequest', 'Issuer'],\n    attributes: []\n  },\n  {\n    key: 'nameIDPolicy',\n    localPath: ['AuthnRequest', 'NameIDPolicy'],\n    attributes: ['Format', 'AllowCreate']\n  },\n  {\n    key: 'authnContextClassRef',\n    localPath: ['AuthnRequest', 'AuthnContextClassRef'],\n    attributes: []\n  },\n  {\n    key: 'signature',\n    localPath: ['AuthnRequest', 'Signature'],\n    attributes: [],\n    context: true\n  }\n];\n\n// support two-tiers status code\nexport const loginResponseStatusFields = [\n  {\n    key: 'top',\n    localPath: ['Response', 'Status', 'StatusCode'],\n    attributes: ['Value'],\n  },\n  {\n    key: 'second',\n    localPath: ['Response', 'Status', 'StatusCode', 'StatusCode'],\n    attributes: ['Value'],\n  }\n];\n\n// support two-tiers status code\nexport const logoutResponseStatusFields = [\n  {\n    key: 'top',\n    localPath: ['LogoutResponse', 'Status', 'StatusCode'],\n    attributes: ['Value']\n  },\n  {\n    key: 'second',\n    localPath: ['LogoutResponse', 'Status', 'StatusCode', 'StatusCode'],\n    attributes: ['Value'],\n  }\n];\n\nexport const loginResponseFields: ((assertion: any) => ExtractorFields) = assertion => [\n  {\n    key: 'conditions',\n    localPath: ['Assertion', 'Conditions'],\n    attributes: ['NotBefore', 'NotOnOrAfter'],\n    shortcut: assertion\n  },\n  {\n    key: 'response',\n    localPath: ['Response'],\n    attributes: ['ID', 'IssueInstant', 'Destination', 'InResponseTo'],\n  },\n  {\n    key: 'audience',\n    localPath: ['Assertion', 'Conditions', 'AudienceRestriction', 'Audience'],\n    attributes: [],\n    shortcut: assertion\n  },\n  // {\n  //   key: 'issuer',\n  //   localPath: ['Response', 'Issuer'],\n  //   attributes: []\n  // },\n  {\n    key: 'issuer',\n    localPath: ['Assertion', 'Issuer'],\n    attributes: [],\n    shortcut: assertion\n  },\n  {\n    key: 'nameID',\n    localPath: ['Assertion', 'Subject', 'NameID'],\n    attributes: [],\n    shortcut: assertion\n  },\n  {\n    key: 'sessionIndex',\n    localPath: ['Assertion', 'AuthnStatement'],\n    attributes: ['AuthnInstant', 'SessionNotOnOrAfter', 'SessionIndex'],\n    shortcut: assertion\n  },\n  {\n    key: 'attributes',\n    localPath: ['Assertion', 'AttributeStatement', 'Attribute'],\n    index: ['Name'],\n    attributePath: ['AttributeValue'],\n    attributes: [],\n    shortcut: assertion\n  }\n];\n\nexport const logoutRequestFields: ExtractorFields = [\n  {\n    key: 'request',\n    localPath: ['LogoutRequest'],\n    attributes: ['ID', 'IssueInstant', 'Destination']\n  },\n  {\n    key: 'issuer',\n    localPath: ['LogoutRequest', 'Issuer'],\n    attributes: []\n  },\n  {\n    key: 'nameID',\n    localPath: ['LogoutRequest', 'NameID'],\n    attributes: []\n  },\n  {\n    key: 'sessionIndex',\n    localPath: ['LogoutRequest', 'SessionIndex'],\n    attributes: []\n  },\n  {\n    key: 'signature',\n    localPath: ['LogoutRequest', 'Signature'],\n    attributes: [],\n    context: true\n  }\n];\n\nexport const logoutResponseFields: ExtractorFields = [\n  {\n    key: 'response',\n    localPath: ['LogoutResponse'],\n    attributes: ['ID', 'Destination', 'InResponseTo']\n  },\n  {\n    key: 'issuer',\n    localPath: ['LogoutResponse', 'Issuer'],\n    attributes: []\n  },\n  {\n    key: 'signature',\n    localPath: ['LogoutResponse', 'Signature'],\n    attributes: [],\n    context: true\n  }\n];\n\nexport function extract(context: string, fields) {\n  const { dom } = getContext();\n  const rootDoc = dom.parseFromString(context);\n\n  return fields.reduce((result: any, field) => {\n    // get essential fields\n    const key = field.key;\n    const localPath = field.localPath;\n    const attributes = field.attributes;\n    const isEntire = field.context;\n    const shortcut = field.shortcut;\n    // get optional fields\n    const index = field.index;\n    const attributePath = field.attributePath;\n\n    // set allowing overriding if there is a shortcut injected\n    let targetDoc = rootDoc;\n\n    // if shortcut is used, then replace the doc\n    // it's a design for overriding the doc used during runtime\n    if (shortcut) {\n      targetDoc = dom.parseFromString(shortcut);\n    }\n\n    // special case: multiple path\n    /*\n      {\n        key: 'issuer',\n        localPath: [\n          ['Response', 'Issuer'],\n          ['Response', 'Assertion', 'Issuer']\n        ],\n        attributes: []\n      }\n     */\n    if (localPath.every(path => Array.isArray(path))) {\n      const multiXPaths = localPath\n        .map(path => {\n          // not support attribute yet, so ignore it\n          return `${buildAbsoluteXPath(path)}/text()`;\n        })\n        .join(' | ');\n\n      return {\n        ...result,\n        [key]: uniq(select(multiXPaths, targetDoc).map((n: Node) => n.nodeValue).filter(notEmpty))\n      };\n    }\n    // eo special case: multiple path\n\n    const baseXPath = buildAbsoluteXPath(localPath);\n    const attributeXPath = buildAttributeXPath(attributes);\n\n    // special case: get attributes where some are in child, some are in parent\n    /*\n      {\n        key: 'attributes',\n        localPath: ['Response', 'Assertion', 'AttributeStatement', 'Attribute'],\n        index: ['Name'],\n        attributePath: ['AttributeValue'],\n        attributes: []\n      }\n    */\n    if (index && attributePath) {\n      // find the index in localpath\n      const indexPath = buildAttributeXPath(index);\n      const fullLocalXPath = `${baseXPath}${indexPath}`;\n      const parentNodes = select(baseXPath, targetDoc);\n      // [uid, mail, edupersonaffiliation], ready for aggregate\n      const parentAttributes = select(fullLocalXPath, targetDoc).map((n: Attr) => n.value);\n      // [attribute, attributevalue]\n      const childXPath = buildAbsoluteXPath([last(localPath)].concat(attributePath));\n      const childAttributeXPath = buildAttributeXPath(attributes);\n      const fullChildXPath = `${childXPath}${childAttributeXPath}`;\n      // [ 'test', 'test@example.com', [ 'users', 'examplerole1' ] ]\n      const childAttributes = parentNodes.map(node => {\n        const nodeDoc = dom.parseFromString(node.toString());\n        if (attributes.length === 0) {\n          const childValues = select(fullChildXPath, nodeDoc).map((n: Node) => n.nodeValue);\n          if (childValues.length === 1) {\n            return childValues[0];\n          }\n          return childValues;\n        }\n        if (attributes.length > 0) {\n          const childValues = select(fullChildXPath, nodeDoc).map((n: Attr) => n.value);\n          if (childValues.length === 1) {\n            return childValues[0];\n          }\n          return childValues;\n        }\n        return null;\n      });\n      // aggregation\n      const obj = zipObject(parentAttributes, childAttributes, false);\n      return {\n        ...result,\n        [key]: obj\n      };\n\n    }\n    // case: fetch entire content, only allow one existence\n    /*\n      {\n        key: 'signature',\n        localPath: ['AuthnRequest', 'Signature'],\n        attributes: [],\n        context: true\n      }\n    */\n    if (isEntire) {\n      const node = select(baseXPath, targetDoc);\n      let value: string | string[] | null = null;\n      if (node.length === 1) {\n        value = node[0].toString();\n      }\n      if (node.length > 1) {\n        value = node.map(n => n.toString());\n      }\n      return {\n        ...result,\n        [key]: value\n      };\n    }\n\n    // case: multiple attribute\n    /*\n      {\n        key: 'nameIDPolicy',\n        localPath: ['AuthnRequest', 'NameIDPolicy'],\n        attributes: ['Format', 'AllowCreate']\n      }\n    */\n    if (attributes.length > 1) {\n      const baseNode = select(baseXPath, targetDoc).map(n => n.toString());\n      const childXPath = `${buildAbsoluteXPath([last(localPath)])}${attributeXPath}`;\n      const attributeValues = baseNode.map((node: string) => {\n        const nodeDoc = dom.parseFromString(node);\n        const values = select(childXPath, nodeDoc).reduce((r: any, n: Attr) => {\n          r[camelCase(n.name, {locale: 'en-us'})] = n.value;\n          return r;\n        }, {});\n        return values;\n      });\n      return {\n        ...result,\n        [key]: attributeValues.length === 1 ? attributeValues[0] : attributeValues\n      };\n    }\n    // case: single attribute\n    /*\n      {\n        key: 'statusCode',\n        localPath: ['Response', 'Status', 'StatusCode'],\n        attributes: ['Value'],\n      }\n    */\n    if (attributes.length === 1) {\n      const fullPath = `${baseXPath}${attributeXPath}`;\n      const attributeValues = select(fullPath, targetDoc).map((n: Attr) => n.value);\n      return {\n        ...result,\n        [key]: attributeValues[0]\n      };\n    }\n    // case: zero attribute\n    /*\n      {\n        key: 'issuer',\n        localPath: ['AuthnRequest', 'Issuer'],\n        attributes: []\n      }\n    */\n    if (attributes.length === 0) {\n      let attributeValue: SelectedValue[] | (string | null)[] | null = null;\n      const node = select(baseXPath, targetDoc);\n      if (node.length === 1) {\n        const fullPath = `string(${baseXPath}${attributeXPath})`;\n        attributeValue = select(fullPath, targetDoc);\n      }\n      if (node.length > 1) {\n        attributeValue = node.filter((n: Node) => n.firstChild)\n          .map((n: Node) => n.firstChild!.nodeValue);\n      }\n      return {\n        ...result,\n        [key]: attributeValue\n      };\n    }\n\n    return result;\n  }, {});\n\n}\n", "/**\n* @file metadata.ts\n* @author tngan\n* @desc An abstraction for metadata of identity provider and service provider\n*/\nimport * as fs from 'fs';\nimport { namespace } from './urn';\nimport { extract } from './extractor';\nimport { isString } from './utility';\n\nexport interface MetadataInterface {\n  xmlString: string;\n  getMetadata: () => string;\n  exportMetadata: (exportFile: string) => void;\n  getEntityID: () => string;\n  getX509Certificate: (certType: string) => string | string[];\n  getNameIDFormat: () => any[];\n  getSingleLogoutService: (binding: string | undefined) => string | object;\n  getSupportBindings: (services: string[]) => string[];\n}\n\nexport default class Metadata implements MetadataInterface {\n\n  xmlString: string;\n  meta: any;\n\n  /**\n  * @param  {string | Buffer} xml\n  * @param  {object} extraParse for custom metadata extractor\n  */\n  constructor(xml: string | Buffer, extraParse: any = []) {\n    this.xmlString = xml.toString();\n    this.meta = extract(this.xmlString, extraParse.concat([\n      {\n        key: 'entityDescriptor',\n        localPath: ['EntityDescriptor'],\n        attributes: [],\n        context: true\n      },\n      {\n        key: 'entityID',\n        localPath: ['EntityDescriptor'],\n        attributes: ['entityID']\n      },\n      {\n        // shared certificate for both encryption and signing\n        key: 'sharedCertificate',\n        localPath: ['EntityDescriptor', '~SSODescriptor', 'KeyDescriptor', 'KeyInfo', 'X509Data', 'X509Certificate'],\n        attributes: []\n      },\n      {\n        // explicit certificate declaration for encryption and signing\n        key: 'certificate',\n        localPath: ['EntityDescriptor', '~SSODescriptor', 'KeyDescriptor'],\n        index: ['use'],\n        attributePath: ['KeyInfo', 'X509Data', 'X509Certificate'],\n        attributes: []\n      },\n      {\n        key: 'singleLogoutService',\n        localPath: ['EntityDescriptor', '~SSODescriptor', 'SingleLogoutService'],\n        attributes: ['Binding', 'Location']\n      },\n      {\n        key: 'nameIDFormat',\n        localPath: ['EntityDescriptor', '~SSODescriptor', 'NameIDFormat'],\n        attributes: [],\n      }\n    ]));\n\n    // get shared certificate\n    const sharedCertificate = this.meta.sharedCertificate;\n    if (typeof sharedCertificate === 'string') {\n      this.meta.certificate = {\n        signing: sharedCertificate,\n        encryption: sharedCertificate\n      };\n      delete this.meta.sharedCertificate;\n    }\n\n    if (\n      Array.isArray(this.meta.entityDescriptor) &&\n      this.meta.entityDescriptor.length > 1\n    ) {\n      throw new Error('ERR_MULTIPLE_METADATA_ENTITYDESCRIPTOR');\n    }\n\n  }\n\n  /**\n  * @desc Get the metadata in xml format\n  * @return {string} metadata in xml format\n  */\n  public getMetadata(): string {\n    return this.xmlString;\n  }\n\n  /**\n  * @desc Export the metadata to specific file\n  * @param {string} exportFile is the output file path\n  */\n  public exportMetadata(exportFile: string): void {\n    fs.writeFileSync(exportFile, this.xmlString);\n  }\n\n  /**\n  * @desc Get the entityID in metadata\n  * @return {string} entityID\n  */\n  public getEntityID(): string {\n    return this.meta.entityID;\n  }\n\n  /**\n  * @desc Get the x509 certificate declared in entity metadata\n  * @param  {string} use declares the type of certificate\n  * @return {string} certificate in string format\n  */\n  public getX509Certificate(use: string) {\n    return this.meta.certificate[use] || null;\n  }\n\n  /**\n  * @desc Get the support NameID format declared in entity metadata\n  * @return {array} support NameID format\n  */\n  public getNameIDFormat(): any {\n    return this.meta.nameIDFormat;\n  }\n\n  /**\n  * @desc Get the entity endpoint for single logout service\n  * @param  {string} binding e.g. redirect, post\n  * @return {string/object} location\n  */\n  public getSingleLogoutService(binding: string | undefined): string | object {\n    if (binding && isString(binding)) {\n      const bindType = namespace.binding[binding];\n      let singleLogoutService = this.meta.singleLogoutService;\n      if (!(singleLogoutService instanceof Array)) {\n        singleLogoutService = [singleLogoutService];\n       }\n      const service = singleLogoutService.find(obj => obj.binding === bindType);\n      if (service) {\n        return service.location;\n      }\n    }\n    return this.meta.singleLogoutService;\n  }\n\n  /**\n  * @desc Get the support bindings\n  * @param  {[string]} services\n  * @return {[string]} support bindings\n  */\n  public getSupportBindings(services: string[]): string[] {\n    let supportBindings = [];\n    if (services) {\n      supportBindings = services.reduce((acc: any, service) => {\n        const supportBinding = Object.keys(service)[0];\n        return acc.push(supportBinding);\n      }, []);\n    }\n    return supportBindings;\n  }\n}\n", "export const UV_UDP_REUSEADDR = 4;\nexport const dlopen = {\n\tRTLD_LAZY: 1,\n\tRTLD_NOW: 2,\n\tRTLD_GLOBAL: 256,\n\tRTLD_LOCAL: 0,\n\tRTLD_DEEPBIND: 8\n};\nexport const errno = {\n\tE2BIG: 7,\n\tEACCES: 13,\n\tEADDRINUSE: 98,\n\tEADDRNOTAVAIL: 99,\n\tEAFNOSUPPORT: 97,\n\tEAGAIN: 11,\n\tEALREADY: 114,\n\tEBADF: 9,\n\tEBADMSG: 74,\n\tEBUSY: 16,\n\tECANCELED: 125,\n\tECHILD: 10,\n\tECONNABORTED: 103,\n\tECONNREFUSED: 111,\n\tECONNRESET: 104,\n\tEDEADLK: 35,\n\tEDESTADDRREQ: 89,\n\tEDOM: 33,\n\tEDQUOT: 122,\n\tEEXIST: 17,\n\tEFAULT: 14,\n\tEFBIG: 27,\n\tEHOSTUNREACH: 113,\n\tEIDRM: 43,\n\tEILSEQ: 84,\n\tEINPROGRESS: 115,\n\tEINTR: 4,\n\tEINVAL: 22,\n\tEIO: 5,\n\tEISCONN: 106,\n\tEISDIR: 21,\n\tELOOP: 40,\n\tEMFILE: 24,\n\tEMLINK: 31,\n\tEMSGSIZE: 90,\n\tEMULTIHOP: 72,\n\tENAMETOOLONG: 36,\n\tENETDOWN: 100,\n\tENETRESET: 102,\n\tENETUNREACH: 101,\n\tENFILE: 23,\n\tENOBUFS: 105,\n\tENODATA: 61,\n\tENODEV: 19,\n\tENOENT: 2,\n\tENOEXEC: 8,\n\tENOLCK: 37,\n\tENOLINK: 67,\n\tENOMEM: 12,\n\tENOMSG: 42,\n\tENOPROTOOPT: 92,\n\tENOSPC: 28,\n\tENOSR: 63,\n\tENOSTR: 60,\n\tENOSYS: 38,\n\tENOTCONN: 107,\n\tENOTDIR: 20,\n\tENOTEMPTY: 39,\n\tENOTSOCK: 88,\n\tENOTSUP: 95,\n\tENOTTY: 25,\n\tENXIO: 6,\n\tEOPNOTSUPP: 95,\n\tEOVERFLOW: 75,\n\tEPERM: 1,\n\tEPIPE: 32,\n\tEPROTO: 71,\n\tEPROTONOSUPPORT: 93,\n\tEPROTOTYPE: 91,\n\tERANGE: 34,\n\tEROFS: 30,\n\tESPIPE: 29,\n\tESRCH: 3,\n\tESTALE: 116,\n\tETIME: 62,\n\tETIMEDOUT: 110,\n\tETXTBSY: 26,\n\tEWOULDBLOCK: 11,\n\tEXDEV: 18\n};\nexport const signals = {\n\tSIGHUP: 1,\n\tSIGINT: 2,\n\tSIGQUIT: 3,\n\tSIGILL: 4,\n\tSIGTRAP: 5,\n\tSIGABRT: 6,\n\tSIGIOT: 6,\n\tSIGBUS: 7,\n\tSIGFPE: 8,\n\tSIGKILL: 9,\n\tSIGUSR1: 10,\n\tSIGSEGV: 11,\n\tSIGUSR2: 12,\n\tSIGPIPE: 13,\n\tSIGALRM: 14,\n\tSIGTERM: 15,\n\tSIGCHLD: 17,\n\tSIGSTKFLT: 16,\n\tSIGCONT: 18,\n\tSIGSTOP: 19,\n\tSIGTSTP: 20,\n\tSIGTTIN: 21,\n\tSIGTTOU: 22,\n\tSIGURG: 23,\n\tSIGXCPU: 24,\n\tSIGXFSZ: 25,\n\tSIGVTALRM: 26,\n\tSIGPROF: 27,\n\tSIGWINCH: 28,\n\tSIGIO: 29,\n\tSIGPOLL: 29,\n\tSIGPWR: 30,\n\tSIGSYS: 31\n};\nexport const priority = {\n\tPRIORITY_LOW: 19,\n\tPRIORITY_BELOW_NORMAL: 10,\n\tPRIORITY_NORMAL: 0,\n\tPRIORITY_ABOVE_NORMAL: -7,\n\tPRIORITY_HIGH: -14,\n\tPRIORITY_HIGHEST: -20\n};\n", "import { errno, priority, signals, dlopen } from \"./internal/os/constants.mjs\";\nimport { UV_FS_SYMLINK_DIR, UV_FS_SYMLINK_JUNCTION, O_RDONLY, O_WRONLY, O_RDWR, UV_DIRENT_UNKNOWN, UV_DIRENT_FILE, UV_DIRENT_DIR, UV_DIRENT_LINK, UV_DIRENT_FIFO, UV_DIRENT_SOCKET, UV_DIRENT_CHAR, UV_DIRENT_BLOCK, EXTENSIONLESS_FORMAT_JAVASCRIPT, EXTENSIONLESS_FORMAT_WASM, S_IFMT, S_IFREG, S_IFDIR, S_IFCHR, S_IFBLK, S_IFIFO, S_IFLNK, S_IFSOCK, O_CREAT, O_EXCL, UV_FS_O_FILEMAP, O_NOCTTY, O_TRUNC, O_APPEND, O_DIRECTORY, O_NOATIME, O_NOFOLLOW, O_SYNC, O_DSYNC, O_DIRECT, O_NONBLOCK, S_IRWXU, S_IRUSR, S_IWUSR, S_IXUSR, S_IRWXG, S_IRGRP, S_IWGRP, S_IXGRP, S_IRWXO, S_IROTH, S_IWOTH, S_IXOTH, F_OK, R_OK, W_OK, X_OK, UV_FS_COPYFILE_EXCL, COPYFILE_EXCL, UV_FS_COPYFILE_FICLONE, COPYFILE_FICLONE, UV_FS_COPYFILE_FICLONE_FORCE, COPYFILE_FICLONE_FORCE } from \"./internal/fs/constants.mjs\";\nimport { OPENSSL_VERSION_NUMBER, SSL_OP_ALL, SSL_OP_ALLOW_NO_DHE_KEX, SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION, SSL_OP_CIPHER_SERVER_PREFERENCE, SSL_OP_CISCO_ANYCONNECT, SSL_OP_COOKIE_EXCHANGE, SSL_OP_CRYPTOPRO_TLSEXT_BUG, SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS, SSL_OP_LEGACY_SERVER_CONNECT, SSL_OP_NO_COMPRESSION, SSL_OP_NO_ENCRYPT_THEN_MAC, SSL_OP_NO_QUERY_MTU, SSL_OP_NO_RENEGOTIATION, SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION, SSL_OP_NO_SSLv2, SSL_OP_NO_SSLv3, SSL_OP_NO_TICKET, SSL_OP_NO_TLSv1, SSL_OP_NO_TLSv1_1, SSL_OP_NO_TLSv1_2, SSL_OP_NO_TLSv1_3, SSL_OP_PRIORITIZE_CHACHA, SSL_OP_TLS_ROLLBACK_BUG, ENGINE_METHOD_RSA, ENGINE_METHOD_DSA, ENGINE_METHOD_DH, ENGINE_METHOD_RAND, ENGINE_METHOD_EC, ENGINE_METHOD_CIPHERS, ENGINE_METHOD_DIGESTS, ENGINE_METHOD_PKEY_METHS, ENGINE_METHOD_PKEY_ASN1_METHS, ENGINE_METHOD_ALL, ENGINE_METHOD_NONE, DH_CHECK_P_NOT_SAFE_PRIME, DH_CHECK_P_NOT_PRIME, DH_UNABLE_TO_CHECK_GENERATOR, DH_NOT_SUITABLE_GENERATOR, RSA_PKCS1_PADDING, RSA_NO_PADDING, RSA_PKCS1_OAEP_PADDING, RSA_X931_PADDING, RSA_PKCS1_PSS_PADDING, RSA_PSS_SALTLEN_DIGEST, RSA_PSS_SALTLEN_MAX_SIGN, RSA_PSS_SALTLEN_AUTO, defaultCoreCipherList, TLS1_VERSION, TLS1_1_VERSION, TLS1_2_VERSION, TLS1_3_VERSION, POINT_CONVERSION_COMPRESSED, POINT_CONVERSION_UNCOMPRESSED, POINT_CONVERSION_HYBRID } from \"./internal/crypto/constants.mjs\";\nexport * from \"./internal/fs/constants.mjs\";\nexport { OPENSSL_VERSION_NUMBER, SSL_OP_ALL, SSL_OP_ALLOW_NO_DHE_KEX, SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION, SSL_OP_CIPHER_SERVER_PREFERENCE, SSL_OP_CISCO_ANYCONNECT, SSL_OP_COOKIE_EXCHANGE, SSL_OP_CRYPTOPRO_TLSEXT_BUG, SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS, SSL_OP_LEGACY_SERVER_CONNECT, SSL_OP_NO_COMPRESSION, SSL_OP_NO_ENCRYPT_THEN_MAC, SSL_OP_NO_QUERY_MTU, SSL_OP_NO_RENEGOTIATION, SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION, SSL_OP_NO_SSLv2, SSL_OP_NO_SSLv3, SSL_OP_NO_TICKET, SSL_OP_NO_TLSv1, SSL_OP_NO_TLSv1_1, SSL_OP_NO_TLSv1_2, SSL_OP_NO_TLSv1_3, SSL_OP_PRIORITIZE_CHACHA, SSL_OP_TLS_ROLLBACK_BUG, ENGINE_METHOD_RSA, ENGINE_METHOD_DSA, ENGINE_METHOD_DH, ENGINE_METHOD_RAND, ENGINE_METHOD_EC, ENGINE_METHOD_CIPHERS, ENGINE_METHOD_DIGESTS, ENGINE_METHOD_PKEY_METHS, ENGINE_METHOD_PKEY_ASN1_METHS, ENGINE_METHOD_ALL, ENGINE_METHOD_NONE, DH_CHECK_P_NOT_SAFE_PRIME, DH_CHECK_P_NOT_PRIME, DH_UNABLE_TO_CHECK_GENERATOR, DH_NOT_SUITABLE_GENERATOR, RSA_PKCS1_PADDING, RSA_NO_PADDING, RSA_PKCS1_OAEP_PADDING, RSA_X931_PADDING, RSA_PKCS1_PSS_PADDING, RSA_PSS_SALTLEN_DIGEST, RSA_PSS_SALTLEN_MAX_SIGN, RSA_PSS_SALTLEN_AUTO, defaultCoreCipherList, TLS1_VERSION, TLS1_1_VERSION, TLS1_2_VERSION, TLS1_3_VERSION, POINT_CONVERSION_COMPRESSED, POINT_CONVERSION_UNCOMPRESSED, POINT_CONVERSION_HYBRID } from \"./internal/crypto/constants.mjs\";\nexport const { RTLD_LAZY, RTLD_NOW, RTLD_GLOBAL, RTLD_LOCAL, RTLD_DEEPBIND } = dlopen;\nexport const { E2BIG, EACCES, EADDRINUSE, EADDRNOTAVAIL, EAFNOSUPPORT, EAGAIN, EALREADY, EBADF, EBADMSG, EBUSY, ECANCELED, ECHILD, ECONNABORTED, ECONNREFUSED, ECONNRESET, EDEADLK, EDESTADDRREQ, EDOM, EDQUOT, EEXIST, EFAULT, EFBIG, EHOSTUNREACH, EIDRM, EILSEQ, EINPROGRESS, EINTR, EINVAL, EIO, EISCONN, EISDIR, ELOOP, EMFILE, EMLINK, EMSGSIZE, EMULTIHOP, ENAMETOOLONG, ENETDOWN, ENETRESET, ENETUNREACH, ENFILE, ENOBUFS, ENODATA, ENODEV, ENOENT, ENOEXEC, ENOLCK, ENOLINK, ENOMEM, ENOMSG, ENOPROTOOPT, ENOSPC, ENOSR, ENOSTR, ENOSYS, ENOTCONN, ENOTDIR, ENOTEMPTY, ENOTSOCK, ENOTSUP, ENOTTY, ENXIO, EOPNOTSUPP, EOVERFLOW, EPERM, EPIPE, EPROTO, EPROTONOSUPPORT, EPROTOTYPE, ERANGE, EROFS, ESPIPE, ESRCH, ESTALE, ETIME, ETIMEDOUT, ETXTBSY, EWOULDBLOCK, EXDEV } = errno;\nexport const { PRIORITY_LOW, PRIORITY_BELOW_NORMAL, PRIORITY_NORMAL, PRIORITY_ABOVE_NORMAL, PRIORITY_HIGH, PRIORITY_HIGHEST } = priority;\nexport const { SIGHUP, SIGINT, SIGQUIT, SIGILL, SIGTRAP, SIGABRT, SIGIOT, SIGBUS, SIGFPE, SIGKILL, SIGUSR1, SIGSEGV, SIGUSR2, SIGPIPE, SIGALRM, SIGTERM, SIGCHLD, SIGSTKFLT, SIGCONT, SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU, SIGURG, SIGXCPU, SIGXFSZ, SIGVTALRM, SIGPROF, SIGWINCH, SIGIO, SIGPOLL, SIGPWR, SIGSYS } = signals;\nexport default {\n\tOPENSSL_VERSION_NUMBER,\n\tSSL_OP_ALL,\n\tSSL_OP_ALLOW_NO_DHE_KEX,\n\tSSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION,\n\tSSL_OP_CIPHER_SERVER_PREFERENCE,\n\tSSL_OP_CISCO_ANYCONNECT,\n\tSSL_OP_COOKIE_EXCHANGE,\n\tSSL_OP_CRYPTOPRO_TLSEXT_BUG,\n\tSSL_OP_DONT_INSERT_EMPTY_FRAGMENTS,\n\tSSL_OP_LEGACY_SERVER_CONNECT,\n\tSSL_OP_NO_COMPRESSION,\n\tSSL_OP_NO_ENCRYPT_THEN_MAC,\n\tSSL_OP_NO_QUERY_MTU,\n\tSSL_OP_NO_RENEGOTIATION,\n\tSSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION,\n\tSSL_OP_NO_SSLv2,\n\tSSL_OP_NO_SSLv3,\n\tSSL_OP_NO_TICKET,\n\tSSL_OP_NO_TLSv1,\n\tSSL_OP_NO_TLSv1_1,\n\tSSL_OP_NO_TLSv1_2,\n\tSSL_OP_NO_TLSv1_3,\n\tSSL_OP_PRIORITIZE_CHACHA,\n\tSSL_OP_TLS_ROLLBACK_BUG,\n\tENGINE_METHOD_RSA,\n\tENGINE_METHOD_DSA,\n\tENGINE_METHOD_DH,\n\tENGINE_METHOD_RAND,\n\tENGINE_METHOD_EC,\n\tENGINE_METHOD_CIPHERS,\n\tENGINE_METHOD_DIGESTS,\n\tENGINE_METHOD_PKEY_METHS,\n\tENGINE_METHOD_PKEY_ASN1_METHS,\n\tENGINE_METHOD_ALL,\n\tENGINE_METHOD_NONE,\n\tDH_CHECK_P_NOT_SAFE_PRIME,\n\tDH_CHECK_P_NOT_PRIME,\n\tDH_UNABLE_TO_CHECK_GENERATOR,\n\tDH_NOT_SUITABLE_GENERATOR,\n\tRSA_PKCS1_PADDING,\n\tRSA_NO_PADDING,\n\tRSA_PKCS1_OAEP_PADDING,\n\tRSA_X931_PADDING,\n\tRSA_PKCS1_PSS_PADDING,\n\tRSA_PSS_SALTLEN_DIGEST,\n\tRSA_PSS_SALTLEN_MAX_SIGN,\n\tRSA_PSS_SALTLEN_AUTO,\n\tdefaultCoreCipherList,\n\tTLS1_VERSION,\n\tTLS1_1_VERSION,\n\tTLS1_2_VERSION,\n\tTLS1_3_VERSION,\n\tPOINT_CONVERSION_COMPRESSED,\n\tPOINT_CONVERSION_UNCOMPRESSED,\n\tPOINT_CONVERSION_HYBRID,\n\tUV_FS_SYMLINK_DIR,\n\tUV_FS_SYMLINK_JUNCTION,\n\tO_RDONLY,\n\tO_WRONLY,\n\tO_RDWR,\n\tUV_DIRENT_UNKNOWN,\n\tUV_DIRENT_FILE,\n\tUV_DIRENT_DIR,\n\tUV_DIRENT_LINK,\n\tUV_DIRENT_FIFO,\n\tUV_DIRENT_SOCKET,\n\tUV_DIRENT_CHAR,\n\tUV_DIRENT_BLOCK,\n\tEXTENSIONLESS_FORMAT_JAVASCRIPT,\n\tEXTENSIONLESS_FORMAT_WASM,\n\tS_IFMT,\n\tS_IFREG,\n\tS_IFDIR,\n\tS_IFCHR,\n\tS_IFBLK,\n\tS_IFIFO,\n\tS_IFLNK,\n\tS_IFSOCK,\n\tO_CREAT,\n\tO_EXCL,\n\tUV_FS_O_FILEMAP,\n\tO_NOCTTY,\n\tO_TRUNC,\n\tO_APPEND,\n\tO_DIRECTORY,\n\tO_NOATIME,\n\tO_NOFOLLOW,\n\tO_SYNC,\n\tO_DSYNC,\n\tO_DIRECT,\n\tO_NONBLOCK,\n\tS_IRWXU,\n\tS_IRUSR,\n\tS_IWUSR,\n\tS_IXUSR,\n\tS_IRWXG,\n\tS_IRGRP,\n\tS_IWGRP,\n\tS_IXGRP,\n\tS_IRWXO,\n\tS_IROTH,\n\tS_IWOTH,\n\tS_IXOTH,\n\tF_OK,\n\tR_OK,\n\tW_OK,\n\tX_OK,\n\tUV_FS_COPYFILE_EXCL,\n\tCOPYFILE_EXCL,\n\tUV_FS_COPYFILE_FICLONE,\n\tCOPYFILE_FICLONE,\n\tUV_FS_COPYFILE_FICLONE_FORCE,\n\tCOPYFILE_FICLONE_FORCE,\n\tE2BIG,\n\tEACCES,\n\tEADDRINUSE,\n\tEADDRNOTAVAIL,\n\tEAFNOSUPPORT,\n\tEAGAIN,\n\tEALREADY,\n\tEBADF,\n\tEBADMSG,\n\tEBUSY,\n\tECANCELED,\n\tECHILD,\n\tECONNABORTED,\n\tECONNREFUSED,\n\tECONNRESET,\n\tEDEADLK,\n\tEDESTADDRREQ,\n\tEDOM,\n\tEDQUOT,\n\tEEXIST,\n\tEFAULT,\n\tEFBIG,\n\tEHOSTUNREACH,\n\tEIDRM,\n\tEILSEQ,\n\tEINPROGRESS,\n\tEINTR,\n\tEINVAL,\n\tEIO,\n\tEISCONN,\n\tEISDIR,\n\tELOOP,\n\tEMFILE,\n\tEMLINK,\n\tEMSGSIZE,\n\tEMULTIHOP,\n\tENAMETOOLONG,\n\tENETDOWN,\n\tENETRESET,\n\tENETUNREACH,\n\tENFILE,\n\tENOBUFS,\n\tENODATA,\n\tENODEV,\n\tENOENT,\n\tENOEXEC,\n\tENOLCK,\n\tENOLINK,\n\tENOMEM,\n\tENOMSG,\n\tENOPROTOOPT,\n\tENOSPC,\n\tENOSR,\n\tENOSTR,\n\tENOSYS,\n\tENOTCONN,\n\tENOTDIR,\n\tENOTEMPTY,\n\tENOTSOCK,\n\tENOTSUP,\n\tENOTTY,\n\tENXIO,\n\tEOPNOTSUPP,\n\tEOVERFLOW,\n\tEPERM,\n\tEPIPE,\n\tEPROTO,\n\tEPROTONOSUPPORT,\n\tEPROTOTYPE,\n\tERANGE,\n\tEROFS,\n\tESPIPE,\n\tESRCH,\n\tESTALE,\n\tETIME,\n\tETIMEDOUT,\n\tETXTBSY,\n\tEWOULDBLOCK,\n\tEXDEV,\n\tRTLD_LAZY,\n\tRTLD_NOW,\n\tRTLD_GLOBAL,\n\tRTLD_LOCAL,\n\tRTLD_DEEPBIND,\n\tPRIORITY_LOW,\n\tPRIORITY_BELOW_NORMAL,\n\tPRIORITY_NORMAL,\n\tPRIORITY_ABOVE_NORMAL,\n\tPRIORITY_HIGH,\n\tPRIORITY_HIGHEST,\n\tSIGHUP,\n\tSIGINT,\n\tSIGQUIT,\n\tSIGILL,\n\tSIGTRAP,\n\tSIGABRT,\n\tSIGIOT,\n\tSIGBUS,\n\tSIGFPE,\n\tSIGKILL,\n\tSIGUSR1,\n\tSIGSEGV,\n\tSIGUSR2,\n\tSIGPIPE,\n\tSIGALRM,\n\tSIGTERM,\n\tSIGCHLD,\n\tSIGSTKFLT,\n\tSIGCONT,\n\tSIGSTOP,\n\tSIGTSTP,\n\tSIGTTIN,\n\tSIGTTOU,\n\tSIGURG,\n\tSIGXCPU,\n\tSIGXFSZ,\n\tSIGVTALRM,\n\tSIGPROF,\n\tSIGWINCH,\n\tSIGIO,\n\tSIGPOLL,\n\tSIGPWR,\n\tSIGSYS\n};\n", "import libDefault from 'constants';\nmodule.exports = libDefault;", "/*\n * Utils functions\n *\n */\n\nvar crypt = require('crypto');\n\n/**\n * Break string str each maxLen symbols\n * @param str\n * @param maxLen\n * @returns {string}\n */\nmodule.exports.linebrk = function (str, maxLen) {\n    var res = '';\n    var i = 0;\n    while (i + maxLen < str.length) {\n        res += str.substring(i, i + maxLen) + \"\\n\";\n        i += maxLen;\n    }\n    return res + str.substring(i, str.length);\n};\n\nmodule.exports.detectEnvironment = function () {\n    if (typeof(window) !== 'undefined' && window && !(process && process.title === 'node')) {\n        return 'browser';\n    }\n\n    return 'node';\n};\n\n/**\n * Trying get a 32-bit unsigned integer from the partial buffer\n * @param buffer\n * @param offset\n * @returns {Number}\n */\nmodule.exports.get32IntFromBuffer = function (buffer, offset) {\n    offset = offset || 0;\n    var size = 0;\n    if ((size = buffer.length - offset) > 0) {\n        if (size >= 4) {\n            return buffer.readUIntBE(offset, size);\n        } else {\n            var res = 0;\n            for (var i = offset + size, d = 0; i > offset; i--, d += 2) {\n                res += buffer[i - 1] * Math.pow(16, d);\n            }\n            return res;\n        }\n    } else {\n        return NaN;\n    }\n};\n\nmodule.exports._ = {\n    isObject: function (value) {\n        var type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    },\n\n    isString: function (value) {\n        return typeof value == 'string' || value instanceof String;\n    },\n\n    isNumber: function (value) {\n        return typeof value == 'number' || !isNaN(parseFloat(value)) && isFinite(value);\n    },\n\n    /**\n     * Returns copy of `obj` without `removeProp` field.\n     * @param obj\n     * @param removeProp\n     * @returns Object\n     */\n    omit: function (obj, removeProp) {\n        var newObj = {};\n        for (var prop in obj) {\n            if (!obj.hasOwnProperty(prop) || prop === removeProp) {\n                continue;\n            }\n            newObj[prop] = obj[prop];\n        }\n\n        return newObj;\n    }\n};\n\n/**\n * Strips everything around the opening and closing lines, including the lines\n * themselves.\n */\nmodule.exports.trimSurroundingText = function (data, opening, closing) {\n    var trimStartIndex = 0;\n    var trimEndIndex = data.length;\n\n    var openingBoundaryIndex = data.indexOf(opening);\n    if (openingBoundaryIndex >= 0) {\n        trimStartIndex = openingBoundaryIndex + opening.length;\n    }\n\n    var closingBoundaryIndex = data.indexOf(closing, openingBoundaryIndex);\n    if (closingBoundaryIndex >= 0) {\n        trimEndIndex = closingBoundaryIndex;\n    }\n\n    return data.substring(trimStartIndex, trimEndIndex);\n}", "/*\r\n * Basic JavaScript BN library - subset useful for RSA encryption.\r\n * \r\n * Copyright (c) 2003-2005  Tom Wu\r\n * All Rights Reserved.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \r\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \r\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \r\n *\r\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\r\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\r\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\r\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\r\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n *\r\n * In addition, the following condition applies:\r\n *\r\n * All redistributions must retain an intact copy of this copyright notice\r\n * and disclaimer.\r\n */\r\n\r\n/*\r\n * Added Node.js Buffers support\r\n * 2014 rzcoder\r\n */\r\n\r\nvar crypt = require('crypto');\r\nvar _ = require('../utils')._;\r\n\r\n// Bits per digit\r\nvar dbits;\r\n\r\n// JavaScript engine analysis\r\nvar canary = 0xdeadbeefcafe;\r\nvar j_lm = ((canary & 0xffffff) == 0xefcafe);\r\n\r\n// (public) Constructor\r\nfunction BigInteger(a, b) {\r\n    if (a != null) {\r\n        if (\"number\" == typeof a) {\r\n            this.fromNumber(a, b);\r\n        } else if (Buffer.isBuffer(a)) {\r\n            this.fromBuffer(a);\r\n        } else if (b == null && \"string\" != typeof a) {\r\n            this.fromByteArray(a);\r\n        } else {\r\n            this.fromString(a, b);\r\n        }\r\n    }\r\n}\r\n\r\n// return new, unset BigInteger\r\nfunction nbi() {\r\n    return new BigInteger(null);\r\n}\r\n\r\n// am: Compute w_j += (x*this_i), propagate carries,\r\n// c is initial carry, returns final carry.\r\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\r\n// We need to select the fastest one that works in this environment.\r\n\r\n// am1: use a single mult and divide to get the high bits,\r\n// max digit bits should be 26 because\r\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\r\nfunction am1(i, x, w, j, c, n) {\r\n    while (--n >= 0) {\r\n        var v = x * this[i++] + w[j] + c;\r\n        c = Math.floor(v / 0x4000000);\r\n        w[j++] = v & 0x3ffffff;\r\n    }\r\n    return c;\r\n}\r\n// am2 avoids a big mult-and-extract completely.\r\n// Max digit bits should be <= 30 because we do bitwise ops\r\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\r\nfunction am2(i, x, w, j, c, n) {\r\n    var xl = x & 0x7fff, xh = x >> 15;\r\n    while (--n >= 0) {\r\n        var l = this[i] & 0x7fff;\r\n        var h = this[i++] >> 15;\r\n        var m = xh * l + h * xl;\r\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\r\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\r\n        w[j++] = l & 0x3fffffff;\r\n    }\r\n    return c;\r\n}\r\n// Alternately, set max digit bits to 28 since some\r\n// browsers slow down when dealing with 32-bit numbers.\r\nfunction am3(i, x, w, j, c, n) {\r\n    var xl = x & 0x3fff, xh = x >> 14;\r\n    while (--n >= 0) {\r\n        var l = this[i] & 0x3fff;\r\n        var h = this[i++] >> 14;\r\n        var m = xh * l + h * xl;\r\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\r\n        c = (l >> 28) + (m >> 14) + xh * h;\r\n        w[j++] = l & 0xfffffff;\r\n    }\r\n    return c;\r\n}\r\n\r\n// We need to select the fastest one that works in this environment. \r\n//if (j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\r\n//\tBigInteger.prototype.am = am2;\r\n//\tdbits = 30;\r\n//} else if (j_lm && (navigator.appName != \"Netscape\")) {\r\n//\tBigInteger.prototype.am = am1;\r\n//\tdbits = 26;\r\n//} else { // Mozilla/Netscape seems to prefer am3\r\n//\tBigInteger.prototype.am = am3;\r\n//\tdbits = 28;\r\n//}\r\n\r\n// For node.js, we pick am3 with max dbits to 28.\r\nBigInteger.prototype.am = am3;\r\ndbits = 28;\r\n\r\nBigInteger.prototype.DB = dbits;\r\nBigInteger.prototype.DM = ((1 << dbits) - 1);\r\nBigInteger.prototype.DV = (1 << dbits);\r\n\r\nvar BI_FP = 52;\r\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\r\nBigInteger.prototype.F1 = BI_FP - dbits;\r\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\r\n\r\n// Digit conversions\r\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\nvar BI_RC = new Array();\r\nvar rr, vv;\r\nrr = \"0\".charCodeAt(0);\r\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\r\nrr = \"a\".charCodeAt(0);\r\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\r\nrr = \"A\".charCodeAt(0);\r\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\r\n\r\nfunction int2char(n) {\r\n    return BI_RM.charAt(n);\r\n}\r\nfunction intAt(s, i) {\r\n    var c = BI_RC[s.charCodeAt(i)];\r\n    return (c == null) ? -1 : c;\r\n}\r\n\r\n// (protected) copy this to r\r\nfunction bnpCopyTo(r) {\r\n    for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\r\n    r.t = this.t;\r\n    r.s = this.s;\r\n}\r\n\r\n// (protected) set from integer value x, -DV <= x < DV\r\nfunction bnpFromInt(x) {\r\n    this.t = 1;\r\n    this.s = (x < 0) ? -1 : 0;\r\n    if (x > 0) this[0] = x;\r\n    else if (x < -1) this[0] = x + DV;\r\n    else this.t = 0;\r\n}\r\n\r\n// return bigint initialized to value\r\nfunction nbv(i) {\r\n    var r = nbi();\r\n    r.fromInt(i);\r\n    return r;\r\n}\r\n\r\n// (protected) set from string and radix\r\nfunction bnpFromString(data, radix, unsigned) {\r\n    var k;\r\n    switch (radix) {\r\n        case 2:\r\n            k = 1;\r\n            break;\r\n        case 4:\r\n            k = 2;\r\n            break;\r\n        case 8:\r\n            k = 3;\r\n            break;\r\n        case 16:\r\n            k = 4;\r\n            break;\r\n        case 32:\r\n            k = 5;\r\n            break;\r\n        case 256:\r\n            k = 8;\r\n            break;\r\n        default:\r\n            this.fromRadix(data, radix);\r\n            return;\r\n    }\r\n\r\n    this.t = 0;\r\n    this.s = 0;\r\n\r\n    var i = data.length;\r\n    var mi = false;\r\n    var sh = 0;\r\n\r\n    while (--i >= 0) {\r\n        var x = (k == 8) ? data[i] & 0xff : intAt(data, i);\r\n        if (x < 0) {\r\n            if (data.charAt(i) == \"-\") mi = true;\r\n            continue;\r\n        }\r\n        mi = false;\r\n        if (sh === 0)\r\n            this[this.t++] = x;\r\n        else if (sh + k > this.DB) {\r\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\r\n            this[this.t++] = (x >> (this.DB - sh));\r\n        }\r\n        else\r\n            this[this.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= this.DB) sh -= this.DB;\r\n    }\r\n    if ((!unsigned) && k == 8 && (data[0] & 0x80) != 0) {\r\n        this.s = -1;\r\n        if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\r\n    }\r\n    this.clamp();\r\n    if (mi) BigInteger.ZERO.subTo(this, this);\r\n}\r\n\r\nfunction bnpFromByteArray(a, unsigned) {\r\n    this.fromString(a, 256, unsigned)\r\n}\r\n\r\nfunction bnpFromBuffer(a) {\r\n    this.fromString(a, 256, true)\r\n}\r\n\r\n// (protected) clamp off excess high words\r\nfunction bnpClamp() {\r\n    var c = this.s & this.DM;\r\n    while (this.t > 0 && this[this.t - 1] == c) --this.t;\r\n}\r\n\r\n// (public) return string representation in given radix\r\nfunction bnToString(b) {\r\n    if (this.s < 0) return \"-\" + this.negate().toString(b);\r\n    var k;\r\n    if (b == 16) k = 4;\r\n    else if (b == 8) k = 3;\r\n    else if (b == 2) k = 1;\r\n    else if (b == 32) k = 5;\r\n    else if (b == 4) k = 2;\r\n    else return this.toRadix(b);\r\n    var km = (1 << k) - 1, d, m = false, r = \"\", i = this.t;\r\n    var p = this.DB - (i * this.DB) % k;\r\n    if (i-- > 0) {\r\n        if (p < this.DB && (d = this[i] >> p) > 0) {\r\n            m = true;\r\n            r = int2char(d);\r\n        }\r\n        while (i >= 0) {\r\n            if (p < k) {\r\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\r\n                d |= this[--i] >> (p += this.DB - k);\r\n            }\r\n            else {\r\n                d = (this[i] >> (p -= k)) & km;\r\n                if (p <= 0) {\r\n                    p += this.DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if (d > 0) m = true;\r\n            if (m) r += int2char(d);\r\n        }\r\n    }\r\n    return m ? r : \"0\";\r\n}\r\n\r\n// (public) -this\r\nfunction bnNegate() {\r\n    var r = nbi();\r\n    BigInteger.ZERO.subTo(this, r);\r\n    return r;\r\n}\r\n\r\n// (public) |this|\r\nfunction bnAbs() {\r\n    return (this.s < 0) ? this.negate() : this;\r\n}\r\n\r\n// (public) return + if this > a, - if this < a, 0 if equal\r\nfunction bnCompareTo(a) {\r\n    var r = this.s - a.s;\r\n    if (r != 0) return r;\r\n    var i = this.t;\r\n    r = i - a.t;\r\n    if (r != 0) return (this.s < 0) ? -r : r;\r\n    while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\r\n    return 0;\r\n}\r\n\r\n// returns bit length of the integer x\r\nfunction nbits(x) {\r\n    var r = 1, t;\r\n    if ((t = x >>> 16) != 0) {\r\n        x = t;\r\n        r += 16;\r\n    }\r\n    if ((t = x >> 8) != 0) {\r\n        x = t;\r\n        r += 8;\r\n    }\r\n    if ((t = x >> 4) != 0) {\r\n        x = t;\r\n        r += 4;\r\n    }\r\n    if ((t = x >> 2) != 0) {\r\n        x = t;\r\n        r += 2;\r\n    }\r\n    if ((t = x >> 1) != 0) {\r\n        x = t;\r\n        r += 1;\r\n    }\r\n    return r;\r\n}\r\n\r\n// (public) return the number of bits in \"this\"\r\nfunction bnBitLength() {\r\n    if (this.t <= 0) return 0;\r\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\r\n}\r\n\r\n// (protected) r = this << n*DB\r\nfunction bnpDLShiftTo(n, r) {\r\n    var i;\r\n    for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\r\n    for (i = n - 1; i >= 0; --i) r[i] = 0;\r\n    r.t = this.t + n;\r\n    r.s = this.s;\r\n}\r\n\r\n// (protected) r = this >> n*DB\r\nfunction bnpDRShiftTo(n, r) {\r\n    for (var i = n; i < this.t; ++i) r[i - n] = this[i];\r\n    r.t = Math.max(this.t - n, 0);\r\n    r.s = this.s;\r\n}\r\n\r\n// (protected) r = this << n\r\nfunction bnpLShiftTo(n, r) {\r\n    var bs = n % this.DB;\r\n    var cbs = this.DB - bs;\r\n    var bm = (1 << cbs) - 1;\r\n    var ds = Math.floor(n / this.DB), c = (this.s << bs) & this.DM, i;\r\n    for (i = this.t - 1; i >= 0; --i) {\r\n        r[i + ds + 1] = (this[i] >> cbs) | c;\r\n        c = (this[i] & bm) << bs;\r\n    }\r\n    for (i = ds - 1; i >= 0; --i) r[i] = 0;\r\n    r[ds] = c;\r\n    r.t = this.t + ds + 1;\r\n    r.s = this.s;\r\n    r.clamp();\r\n}\r\n\r\n// (protected) r = this >> n\r\nfunction bnpRShiftTo(n, r) {\r\n    r.s = this.s;\r\n    var ds = Math.floor(n / this.DB);\r\n    if (ds >= this.t) {\r\n        r.t = 0;\r\n        return;\r\n    }\r\n    var bs = n % this.DB;\r\n    var cbs = this.DB - bs;\r\n    var bm = (1 << bs) - 1;\r\n    r[0] = this[ds] >> bs;\r\n    for (var i = ds + 1; i < this.t; ++i) {\r\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\r\n        r[i - ds] = this[i] >> bs;\r\n    }\r\n    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\r\n    r.t = this.t - ds;\r\n    r.clamp();\r\n}\r\n\r\n// (protected) r = this - a\r\nfunction bnpSubTo(a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, this.t);\r\n    while (i < m) {\r\n        c += this[i] - a[i];\r\n        r[i++] = c & this.DM;\r\n        c >>= this.DB;\r\n    }\r\n    if (a.t < this.t) {\r\n        c -= a.s;\r\n        while (i < this.t) {\r\n            c += this[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        c += this.s;\r\n    }\r\n    else {\r\n        c += this.s;\r\n        while (i < a.t) {\r\n            c -= a[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        c -= a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c < -1) r[i++] = this.DV + c;\r\n    else if (c > 0) r[i++] = c;\r\n    r.t = i;\r\n    r.clamp();\r\n}\r\n\r\n// (protected) r = this * a, r != this,a (HAC 14.12)\r\n// \"this\" should be the larger one if appropriate.\r\nfunction bnpMultiplyTo(a, r) {\r\n    var x = this.abs(), y = a.abs();\r\n    var i = x.t;\r\n    r.t = i + y.t;\r\n    while (--i >= 0) r[i] = 0;\r\n    for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\r\n    r.s = 0;\r\n    r.clamp();\r\n    if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\r\n}\r\n\r\n// (protected) r = this^2, r != this (HAC 14.16)\r\nfunction bnpSquareTo(r) {\r\n    var x = this.abs();\r\n    var i = r.t = 2 * x.t;\r\n    while (--i >= 0) r[i] = 0;\r\n    for (i = 0; i < x.t - 1; ++i) {\r\n        var c = x.am(i, x[i], r, 2 * i, 0, 1);\r\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\r\n            r[i + x.t] -= x.DV;\r\n            r[i + x.t + 1] = 1;\r\n        }\r\n    }\r\n    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\r\n    r.s = 0;\r\n    r.clamp();\r\n}\r\n\r\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\r\n// r != q, this != m.  q or r may be null.\r\nfunction bnpDivRemTo(m, q, r) {\r\n    var pm = m.abs();\r\n    if (pm.t <= 0) return;\r\n    var pt = this.abs();\r\n    if (pt.t < pm.t) {\r\n        if (q != null) q.fromInt(0);\r\n        if (r != null) this.copyTo(r);\r\n        return;\r\n    }\r\n    if (r == null) r = nbi();\r\n    var y = nbi(), ts = this.s, ms = m.s;\r\n    var nsh = this.DB - nbits(pm[pm.t - 1]);\t// normalize modulus\r\n    if (nsh > 0) {\r\n        pm.lShiftTo(nsh, y);\r\n        pt.lShiftTo(nsh, r);\r\n    }\r\n    else {\r\n        pm.copyTo(y);\r\n        pt.copyTo(r);\r\n    }\r\n    var ys = y.t;\r\n    var y0 = y[ys - 1];\r\n    if (y0 === 0) return;\r\n    var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\r\n    var d1 = this.FV / yt, d2 = (1 << this.F1) / yt, e = 1 << this.F2;\r\n    var i = r.t, j = i - ys, t = (q == null) ? nbi() : q;\r\n    y.dlShiftTo(j, t);\r\n    if (r.compareTo(t) >= 0) {\r\n        r[r.t++] = 1;\r\n        r.subTo(t, r);\r\n    }\r\n    BigInteger.ONE.dlShiftTo(ys, t);\r\n    t.subTo(y, y);\t// \"negative\" y so we can replace sub with am later\r\n    while (y.t < ys) y[y.t++] = 0;\r\n    while (--j >= 0) {\r\n        // Estimate quotient digit\r\n        var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\r\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\t// Try it out\r\n            y.dlShiftTo(j, t);\r\n            r.subTo(t, r);\r\n            while (r[i] < --qd) r.subTo(t, r);\r\n        }\r\n    }\r\n    if (q != null) {\r\n        r.drShiftTo(ys, q);\r\n        if (ts != ms) BigInteger.ZERO.subTo(q, q);\r\n    }\r\n    r.t = ys;\r\n    r.clamp();\r\n    if (nsh > 0) r.rShiftTo(nsh, r);\t// Denormalize remainder\r\n    if (ts < 0) BigInteger.ZERO.subTo(r, r);\r\n}\r\n\r\n// (public) this mod a\r\nfunction bnMod(a) {\r\n    var r = nbi();\r\n    this.abs().divRemTo(a, null, r);\r\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\r\n    return r;\r\n}\r\n\r\n// Modular reduction using \"classic\" algorithm\r\nfunction Classic(m) {\r\n    this.m = m;\r\n}\r\nfunction cConvert(x) {\r\n    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\r\n    else return x;\r\n}\r\nfunction cRevert(x) {\r\n    return x;\r\n}\r\nfunction cReduce(x) {\r\n    x.divRemTo(this.m, null, x);\r\n}\r\nfunction cMulTo(x, y, r) {\r\n    x.multiplyTo(y, r);\r\n    this.reduce(r);\r\n}\r\nfunction cSqrTo(x, r) {\r\n    x.squareTo(r);\r\n    this.reduce(r);\r\n}\r\n\r\nClassic.prototype.convert = cConvert;\r\nClassic.prototype.revert = cRevert;\r\nClassic.prototype.reduce = cReduce;\r\nClassic.prototype.mulTo = cMulTo;\r\nClassic.prototype.sqrTo = cSqrTo;\r\n\r\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\r\n// justification:\r\n//         xy == 1 (mod m)\r\n//         xy =  1+km\r\n//   xy(2-xy) = (1+km)(1-km)\r\n// x[y(2-xy)] = 1-k^2m^2\r\n// x[y(2-xy)] == 1 (mod m^2)\r\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\r\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\r\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\r\nfunction bnpInvDigit() {\r\n    if (this.t < 1) return 0;\r\n    var x = this[0];\r\n    if ((x & 1) === 0) return 0;\r\n    var y = x & 3;\t\t// y == 1/x mod 2^2\r\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\t// y == 1/x mod 2^4\r\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\t// y == 1/x mod 2^8\r\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\t// y == 1/x mod 2^16\r\n    // last step - calculate inverse mod DV directly;\r\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\r\n    y = (y * (2 - x * y % this.DV)) % this.DV;\t\t// y == 1/x mod 2^dbits\r\n    // we really want the negative inverse, and -DV < y < DV\r\n    return (y > 0) ? this.DV - y : -y;\r\n}\r\n\r\n// Montgomery reduction\r\nfunction Montgomery(m) {\r\n    this.m = m;\r\n    this.mp = m.invDigit();\r\n    this.mpl = this.mp & 0x7fff;\r\n    this.mph = this.mp >> 15;\r\n    this.um = (1 << (m.DB - 15)) - 1;\r\n    this.mt2 = 2 * m.t;\r\n}\r\n\r\n// xR mod m\r\nfunction montConvert(x) {\r\n    var r = nbi();\r\n    x.abs().dlShiftTo(this.m.t, r);\r\n    r.divRemTo(this.m, null, r);\r\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\r\n    return r;\r\n}\r\n\r\n// x/R mod m\r\nfunction montRevert(x) {\r\n    var r = nbi();\r\n    x.copyTo(r);\r\n    this.reduce(r);\r\n    return r;\r\n}\r\n\r\n// x = x/R mod m (HAC 14.32)\r\nfunction montReduce(x) {\r\n    while (x.t <= this.mt2)\t// pad x so am has enough room later\r\n        x[x.t++] = 0;\r\n    for (var i = 0; i < this.m.t; ++i) {\r\n        // faster way of calculating u0 = x[i]*mp mod DV\r\n        var j = x[i] & 0x7fff;\r\n        var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\r\n        // use am to combine the multiply-shift-add into one call\r\n        j = i + this.m.t;\r\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\r\n        // propagate carry\r\n        while (x[j] >= x.DV) {\r\n            x[j] -= x.DV;\r\n            x[++j]++;\r\n        }\r\n    }\r\n    x.clamp();\r\n    x.drShiftTo(this.m.t, x);\r\n    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\r\n}\r\n\r\n// r = \"x^2/R mod m\"; x != r\r\nfunction montSqrTo(x, r) {\r\n    x.squareTo(r);\r\n    this.reduce(r);\r\n}\r\n\r\n// r = \"xy/R mod m\"; x,y != r\r\nfunction montMulTo(x, y, r) {\r\n    x.multiplyTo(y, r);\r\n    this.reduce(r);\r\n}\r\n\r\nMontgomery.prototype.convert = montConvert;\r\nMontgomery.prototype.revert = montRevert;\r\nMontgomery.prototype.reduce = montReduce;\r\nMontgomery.prototype.mulTo = montMulTo;\r\nMontgomery.prototype.sqrTo = montSqrTo;\r\n\r\n// (protected) true iff this is even\r\nfunction bnpIsEven() {\r\n    return ((this.t > 0) ? (this[0] & 1) : this.s) === 0;\r\n}\r\n\r\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\r\nfunction bnpExp(e, z) {\r\n    if (e > 0xffffffff || e < 1) return BigInteger.ONE;\r\n    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e) - 1;\r\n    g.copyTo(r);\r\n    while (--i >= 0) {\r\n        z.sqrTo(r, r2);\r\n        if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\r\n        else {\r\n            var t = r;\r\n            r = r2;\r\n            r2 = t;\r\n        }\r\n    }\r\n    return z.revert(r);\r\n}\r\n\r\n// (public) this^e % m, 0 <= e < 2^32\r\nfunction bnModPowInt(e, m) {\r\n    var z;\r\n    if (e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\r\n    return this.exp(e, z);\r\n}\r\n\r\n// Copyright (c) 2005-2009  Tom Wu\r\n// All Rights Reserved.\r\n// See \"LICENSE\" for details.\r\n\r\n// Extended JavaScript BN functions, required for RSA private ops.\r\n\r\n// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\r\n// Version 1.2: square() API, isProbablePrime fix\r\n\r\n//(public)\r\nfunction bnClone() {\r\n    var r = nbi();\r\n    this.copyTo(r);\r\n    return r;\r\n}\r\n\r\n//(public) return value as integer\r\nfunction bnIntValue() {\r\n    if (this.s < 0) {\r\n        if (this.t == 1) return this[0] - this.DV;\r\n        else if (this.t === 0) return -1;\r\n    }\r\n    else if (this.t == 1) return this[0];\r\n    else if (this.t === 0) return 0;\r\n// assumes 16 < DB < 32\r\n    return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\r\n}\r\n\r\n//(public) return value as byte\r\nfunction bnByteValue() {\r\n    return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\r\n}\r\n\r\n//(public) return value as short (assumes DB>=16)\r\nfunction bnShortValue() {\r\n    return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\r\n}\r\n\r\n//(protected) return x s.t. r^x < DV\r\nfunction bnpChunkSize(r) {\r\n    return Math.floor(Math.LN2 * this.DB / Math.log(r));\r\n}\r\n\r\n//(public) 0 if this === 0, 1 if this > 0\r\nfunction bnSigNum() {\r\n    if (this.s < 0) return -1;\r\n    else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\r\n    else return 1;\r\n}\r\n\r\n//(protected) convert to radix string\r\nfunction bnpToRadix(b) {\r\n    if (b == null) b = 10;\r\n    if (this.signum() === 0 || b < 2 || b > 36) return \"0\";\r\n    var cs = this.chunkSize(b);\r\n    var a = Math.pow(b, cs);\r\n    var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\r\n    this.divRemTo(d, y, z);\r\n    while (y.signum() > 0) {\r\n        r = (a + z.intValue()).toString(b).substr(1) + r;\r\n        y.divRemTo(d, y, z);\r\n    }\r\n    return z.intValue().toString(b) + r;\r\n}\r\n\r\n//(protected) convert from radix string\r\nfunction bnpFromRadix(s, b) {\r\n    this.fromInt(0);\r\n    if (b == null) b = 10;\r\n    var cs = this.chunkSize(b);\r\n    var d = Math.pow(b, cs), mi = false, j = 0, w = 0;\r\n    for (var i = 0; i < s.length; ++i) {\r\n        var x = intAt(s, i);\r\n        if (x < 0) {\r\n            if (s.charAt(i) == \"-\" && this.signum() === 0) mi = true;\r\n            continue;\r\n        }\r\n        w = b * w + x;\r\n        if (++j >= cs) {\r\n            this.dMultiply(d);\r\n            this.dAddOffset(w, 0);\r\n            j = 0;\r\n            w = 0;\r\n        }\r\n    }\r\n    if (j > 0) {\r\n        this.dMultiply(Math.pow(b, j));\r\n        this.dAddOffset(w, 0);\r\n    }\r\n    if (mi) BigInteger.ZERO.subTo(this, this);\r\n}\r\n\r\n//(protected) alternate constructor\r\nfunction bnpFromNumber(a, b) {\r\n    if (\"number\" == typeof b) {\r\n        // new BigInteger(int,int,RNG)\r\n        if (a < 2) this.fromInt(1);\r\n        else {\r\n            this.fromNumber(a);\r\n            if (!this.testBit(a - 1))\t// force MSB set\r\n                this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\r\n            if (this.isEven()) this.dAddOffset(1, 0); // force odd\r\n            while (!this.isProbablePrime(b)) {\r\n                this.dAddOffset(2, 0);\r\n                if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\r\n            }\r\n        }\r\n    } else {\r\n        // new BigInteger(int,RNG)\r\n        var x = crypt.randomBytes((a >> 3) + 1)\r\n        var t = a & 7;\r\n\r\n        if (t > 0)\r\n            x[0] &= ((1 << t) - 1);\r\n        else\r\n            x[0] = 0;\r\n\r\n        this.fromByteArray(x);\r\n    }\r\n}\r\n\r\n//(public) convert to bigendian byte array\r\nfunction bnToByteArray() {\r\n    var i = this.t, r = new Array();\r\n    r[0] = this.s;\r\n    var p = this.DB - (i * this.DB) % 8, d, k = 0;\r\n    if (i-- > 0) {\r\n        if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p)\r\n            r[k++] = d | (this.s << (this.DB - p));\r\n        while (i >= 0) {\r\n            if (p < 8) {\r\n                d = (this[i] & ((1 << p) - 1)) << (8 - p);\r\n                d |= this[--i] >> (p += this.DB - 8);\r\n            }\r\n            else {\r\n                d = (this[i] >> (p -= 8)) & 0xff;\r\n                if (p <= 0) {\r\n                    p += this.DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if ((d & 0x80) != 0) d |= -256;\r\n            if (k === 0 && (this.s & 0x80) != (d & 0x80)) ++k;\r\n            if (k > 0 || d != this.s) r[k++] = d;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n/**\r\n * return Buffer object\r\n * @param trim {boolean} slice buffer if first element == 0\r\n * @returns {Buffer}\r\n */\r\nfunction bnToBuffer(trimOrSize) {\r\n    var res = Buffer.from(this.toByteArray());\r\n    if (trimOrSize === true && res[0] === 0) {\r\n        res = res.slice(1);\r\n    } else if (_.isNumber(trimOrSize)) {\r\n        if (res.length > trimOrSize) {\r\n            for (var i = 0; i < res.length - trimOrSize; i++) {\r\n                if (res[i] !== 0) {\r\n                    return null;\r\n                }\r\n            }\r\n            return res.slice(res.length - trimOrSize);\r\n        } else if (res.length < trimOrSize) {\r\n            var padded = Buffer.alloc(trimOrSize);\r\n            padded.fill(0, 0, trimOrSize - res.length);\r\n            res.copy(padded, trimOrSize - res.length);\r\n            return padded;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction bnEquals(a) {\r\n    return (this.compareTo(a) == 0);\r\n}\r\nfunction bnMin(a) {\r\n    return (this.compareTo(a) < 0) ? this : a;\r\n}\r\nfunction bnMax(a) {\r\n    return (this.compareTo(a) > 0) ? this : a;\r\n}\r\n\r\n//(protected) r = this op a (bitwise)\r\nfunction bnpBitwiseTo(a, op, r) {\r\n    var i, f, m = Math.min(a.t, this.t);\r\n    for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\r\n    if (a.t < this.t) {\r\n        f = a.s & this.DM;\r\n        for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\r\n        r.t = this.t;\r\n    }\r\n    else {\r\n        f = this.s & this.DM;\r\n        for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\r\n        r.t = a.t;\r\n    }\r\n    r.s = op(this.s, a.s);\r\n    r.clamp();\r\n}\r\n\r\n//(public) this & a\r\nfunction op_and(x, y) {\r\n    return x & y;\r\n}\r\nfunction bnAnd(a) {\r\n    var r = nbi();\r\n    this.bitwiseTo(a, op_and, r);\r\n    return r;\r\n}\r\n\r\n//(public) this | a\r\nfunction op_or(x, y) {\r\n    return x | y;\r\n}\r\nfunction bnOr(a) {\r\n    var r = nbi();\r\n    this.bitwiseTo(a, op_or, r);\r\n    return r;\r\n}\r\n\r\n//(public) this ^ a\r\nfunction op_xor(x, y) {\r\n    return x ^ y;\r\n}\r\nfunction bnXor(a) {\r\n    var r = nbi();\r\n    this.bitwiseTo(a, op_xor, r);\r\n    return r;\r\n}\r\n\r\n//(public) this & ~a\r\nfunction op_andnot(x, y) {\r\n    return x & ~y;\r\n}\r\nfunction bnAndNot(a) {\r\n    var r = nbi();\r\n    this.bitwiseTo(a, op_andnot, r);\r\n    return r;\r\n}\r\n\r\n//(public) ~this\r\nfunction bnNot() {\r\n    var r = nbi();\r\n    for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\r\n    r.t = this.t;\r\n    r.s = ~this.s;\r\n    return r;\r\n}\r\n\r\n//(public) this << n\r\nfunction bnShiftLeft(n) {\r\n    var r = nbi();\r\n    if (n < 0) this.rShiftTo(-n, r); else this.lShiftTo(n, r);\r\n    return r;\r\n}\r\n\r\n//(public) this >> n\r\nfunction bnShiftRight(n) {\r\n    var r = nbi();\r\n    if (n < 0) this.lShiftTo(-n, r); else this.rShiftTo(n, r);\r\n    return r;\r\n}\r\n\r\n//return index of lowest 1-bit in x, x < 2^31\r\nfunction lbit(x) {\r\n    if (x === 0) return -1;\r\n    var r = 0;\r\n    if ((x & 0xffff) === 0) {\r\n        x >>= 16;\r\n        r += 16;\r\n    }\r\n    if ((x & 0xff) === 0) {\r\n        x >>= 8;\r\n        r += 8;\r\n    }\r\n    if ((x & 0xf) === 0) {\r\n        x >>= 4;\r\n        r += 4;\r\n    }\r\n    if ((x & 3) === 0) {\r\n        x >>= 2;\r\n        r += 2;\r\n    }\r\n    if ((x & 1) === 0) ++r;\r\n    return r;\r\n}\r\n\r\n//(public) returns index of lowest 1-bit (or -1 if none)\r\nfunction bnGetLowestSetBit() {\r\n    for (var i = 0; i < this.t; ++i)\r\n        if (this[i] != 0) return i * this.DB + lbit(this[i]);\r\n    if (this.s < 0) return this.t * this.DB;\r\n    return -1;\r\n}\r\n\r\n//return number of 1 bits in x\r\nfunction cbit(x) {\r\n    var r = 0;\r\n    while (x != 0) {\r\n        x &= x - 1;\r\n        ++r;\r\n    }\r\n    return r;\r\n}\r\n\r\n//(public) return number of set bits\r\nfunction bnBitCount() {\r\n    var r = 0, x = this.s & this.DM;\r\n    for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\r\n    return r;\r\n}\r\n\r\n//(public) true iff nth bit is set\r\nfunction bnTestBit(n) {\r\n    var j = Math.floor(n / this.DB);\r\n    if (j >= this.t) return (this.s != 0);\r\n    return ((this[j] & (1 << (n % this.DB))) != 0);\r\n}\r\n\r\n//(protected) this op (1<<n)\r\nfunction bnpChangeBit(n, op) {\r\n    var r = BigInteger.ONE.shiftLeft(n);\r\n    this.bitwiseTo(r, op, r);\r\n    return r;\r\n}\r\n\r\n//(public) this | (1<<n)\r\nfunction bnSetBit(n) {\r\n    return this.changeBit(n, op_or);\r\n}\r\n\r\n//(public) this & ~(1<<n)\r\nfunction bnClearBit(n) {\r\n    return this.changeBit(n, op_andnot);\r\n}\r\n\r\n//(public) this ^ (1<<n)\r\nfunction bnFlipBit(n) {\r\n    return this.changeBit(n, op_xor);\r\n}\r\n\r\n//(protected) r = this + a\r\nfunction bnpAddTo(a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, this.t);\r\n    while (i < m) {\r\n        c += this[i] + a[i];\r\n        r[i++] = c & this.DM;\r\n        c >>= this.DB;\r\n    }\r\n    if (a.t < this.t) {\r\n        c += a.s;\r\n        while (i < this.t) {\r\n            c += this[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        c += this.s;\r\n    }\r\n    else {\r\n        c += this.s;\r\n        while (i < a.t) {\r\n            c += a[i];\r\n            r[i++] = c & this.DM;\r\n            c >>= this.DB;\r\n        }\r\n        c += a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c > 0) r[i++] = c;\r\n    else if (c < -1) r[i++] = this.DV + c;\r\n    r.t = i;\r\n    r.clamp();\r\n}\r\n\r\n//(public) this + a\r\nfunction bnAdd(a) {\r\n    var r = nbi();\r\n    this.addTo(a, r);\r\n    return r;\r\n}\r\n\r\n//(public) this - a\r\nfunction bnSubtract(a) {\r\n    var r = nbi();\r\n    this.subTo(a, r);\r\n    return r;\r\n}\r\n\r\n//(public) this * a\r\nfunction bnMultiply(a) {\r\n    var r = nbi();\r\n    this.multiplyTo(a, r);\r\n    return r;\r\n}\r\n\r\n// (public) this^2\r\nfunction bnSquare() {\r\n    var r = nbi();\r\n    this.squareTo(r);\r\n    return r;\r\n}\r\n\r\n//(public) this / a\r\nfunction bnDivide(a) {\r\n    var r = nbi();\r\n    this.divRemTo(a, r, null);\r\n    return r;\r\n}\r\n\r\n//(public) this % a\r\nfunction bnRemainder(a) {\r\n    var r = nbi();\r\n    this.divRemTo(a, null, r);\r\n    return r;\r\n}\r\n\r\n//(public) [this/a,this%a]\r\nfunction bnDivideAndRemainder(a) {\r\n    var q = nbi(), r = nbi();\r\n    this.divRemTo(a, q, r);\r\n    return new Array(q, r);\r\n}\r\n\r\n//(protected) this *= n, this >= 0, 1 < n < DV\r\nfunction bnpDMultiply(n) {\r\n    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\r\n    ++this.t;\r\n    this.clamp();\r\n}\r\n\r\n//(protected) this += n << w words, this >= 0\r\nfunction bnpDAddOffset(n, w) {\r\n    if (n === 0) return;\r\n    while (this.t <= w) this[this.t++] = 0;\r\n    this[w] += n;\r\n    while (this[w] >= this.DV) {\r\n        this[w] -= this.DV;\r\n        if (++w >= this.t) this[this.t++] = 0;\r\n        ++this[w];\r\n    }\r\n}\r\n\r\n//A \"null\" reducer\r\nfunction NullExp() {\r\n}\r\nfunction nNop(x) {\r\n    return x;\r\n}\r\nfunction nMulTo(x, y, r) {\r\n    x.multiplyTo(y, r);\r\n}\r\nfunction nSqrTo(x, r) {\r\n    x.squareTo(r);\r\n}\r\n\r\nNullExp.prototype.convert = nNop;\r\nNullExp.prototype.revert = nNop;\r\nNullExp.prototype.mulTo = nMulTo;\r\nNullExp.prototype.sqrTo = nSqrTo;\r\n\r\n//(public) this^e\r\nfunction bnPow(e) {\r\n    return this.exp(e, new NullExp());\r\n}\r\n\r\n//(protected) r = lower n words of \"this * a\", a.t <= n\r\n//\"this\" should be the larger one if appropriate.\r\nfunction bnpMultiplyLowerTo(a, n, r) {\r\n    var i = Math.min(this.t + a.t, n);\r\n    r.s = 0; // assumes a,this >= 0\r\n    r.t = i;\r\n    while (i > 0) r[--i] = 0;\r\n    var j;\r\n    for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\r\n    for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\r\n    r.clamp();\r\n}\r\n\r\n//(protected) r = \"this * a\" without lower n words, n > 0\r\n//\"this\" should be the larger one if appropriate.\r\nfunction bnpMultiplyUpperTo(a, n, r) {\r\n    --n;\r\n    var i = r.t = this.t + a.t - n;\r\n    r.s = 0; // assumes a,this >= 0\r\n    while (--i >= 0) r[i] = 0;\r\n    for (i = Math.max(n - this.t, 0); i < a.t; ++i)\r\n        r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\r\n    r.clamp();\r\n    r.drShiftTo(1, r);\r\n}\r\n\r\n//Barrett modular reduction\r\nfunction Barrett(m) {\r\n// setup Barrett\r\n    this.r2 = nbi();\r\n    this.q3 = nbi();\r\n    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\r\n    this.mu = this.r2.divide(m);\r\n    this.m = m;\r\n}\r\n\r\nfunction barrettConvert(x) {\r\n    if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\r\n    else if (x.compareTo(this.m) < 0) return x;\r\n    else {\r\n        var r = nbi();\r\n        x.copyTo(r);\r\n        this.reduce(r);\r\n        return r;\r\n    }\r\n}\r\n\r\nfunction barrettRevert(x) {\r\n    return x;\r\n}\r\n\r\n//x = x mod m (HAC 14.42)\r\nfunction barrettReduce(x) {\r\n    x.drShiftTo(this.m.t - 1, this.r2);\r\n    if (x.t > this.m.t + 1) {\r\n        x.t = this.m.t + 1;\r\n        x.clamp();\r\n    }\r\n    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\r\n    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\r\n    while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\r\n    x.subTo(this.r2, x);\r\n    while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\r\n}\r\n\r\n//r = x^2 mod m; x != r\r\nfunction barrettSqrTo(x, r) {\r\n    x.squareTo(r);\r\n    this.reduce(r);\r\n}\r\n\r\n//r = x*y mod m; x,y != r\r\nfunction barrettMulTo(x, y, r) {\r\n    x.multiplyTo(y, r);\r\n    this.reduce(r);\r\n}\r\n\r\nBarrett.prototype.convert = barrettConvert;\r\nBarrett.prototype.revert = barrettRevert;\r\nBarrett.prototype.reduce = barrettReduce;\r\nBarrett.prototype.mulTo = barrettMulTo;\r\nBarrett.prototype.sqrTo = barrettSqrTo;\r\n\r\n//(public) this^e % m (HAC 14.85)\r\nfunction bnModPow(e, m) {\r\n    var i = e.bitLength(), k, r = nbv(1), z;\r\n    if (i <= 0) return r;\r\n    else if (i < 18) k = 1;\r\n    else if (i < 48) k = 3;\r\n    else if (i < 144) k = 4;\r\n    else if (i < 768) k = 5;\r\n    else k = 6;\r\n    if (i < 8)\r\n        z = new Classic(m);\r\n    else if (m.isEven())\r\n        z = new Barrett(m);\r\n    else\r\n        z = new Montgomery(m);\r\n\r\n// precomputation\r\n    var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\r\n    g[1] = z.convert(this);\r\n    if (k > 1) {\r\n        var g2 = nbi();\r\n        z.sqrTo(g[1], g2);\r\n        while (n <= km) {\r\n            g[n] = nbi();\r\n            z.mulTo(g2, g[n - 2], g[n]);\r\n            n += 2;\r\n        }\r\n    }\r\n\r\n    var j = e.t - 1, w, is1 = true, r2 = nbi(), t;\r\n    i = nbits(e[j]) - 1;\r\n    while (j >= 0) {\r\n        if (i >= k1) w = (e[j] >> (i - k1)) & km;\r\n        else {\r\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\r\n            if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\r\n        }\r\n\r\n        n = k;\r\n        while ((w & 1) === 0) {\r\n            w >>= 1;\r\n            --n;\r\n        }\r\n        if ((i -= n) < 0) {\r\n            i += this.DB;\r\n            --j;\r\n        }\r\n        if (is1) {\t// ret == 1, don't bother squaring or multiplying it\r\n            g[w].copyTo(r);\r\n            is1 = false;\r\n        }\r\n        else {\r\n            while (n > 1) {\r\n                z.sqrTo(r, r2);\r\n                z.sqrTo(r2, r);\r\n                n -= 2;\r\n            }\r\n            if (n > 0) z.sqrTo(r, r2); else {\r\n                t = r;\r\n                r = r2;\r\n                r2 = t;\r\n            }\r\n            z.mulTo(r2, g[w], r);\r\n        }\r\n\r\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\r\n            z.sqrTo(r, r2);\r\n            t = r;\r\n            r = r2;\r\n            r2 = t;\r\n            if (--i < 0) {\r\n                i = this.DB - 1;\r\n                --j;\r\n            }\r\n        }\r\n    }\r\n    return z.revert(r);\r\n}\r\n\r\n//(public) gcd(this,a) (HAC 14.54)\r\nfunction bnGCD(a) {\r\n    var x = (this.s < 0) ? this.negate() : this.clone();\r\n    var y = (a.s < 0) ? a.negate() : a.clone();\r\n    if (x.compareTo(y) < 0) {\r\n        var t = x;\r\n        x = y;\r\n        y = t;\r\n    }\r\n    var i = x.getLowestSetBit(), g = y.getLowestSetBit();\r\n    if (g < 0) return x;\r\n    if (i < g) g = i;\r\n    if (g > 0) {\r\n        x.rShiftTo(g, x);\r\n        y.rShiftTo(g, y);\r\n    }\r\n    while (x.signum() > 0) {\r\n        if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\r\n        if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\r\n        if (x.compareTo(y) >= 0) {\r\n            x.subTo(y, x);\r\n            x.rShiftTo(1, x);\r\n        }\r\n        else {\r\n            y.subTo(x, y);\r\n            y.rShiftTo(1, y);\r\n        }\r\n    }\r\n    if (g > 0) y.lShiftTo(g, y);\r\n    return y;\r\n}\r\n\r\n//(protected) this % n, n < 2^26\r\nfunction bnpModInt(n) {\r\n    if (n <= 0) return 0;\r\n    var d = this.DV % n, r = (this.s < 0) ? n - 1 : 0;\r\n    if (this.t > 0)\r\n        if (d === 0) r = this[0] % n;\r\n        else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\r\n    return r;\r\n}\r\n\r\n//(public) 1/this % m (HAC 14.61)\r\nfunction bnModInverse(m) {\r\n    var ac = m.isEven();\r\n    if ((this.isEven() && ac) || m.signum() === 0) return BigInteger.ZERO;\r\n    var u = m.clone(), v = this.clone();\r\n    var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\r\n    while (u.signum() != 0) {\r\n        while (u.isEven()) {\r\n            u.rShiftTo(1, u);\r\n            if (ac) {\r\n                if (!a.isEven() || !b.isEven()) {\r\n                    a.addTo(this, a);\r\n                    b.subTo(m, b);\r\n                }\r\n                a.rShiftTo(1, a);\r\n            }\r\n            else if (!b.isEven()) b.subTo(m, b);\r\n            b.rShiftTo(1, b);\r\n        }\r\n        while (v.isEven()) {\r\n            v.rShiftTo(1, v);\r\n            if (ac) {\r\n                if (!c.isEven() || !d.isEven()) {\r\n                    c.addTo(this, c);\r\n                    d.subTo(m, d);\r\n                }\r\n                c.rShiftTo(1, c);\r\n            }\r\n            else if (!d.isEven()) d.subTo(m, d);\r\n            d.rShiftTo(1, d);\r\n        }\r\n        if (u.compareTo(v) >= 0) {\r\n            u.subTo(v, u);\r\n            if (ac) a.subTo(c, a);\r\n            b.subTo(d, b);\r\n        }\r\n        else {\r\n            v.subTo(u, v);\r\n            if (ac) c.subTo(a, c);\r\n            d.subTo(b, d);\r\n        }\r\n    }\r\n    if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\r\n    if (d.compareTo(m) >= 0) return d.subtract(m);\r\n    if (d.signum() < 0) d.addTo(m, d); else return d;\r\n    if (d.signum() < 0) return d.add(m); else return d;\r\n}\r\n\r\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\r\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\r\n\r\n//(public) test primality with certainty >= 1-.5^t\r\nfunction bnIsProbablePrime(t) {\r\n    var i, x = this.abs();\r\n    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\r\n        for (i = 0; i < lowprimes.length; ++i)\r\n            if (x[0] == lowprimes[i]) return true;\r\n        return false;\r\n    }\r\n    if (x.isEven()) return false;\r\n    i = 1;\r\n    while (i < lowprimes.length) {\r\n        var m = lowprimes[i], j = i + 1;\r\n        while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\r\n        m = x.modInt(m);\r\n        while (i < j) if (m % lowprimes[i++] === 0) return false;\r\n    }\r\n    return x.millerRabin(t);\r\n}\r\n\r\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\r\nfunction bnpMillerRabin(t) {\r\n    var n1 = this.subtract(BigInteger.ONE);\r\n    var k = n1.getLowestSetBit();\r\n    if (k <= 0) return false;\r\n    var r = n1.shiftRight(k);\r\n    t = (t + 1) >> 1;\r\n    if (t > lowprimes.length) t = lowprimes.length;\r\n    var a = nbi();\r\n    for (var i = 0; i < t; ++i) {\r\n        //Pick bases at random, instead of starting at 2\r\n        a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\r\n        var y = a.modPow(r, this);\r\n        if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\r\n            var j = 1;\r\n            while (j++ < k && y.compareTo(n1) != 0) {\r\n                y = y.modPowInt(2, this);\r\n                if (y.compareTo(BigInteger.ONE) === 0) return false;\r\n            }\r\n            if (y.compareTo(n1) != 0) return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// protected\r\nBigInteger.prototype.copyTo = bnpCopyTo;\r\nBigInteger.prototype.fromInt = bnpFromInt;\r\nBigInteger.prototype.fromString = bnpFromString;\r\nBigInteger.prototype.fromByteArray = bnpFromByteArray;\r\nBigInteger.prototype.fromBuffer = bnpFromBuffer;\r\nBigInteger.prototype.clamp = bnpClamp;\r\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\r\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\r\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\r\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\r\nBigInteger.prototype.subTo = bnpSubTo;\r\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\r\nBigInteger.prototype.squareTo = bnpSquareTo;\r\nBigInteger.prototype.divRemTo = bnpDivRemTo;\r\nBigInteger.prototype.invDigit = bnpInvDigit;\r\nBigInteger.prototype.isEven = bnpIsEven;\r\nBigInteger.prototype.exp = bnpExp;\r\n\r\nBigInteger.prototype.chunkSize = bnpChunkSize;\r\nBigInteger.prototype.toRadix = bnpToRadix;\r\nBigInteger.prototype.fromRadix = bnpFromRadix;\r\nBigInteger.prototype.fromNumber = bnpFromNumber;\r\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\r\nBigInteger.prototype.changeBit = bnpChangeBit;\r\nBigInteger.prototype.addTo = bnpAddTo;\r\nBigInteger.prototype.dMultiply = bnpDMultiply;\r\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\r\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\r\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\r\nBigInteger.prototype.modInt = bnpModInt;\r\nBigInteger.prototype.millerRabin = bnpMillerRabin;\r\n\r\n\r\n// public\r\nBigInteger.prototype.toString = bnToString;\r\nBigInteger.prototype.negate = bnNegate;\r\nBigInteger.prototype.abs = bnAbs;\r\nBigInteger.prototype.compareTo = bnCompareTo;\r\nBigInteger.prototype.bitLength = bnBitLength;\r\nBigInteger.prototype.mod = bnMod;\r\nBigInteger.prototype.modPowInt = bnModPowInt;\r\n\r\nBigInteger.prototype.clone = bnClone;\r\nBigInteger.prototype.intValue = bnIntValue;\r\nBigInteger.prototype.byteValue = bnByteValue;\r\nBigInteger.prototype.shortValue = bnShortValue;\r\nBigInteger.prototype.signum = bnSigNum;\r\nBigInteger.prototype.toByteArray = bnToByteArray;\r\nBigInteger.prototype.toBuffer = bnToBuffer;\r\nBigInteger.prototype.equals = bnEquals;\r\nBigInteger.prototype.min = bnMin;\r\nBigInteger.prototype.max = bnMax;\r\nBigInteger.prototype.and = bnAnd;\r\nBigInteger.prototype.or = bnOr;\r\nBigInteger.prototype.xor = bnXor;\r\nBigInteger.prototype.andNot = bnAndNot;\r\nBigInteger.prototype.not = bnNot;\r\nBigInteger.prototype.shiftLeft = bnShiftLeft;\r\nBigInteger.prototype.shiftRight = bnShiftRight;\r\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\r\nBigInteger.prototype.bitCount = bnBitCount;\r\nBigInteger.prototype.testBit = bnTestBit;\r\nBigInteger.prototype.setBit = bnSetBit;\r\nBigInteger.prototype.clearBit = bnClearBit;\r\nBigInteger.prototype.flipBit = bnFlipBit;\r\nBigInteger.prototype.add = bnAdd;\r\nBigInteger.prototype.subtract = bnSubtract;\r\nBigInteger.prototype.multiply = bnMultiply;\r\nBigInteger.prototype.divide = bnDivide;\r\nBigInteger.prototype.remainder = bnRemainder;\r\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\r\nBigInteger.prototype.modPow = bnModPow;\r\nBigInteger.prototype.modInverse = bnModInverse;\r\nBigInteger.prototype.pow = bnPow;\r\nBigInteger.prototype.gcd = bnGCD;\r\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\r\nBigInteger.int2char = int2char;\r\n\r\n// \"constants\"\r\nBigInteger.ZERO = nbv(0);\r\nBigInteger.ONE = nbv(1);\r\n\r\n// JSBN-specific extension\r\nBigInteger.prototype.square = bnSquare;\r\n\r\n//BigInteger interfaces not implemented in jsbn:\r\n\r\n//BigInteger(int signum, byte[] magnitude)\r\n//double doubleValue()\r\n//float floatValue()\r\n//int hashCode()\r\n//long longValue()\r\n//static BigInteger valueOf(long val)\r\n\r\nmodule.exports = BigInteger;", "/**\n * PKCS1 padding and signature scheme\n */\n\nvar BigInteger = require('../libs/jsbn');\nvar crypt = require('crypto');\nvar constants = require('constants');\nvar SIGN_INFO_HEAD = {\n    md2: Buffer.from('3020300c06082a864886f70d020205000410', 'hex'),\n    md5: Buffer.from('3020300c06082a864886f70d020505000410', 'hex'),\n    sha1: Buffer.from('3021300906052b0e03021a05000414', 'hex'),\n    sha224: Buffer.from('302d300d06096086480165030402040500041c', 'hex'),\n    sha256: Buffer.from('3031300d060960864801650304020105000420', 'hex'),\n    sha384: Buffer.from('3041300d060960864801650304020205000430', 'hex'),\n    sha512: Buffer.from('3051300d060960864801650304020305000440', 'hex'),\n    ripemd160: Buffer.from('3021300906052b2403020105000414', 'hex'),\n    rmd160: Buffer.from('3021300906052b2403020105000414', 'hex')\n};\n\nvar SIGN_ALG_TO_HASH_ALIASES = {\n    'ripemd160': 'rmd160'\n};\n\nvar DEFAULT_HASH_FUNCTION = 'sha256';\n\nmodule.exports = {\n    isEncryption: true,\n    isSignature: true\n};\n\nmodule.exports.makeScheme = function (key, options) {\n    function Scheme(key, options) {\n        this.key = key;\n        this.options = options;\n    }\n\n    Scheme.prototype.maxMessageLength = function () {\n        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING) {\n            return this.key.encryptedDataLength;\n        }\n        return this.key.encryptedDataLength - 11;\n    };\n\n    /**\n     * Pad input Buffer to encryptedDataLength bytes, and return Buffer.from\n     * alg: PKCS#1\n     * @param buffer\n     * @returns {Buffer}\n     */\n    Scheme.prototype.encPad = function (buffer, options) {\n        options = options || {};\n        var filled;\n        if (buffer.length > this.key.maxMessageLength) {\n            throw new Error(\"Message too long for RSA (n=\" + this.key.encryptedDataLength + \", l=\" + buffer.length + \")\");\n        }\n        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING) {\n            //RSA_NO_PADDING treated like JAVA left pad with zero character\n            filled = Buffer.alloc(this.key.maxMessageLength - buffer.length);\n            filled.fill(0);\n            return Buffer.concat([filled, buffer]);\n        }\n\n        /* Type 1: zeros padding for private key encrypt */\n        if (options.type === 1) {\n            filled = Buffer.alloc(this.key.encryptedDataLength - buffer.length - 1);\n            filled.fill(0xff, 0, filled.length - 1);\n            filled[0] = 1;\n            filled[filled.length - 1] = 0;\n\n            return Buffer.concat([filled, buffer]);\n        } else {\n            /* random padding for public key encrypt */\n            filled = Buffer.alloc(this.key.encryptedDataLength - buffer.length);\n            filled[0] = 0;\n            filled[1] = 2;\n            var rand = crypt.randomBytes(filled.length - 3);\n            for (var i = 0; i < rand.length; i++) {\n                var r = rand[i];\n                while (r === 0) { // non-zero only\n                    r = crypt.randomBytes(1)[0];\n                }\n                filled[i + 2] = r;\n            }\n            filled[filled.length - 1] = 0;\n            return Buffer.concat([filled, buffer]);\n        }\n    };\n\n    /**\n     * Unpad input Buffer and, if valid, return the Buffer object\n     * alg: PKCS#1 (type 2, random)\n     * @param buffer\n     * @returns {Buffer}\n     */\n    Scheme.prototype.encUnPad = function (buffer, options) {\n        options = options || {};\n        var i = 0;\n\n        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING) {\n            //RSA_NO_PADDING treated like JAVA left pad with zero character\n            var unPad;\n            if (typeof buffer.lastIndexOf == \"function\") { //patch for old node version\n                unPad = buffer.slice(buffer.lastIndexOf('\\0') + 1, buffer.length);\n            } else {\n                unPad = buffer.slice(String.prototype.lastIndexOf.call(buffer, '\\0') + 1, buffer.length);\n            }\n            return unPad;\n        }\n\n        if (buffer.length < 4) {\n            return null;\n        }\n\n        /* Type 1: zeros padding for private key decrypt */\n        if (options.type === 1) {\n            if (buffer[0] !== 0 || buffer[1] !== 1) {\n                return null;\n            }\n            i = 3;\n            while (buffer[i] !== 0) {\n                if (buffer[i] != 0xFF || ++i >= buffer.length) {\n                    return null;\n                }\n            }\n        } else {\n            /* random padding for public key decrypt */\n            if (buffer[0] !== 0 || buffer[1] !== 2) {\n                return null;\n            }\n            i = 3;\n            while (buffer[i] !== 0) {\n                if (++i >= buffer.length) {\n                    return null;\n                }\n            }\n        }\n        return buffer.slice(i + 1, buffer.length);\n    };\n\n    Scheme.prototype.sign = function (buffer) {\n        var hashAlgorithm = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\n        if (this.options.environment === 'browser') {\n            hashAlgorithm = SIGN_ALG_TO_HASH_ALIASES[hashAlgorithm] || hashAlgorithm;\n\n            var hasher = crypt.createHash(hashAlgorithm);\n            hasher.update(buffer);\n            var hash = this.pkcs1pad(hasher.digest(), hashAlgorithm);\n            var res = this.key.$doPrivate(new BigInteger(hash)).toBuffer(this.key.encryptedDataLength);\n\n            return res;\n        } else {\n            var signer = crypt.createSign('RSA-' + hashAlgorithm.toUpperCase());\n            signer.update(buffer);\n            return signer.sign(this.options.rsaUtils.exportKey('private'));\n        }\n    };\n\n    Scheme.prototype.verify = function (buffer, signature, signature_encoding) {\n        if (this.options.encryptionSchemeOptions && this.options.encryptionSchemeOptions.padding == constants.RSA_NO_PADDING) {\n            //RSA_NO_PADDING has no verify data\n            return false;\n        }\n        var hashAlgorithm = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\n        if (this.options.environment === 'browser') {\n            hashAlgorithm = SIGN_ALG_TO_HASH_ALIASES[hashAlgorithm] || hashAlgorithm;\n\n            if (signature_encoding) {\n                signature = Buffer.from(signature, signature_encoding);\n            }\n\n            var hasher = crypt.createHash(hashAlgorithm);\n            hasher.update(buffer);\n            var hash = this.pkcs1pad(hasher.digest(), hashAlgorithm);\n            var m = this.key.$doPublic(new BigInteger(signature));\n\n            return m.toBuffer().toString('hex') == hash.toString('hex');\n        } else {\n            var verifier = crypt.createVerify('RSA-' + hashAlgorithm.toUpperCase());\n            verifier.update(buffer);\n            return verifier.verify(this.options.rsaUtils.exportKey('public'), signature, signature_encoding);\n        }\n    };\n\n    /**\n     * PKCS#1 zero pad input buffer to max data length\n     * @param hashBuf\n     * @param hashAlgorithm\n     * @returns {*}\n     */\n    Scheme.prototype.pkcs0pad = function (buffer) {\n        var filled = Buffer.alloc(this.key.maxMessageLength - buffer.length);\n        filled.fill(0);\n        return Buffer.concat([filled, buffer]);\n    };\n\n    Scheme.prototype.pkcs0unpad = function (buffer) {\n        var unPad;\n        if (typeof buffer.lastIndexOf == \"function\") { //patch for old node version\n            unPad = buffer.slice(buffer.lastIndexOf('\\0') + 1, buffer.length);\n        } else {\n            unPad = buffer.slice(String.prototype.lastIndexOf.call(buffer, '\\0') + 1, buffer.length);\n        }\n\n        return unPad;\n    };\n\n    /**\n     * PKCS#1 pad input buffer to max data length\n     * @param hashBuf\n     * @param hashAlgorithm\n     * @returns {*}\n     */\n    Scheme.prototype.pkcs1pad = function (hashBuf, hashAlgorithm) {\n        var digest = SIGN_INFO_HEAD[hashAlgorithm];\n        if (!digest) {\n            throw Error('Unsupported hash algorithm');\n        }\n\n        var data = Buffer.concat([digest, hashBuf]);\n\n        if (data.length + 10 > this.key.encryptedDataLength) {\n            throw Error('Key is too short for signing algorithm (' + hashAlgorithm + ')');\n        }\n\n        var filled = Buffer.alloc(this.key.encryptedDataLength - data.length - 1);\n        filled.fill(0xff, 0, filled.length - 1);\n        filled[0] = 1;\n        filled[filled.length - 1] = 0;\n\n        var res = Buffer.concat([filled, data]);\n\n        return res;\n    };\n\n    return new Scheme(key, options);\n};\n\n\n", "/**\n * PKCS_OAEP signature scheme\n */\n\nvar BigInteger = require('../libs/jsbn');\nvar crypt = require('crypto');\n\nmodule.exports = {\n    isEncryption: true,\n    isSignature: false\n};\n\nmodule.exports.digestLength = {\n    md4: 16,\n    md5: 16,\n    ripemd160: 20,\n    rmd160: 20,\n    sha1: 20,\n    sha224: 28,\n    sha256: 32,\n    sha384: 48,\n    sha512: 64\n};\n\nvar DEFAULT_HASH_FUNCTION = 'sha1';\n\n/*\n * OAEP Mask Generation Function 1\n * Generates a buffer full of pseudorandom bytes given seed and maskLength.\n * Giving the same seed, maskLength, and hashFunction will result in the same exact byte values in the buffer.\n *\n * https://tools.ietf.org/html/rfc3447#appendix-B.2.1\n *\n * Parameters:\n * seed\t\t\t[Buffer]\tThe pseudo random seed for this function\n * maskLength\t[int]\t\tThe length of the output\n * hashFunction\t[String]\tThe hashing function to use. Will accept any valid crypto hash. Default \"sha1\"\n *\t\tSupports \"sha1\" and \"sha256\".\n *\t\tTo add another algorythm the algorythem must be accepted by crypto.createHash, and then the length of the output of the hash function (the digest) must be added to the digestLength object below.\n *\t\tMost RSA implementations will be expecting sha1\n */\nmodule.exports.eme_oaep_mgf1 = function (seed, maskLength, hashFunction) {\n    hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;\n    var hLen = module.exports.digestLength[hashFunction];\n    var count = Math.ceil(maskLength / hLen);\n    var T = Buffer.alloc(hLen * count);\n    var c = Buffer.alloc(4);\n    for (var i = 0; i < count; ++i) {\n        var hash = crypt.createHash(hashFunction);\n        hash.update(seed);\n        c.writeUInt32BE(i, 0);\n        hash.update(c);\n        hash.digest().copy(T, i * hLen);\n    }\n    return T.slice(0, maskLength);\n};\n\nmodule.exports.makeScheme = function (key, options) {\n    function Scheme(key, options) {\n        this.key = key;\n        this.options = options;\n    }\n\n    Scheme.prototype.maxMessageLength = function () {\n        return this.key.encryptedDataLength - 2 * module.exports.digestLength[this.options.encryptionSchemeOptions.hash || DEFAULT_HASH_FUNCTION] - 2;\n    };\n\n    /**\n     * Pad input\n     * alg: PKCS1_OAEP\n     *\n     * https://tools.ietf.org/html/rfc3447#section-7.1.1\n     */\n    Scheme.prototype.encPad = function (buffer) {\n        var hash = this.options.encryptionSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\n        var mgf = this.options.encryptionSchemeOptions.mgf || module.exports.eme_oaep_mgf1;\n        var label = this.options.encryptionSchemeOptions.label || Buffer.alloc(0);\n        var emLen = this.key.encryptedDataLength;\n\n        var hLen = module.exports.digestLength[hash];\n\n        // Make sure we can put message into an encoded message of emLen bytes\n        if (buffer.length > emLen - 2 * hLen - 2) {\n            throw new Error(\"Message is too long to encode into an encoded message with a length of \" + emLen + \" bytes, increase\" +\n            \"emLen to fix this error (minimum value for given parameters and options: \" + (emLen - 2 * hLen - 2) + \")\");\n        }\n\n        var lHash = crypt.createHash(hash);\n        lHash.update(label);\n        lHash = lHash.digest();\n\n        var PS = Buffer.alloc(emLen - buffer.length - 2 * hLen - 1); // Padding \"String\"\n        PS.fill(0); // Fill the buffer with octets of 0\n        PS[PS.length - 1] = 1;\n\n        var DB = Buffer.concat([lHash, PS, buffer]);\n        var seed = crypt.randomBytes(hLen);\n\n        // mask = dbMask\n        var mask = mgf(seed, DB.length, hash);\n        // XOR DB and dbMask together.\n        for (var i = 0; i < DB.length; i++) {\n            DB[i] ^= mask[i];\n        }\n        // DB = maskedDB\n\n        // mask = seedMask\n        mask = mgf(DB, hLen, hash);\n        // XOR seed and seedMask together.\n        for (i = 0; i < seed.length; i++) {\n            seed[i] ^= mask[i];\n        }\n        // seed = maskedSeed\n\n        var em = Buffer.alloc(1 + seed.length + DB.length);\n        em[0] = 0;\n        seed.copy(em, 1);\n        DB.copy(em, 1 + seed.length);\n\n        return em;\n    };\n\n    /**\n     * Unpad input\n     * alg: PKCS1_OAEP\n     *\n     * Note: This method works within the buffer given and modifies the values. It also returns a slice of the EM as the return Message.\n     * If the implementation requires that the EM parameter be unmodified then the implementation should pass in a clone of the EM buffer.\n     *\n     * https://tools.ietf.org/html/rfc3447#section-7.1.2\n     */\n    Scheme.prototype.encUnPad = function (buffer) {\n        var hash = this.options.encryptionSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\n        var mgf = this.options.encryptionSchemeOptions.mgf || module.exports.eme_oaep_mgf1;\n        var label = this.options.encryptionSchemeOptions.label || Buffer.alloc(0);\n\n        var hLen = module.exports.digestLength[hash];\n\n        // Check to see if buffer is a properly encoded OAEP message\n        if (buffer.length < 2 * hLen + 2) {\n            throw new Error(\"Error decoding message, the supplied message is not long enough to be a valid OAEP encoded message\");\n        }\n\n        var seed = buffer.slice(1, hLen + 1);\t// seed = maskedSeed\n        var DB = buffer.slice(1 + hLen);\t\t// DB = maskedDB\n\n        var mask = mgf(DB, hLen, hash); // seedMask\n        // XOR maskedSeed and seedMask together to get the original seed.\n        for (var i = 0; i < seed.length; i++) {\n            seed[i] ^= mask[i];\n        }\n\n        mask = mgf(seed, DB.length, hash); // dbMask\n        // XOR DB and dbMask together to get the original data block.\n        for (i = 0; i < DB.length; i++) {\n            DB[i] ^= mask[i];\n        }\n\n        var lHash = crypt.createHash(hash);\n        lHash.update(label);\n        lHash = lHash.digest();\n\n        var lHashEM = DB.slice(0, hLen);\n        if (lHashEM.toString(\"hex\") != lHash.toString(\"hex\")) {\n            throw new Error(\"Error decoding message, the lHash calculated from the label provided and the lHash in the encrypted data do not match.\");\n        }\n\n        // Filter out padding\n        i = hLen;\n        while (DB[i++] === 0 && i < DB.length);\n        if (DB[i - 1] != 1) {\n            throw new Error(\"Error decoding message, there is no padding message separator byte\");\n        }\n\n        return DB.slice(i); // Message\n    };\n\n    return new Scheme(key, options);\n};\n", "/**\r\n * PSS signature scheme\r\n */\r\n\r\nvar BigInteger = require('../libs/jsbn');\r\nvar crypt = require('crypto');\r\n\r\nmodule.exports = {\r\n    isEncryption: false,\r\n    isSignature: true\r\n};\r\n\r\nvar DEFAULT_HASH_FUNCTION = 'sha1';\r\nvar DEFAULT_SALT_LENGTH = 20;\r\n\r\nmodule.exports.makeScheme = function (key, options) {\r\n    var OAEP = require('./schemes').pkcs1_oaep;\r\n\r\n    /**\r\n     * @param key\r\n     * @param options\r\n     * options    [Object]    An object that contains the following keys that specify certain options for encoding.\r\n     *  \u2514>signingSchemeOptions\r\n     *     \u251C>hash    [String]    Hash function to use when encoding and generating masks. Must be a string accepted by node's crypto.createHash function. (default = \"sha1\")\r\n     *     \u251C>mgf    [function]    The mask generation function to use when encoding. (default = mgf1SHA1)\r\n     *     \u2514>sLen    [uint]        The length of the salt to generate. (default = 20)\r\n     * @constructor\r\n     */\r\n    function Scheme(key, options) {\r\n        this.key = key;\r\n        this.options = options;\r\n    }\r\n\r\n    Scheme.prototype.sign = function (buffer) {\r\n        var mHash = crypt.createHash(this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION);\r\n        mHash.update(buffer);\r\n\r\n        var encoded = this.emsa_pss_encode(mHash.digest(), this.key.keySize - 1);\r\n        return this.key.$doPrivate(new BigInteger(encoded)).toBuffer(this.key.encryptedDataLength);\r\n    };\r\n\r\n    Scheme.prototype.verify = function (buffer, signature, signature_encoding) {\r\n        if (signature_encoding) {\r\n            signature = Buffer.from(signature, signature_encoding);\r\n        }\r\n        signature = new BigInteger(signature);\r\n\r\n        var emLen = Math.ceil((this.key.keySize - 1) / 8);\r\n        var m = this.key.$doPublic(signature).toBuffer(emLen);\r\n\r\n        var mHash = crypt.createHash(this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION);\r\n        mHash.update(buffer);\r\n\r\n        return this.emsa_pss_verify(mHash.digest(), m, this.key.keySize - 1);\r\n    };\r\n\r\n    /*\r\n     * https://tools.ietf.org/html/rfc3447#section-9.1.1\r\n     *\r\n     * mHash\t[Buffer]\tHashed message to encode\r\n     * emBits\t[uint]\t\tMaximum length of output in bits. Must be at least 8hLen + 8sLen + 9 (hLen = Hash digest length in bytes | sLen = length of salt in bytes)\r\n     * @returns {Buffer} The encoded message\r\n     */\r\n    Scheme.prototype.emsa_pss_encode = function (mHash, emBits) {\r\n        var hash = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\r\n        var mgf = this.options.signingSchemeOptions.mgf || OAEP.eme_oaep_mgf1;\r\n        var sLen = this.options.signingSchemeOptions.saltLength || DEFAULT_SALT_LENGTH;\r\n\r\n        var hLen = OAEP.digestLength[hash];\r\n        var emLen = Math.ceil(emBits / 8);\r\n\r\n        if (emLen < hLen + sLen + 2) {\r\n            throw new Error(\"Output length passed to emBits(\" + emBits + \") is too small for the options \" +\r\n                \"specified(\" + hash + \", \" + sLen + \"). To fix this issue increase the value of emBits. (minimum size: \" +\r\n                (8 * hLen + 8 * sLen + 9) + \")\"\r\n            );\r\n        }\r\n\r\n        var salt = crypt.randomBytes(sLen);\r\n\r\n        var Mapostrophe = Buffer.alloc(8 + hLen + sLen);\r\n        Mapostrophe.fill(0, 0, 8);\r\n        mHash.copy(Mapostrophe, 8);\r\n        salt.copy(Mapostrophe, 8 + mHash.length);\r\n\r\n        var H = crypt.createHash(hash);\r\n        H.update(Mapostrophe);\r\n        H = H.digest();\r\n\r\n        var PS = Buffer.alloc(emLen - salt.length - hLen - 2);\r\n        PS.fill(0);\r\n\r\n        var DB = Buffer.alloc(PS.length + 1 + salt.length);\r\n        PS.copy(DB);\r\n        DB[PS.length] = 0x01;\r\n        salt.copy(DB, PS.length + 1);\r\n\r\n        var dbMask = mgf(H, DB.length, hash);\r\n\r\n        // XOR DB and dbMask together\r\n        var maskedDB = Buffer.alloc(DB.length);\r\n        for (var i = 0; i < dbMask.length; i++) {\r\n            maskedDB[i] = DB[i] ^ dbMask[i];\r\n        }\r\n\r\n        var bits = 8 * emLen - emBits;\r\n        var mask = 255 ^ (255 >> 8 - bits << 8 - bits);\r\n        maskedDB[0] = maskedDB[0] & mask;\r\n\r\n        var EM = Buffer.alloc(maskedDB.length + H.length + 1);\r\n        maskedDB.copy(EM, 0);\r\n        H.copy(EM, maskedDB.length);\r\n        EM[EM.length - 1] = 0xbc;\r\n\r\n        return EM;\r\n    };\r\n\r\n    /*\r\n     * https://tools.ietf.org/html/rfc3447#section-9.1.2\r\n     *\r\n     * mHash\t[Buffer]\tHashed message\r\n     * EM\t\t[Buffer]\tSignature\r\n     * emBits\t[uint]\t\tLength of EM in bits. Must be at least 8hLen + 8sLen + 9 to be a valid signature. (hLen = Hash digest length in bytes | sLen = length of salt in bytes)\r\n     * @returns {Boolean} True if signature(EM) matches message(M)\r\n     */\r\n    Scheme.prototype.emsa_pss_verify = function (mHash, EM, emBits) {\r\n        var hash = this.options.signingSchemeOptions.hash || DEFAULT_HASH_FUNCTION;\r\n        var mgf = this.options.signingSchemeOptions.mgf || OAEP.eme_oaep_mgf1;\r\n        var sLen = this.options.signingSchemeOptions.saltLength || DEFAULT_SALT_LENGTH;\r\n\r\n        var hLen = OAEP.digestLength[hash];\r\n        var emLen = Math.ceil(emBits / 8);\r\n\r\n        if (emLen < hLen + sLen + 2 || EM[EM.length - 1] != 0xbc) {\r\n            return false;\r\n        }\r\n\r\n        var DB = Buffer.alloc(emLen - hLen - 1);\r\n        EM.copy(DB, 0, 0, emLen - hLen - 1);\r\n\r\n        var mask = 0;\r\n        for (var i = 0, bits = 8 * emLen - emBits; i < bits; i++) {\r\n            mask |= 1 << (7 - i);\r\n        }\r\n\r\n        if ((DB[0] & mask) !== 0) {\r\n            return false;\r\n        }\r\n\r\n        var H = EM.slice(emLen - hLen - 1, emLen - 1);\r\n        var dbMask = mgf(H, DB.length, hash);\r\n\r\n        // Unmask DB\r\n        for (i = 0; i < DB.length; i++) {\r\n            DB[i] ^= dbMask[i];\r\n        }\r\n\r\n        bits = 8 * emLen - emBits;\r\n        mask = 255 ^ (255 >> 8 - bits << 8 - bits);\r\n        DB[0] = DB[0] & mask;\r\n\r\n        // Filter out padding\r\n        for (i = 0; DB[i] === 0 && i < DB.length; i++);\r\n        if (DB[i] != 1) {\r\n            return false;\r\n        }\r\n\r\n        var salt = DB.slice(DB.length - sLen);\r\n\r\n        var Mapostrophe = Buffer.alloc(8 + hLen + sLen);\r\n        Mapostrophe.fill(0, 0, 8);\r\n        mHash.copy(Mapostrophe, 8);\r\n        salt.copy(Mapostrophe, 8 + mHash.length);\r\n\r\n        var Hapostrophe = crypt.createHash(hash);\r\n        Hapostrophe.update(Mapostrophe);\r\n        Hapostrophe = Hapostrophe.digest();\r\n\r\n        return H.toString(\"hex\") === Hapostrophe.toString(\"hex\");\r\n    };\r\n\r\n    return new Scheme(key, options);\r\n};\r\n", "module.exports = {\r\n    pkcs1: require('./pkcs1'),\r\n    pkcs1_oaep: require('./oaep'),\r\n    pss: require('./pss'),\r\n\r\n    /**\r\n     * Check if scheme has padding methods\r\n     * @param scheme {string}\r\n     * @returns {Boolean}\r\n     */\r\n    isEncryption: function (scheme) {\r\n        return module.exports[scheme] && module.exports[scheme].isEncryption;\r\n    },\r\n\r\n    /**\r\n     * Check if scheme has sign/verify methods\r\n     * @param scheme {string}\r\n     * @returns {Boolean}\r\n     */\r\n    isSignature: function (scheme) {\r\n        return module.exports[scheme] && module.exports[scheme].isSignature;\r\n    }\r\n};", "var BigInteger = require('../libs/jsbn.js');\r\nvar schemes = require('../schemes/schemes.js');\r\n\r\nmodule.exports = function (keyPair, options) {\r\n    var pkcs1Scheme = schemes.pkcs1.makeScheme(keyPair, options);\r\n\r\n    return {\r\n        encrypt: function (buffer, usePrivate) {\r\n            var m, c;\r\n            if (usePrivate) {\r\n                /* Type 1: zeros padding for private key encrypt */\r\n                m = new BigInteger(pkcs1Scheme.encPad(buffer, {type: 1}));\r\n                c = keyPair.$doPrivate(m);\r\n            } else {\r\n                m = new BigInteger(keyPair.encryptionScheme.encPad(buffer));\r\n                c = keyPair.$doPublic(m);\r\n            }\r\n            return c.toBuffer(keyPair.encryptedDataLength);\r\n        },\r\n\r\n        decrypt: function (buffer, usePublic) {\r\n            var m, c = new BigInteger(buffer);\r\n\r\n            if (usePublic) {\r\n                m = keyPair.$doPublic(c);\r\n                /* Type 1: zeros padding for private key decrypt */\r\n                return pkcs1Scheme.encUnPad(m.toBuffer(keyPair.encryptedDataLength), {type: 1});\r\n            } else {\r\n                m = keyPair.$doPrivate(c);\r\n                return keyPair.encryptionScheme.encUnPad(m.toBuffer(keyPair.encryptedDataLength));\r\n            }\r\n        }\r\n    };\r\n};", "var crypto = require('crypto');\nvar constants = require('constants');\nvar schemes = require('../schemes/schemes.js');\n\nmodule.exports = function (keyPair, options) {\n    var pkcs1Scheme = schemes.pkcs1.makeScheme(keyPair, options);\n\n    return {\n        encrypt: function (buffer, usePrivate) {\n            var padding;\n            if (usePrivate) {\n                padding = constants.RSA_PKCS1_PADDING;\n                if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                    padding = options.encryptionSchemeOptions.padding;\n                }\n                return crypto.privateEncrypt({\n                    key: options.rsaUtils.exportKey('private'),\n                    padding: padding\n                }, buffer);\n            } else {\n                padding = constants.RSA_PKCS1_OAEP_PADDING;\n                if (options.encryptionScheme === 'pkcs1') {\n                    padding = constants.RSA_PKCS1_PADDING;\n                }\n                if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                    padding = options.encryptionSchemeOptions.padding;\n                }\n\n                var data = buffer;\n                if (padding === constants.RSA_NO_PADDING) {\n                    data = pkcs1Scheme.pkcs0pad(buffer);\n                }\n\n                return crypto.publicEncrypt({\n                    key: options.rsaUtils.exportKey('public'),\n                    padding: padding\n                }, data);\n            }\n        },\n\n        decrypt: function (buffer, usePublic) {\n            var padding;\n            if (usePublic) {\n                padding = constants.RSA_PKCS1_PADDING;\n                if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                    padding = options.encryptionSchemeOptions.padding;\n                }\n                return crypto.publicDecrypt({\n                    key: options.rsaUtils.exportKey('public'),\n                    padding: padding\n                }, buffer);\n            } else {\n                padding = constants.RSA_PKCS1_OAEP_PADDING;\n                if (options.encryptionScheme === 'pkcs1') {\n                    padding = constants.RSA_PKCS1_PADDING;\n                }\n                if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                    padding = options.encryptionSchemeOptions.padding;\n                }\n                var res = crypto.privateDecrypt({\n                    key: options.rsaUtils.exportKey('private'),\n                    padding: padding\n                }, buffer);\n\n                if (padding === constants.RSA_NO_PADDING) {\n                    return pkcs1Scheme.pkcs0unpad(res);\n                }\n                return res;\n            }\n        }\n    };\n};", "var crypto = require('crypto');\nvar constants = require('constants');\nvar schemes = require('../schemes/schemes.js');\n\nmodule.exports = function (keyPair, options) {\n    var jsEngine = require('./js.js')(keyPair, options);\n    var pkcs1Scheme = schemes.pkcs1.makeScheme(keyPair, options);\n\n    return {\n        encrypt: function (buffer, usePrivate) {\n            if (usePrivate) {\n                return jsEngine.encrypt(buffer, usePrivate);\n            }\n            var padding = constants.RSA_PKCS1_OAEP_PADDING;\n            if (options.encryptionScheme === 'pkcs1') {\n                padding = constants.RSA_PKCS1_PADDING;\n            }\n            if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                padding = options.encryptionSchemeOptions.padding;\n            }\n\n            var data = buffer;\n            if (padding === constants.RSA_NO_PADDING) {\n                data = pkcs1Scheme.pkcs0pad(buffer);\n            }\n\n            return crypto.publicEncrypt({\n                key: options.rsaUtils.exportKey('public'),\n                padding: padding\n            }, data);\n        },\n\n        decrypt: function (buffer, usePublic) {\n            if (usePublic) {\n                return jsEngine.decrypt(buffer, usePublic);\n            }\n            var padding = constants.RSA_PKCS1_OAEP_PADDING;\n            if (options.encryptionScheme === 'pkcs1') {\n                padding = constants.RSA_PKCS1_PADDING;\n            }\n            if (options.encryptionSchemeOptions && options.encryptionSchemeOptions.padding) {\n                padding = options.encryptionSchemeOptions.padding;\n            }\n\n            var res = crypto.privateDecrypt({\n                key: options.rsaUtils.exportKey('private'),\n                padding: padding\n            }, buffer);\n\n            if (padding === constants.RSA_NO_PADDING) {\n                return pkcs1Scheme.pkcs0unpad(res);\n            }\n            return res;\n        }\n    };\n};", "var crypt = require('crypto');\r\n\r\nmodule.exports = {\r\n    getEngine: function (keyPair, options) {\r\n        var engine = require('./js.js');\r\n        if (options.environment === 'node') {\r\n            if (typeof crypt.publicEncrypt === 'function' && typeof crypt.privateDecrypt === 'function') {\r\n                if (typeof crypt.privateEncrypt === 'function' && typeof crypt.publicDecrypt === 'function') {\r\n                    engine = require('./io.js');\r\n                } else {\r\n                    engine = require('./node12.js');\r\n                }\r\n            }\r\n        }\r\n        return engine(keyPair, options);\r\n    }\r\n};", "/*\n * RSA Encryption / Decryption with PKCS1 v2 Padding.\n * \n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n/*\n * Node.js adaptation\n * long message support implementation\n * signing/verifying\n *\n * 2014 rzcoder\n */\n\nvar _ = require('../utils')._;\nvar crypt = require('crypto');\nvar BigInteger = require('./jsbn.js');\nvar utils = require('../utils.js');\nvar schemes = require('../schemes/schemes.js');\nvar encryptEngines = require('../encryptEngines/encryptEngines.js');\n\nexports.BigInteger = BigInteger;\nmodule.exports.Key = (function () {\n    /**\n     * RSA key constructor\n     *\n     * n - modulus\n     * e - publicExponent\n     * d - privateExponent\n     * p - prime1\n     * q - prime2\n     * dmp1 - exponent1 -- d mod (p1)\n     * dmq1 - exponent2 -- d mod (q-1)\n     * coeff - coefficient -- (inverse of q) mod p\n     */\n    function RSAKey() {\n        this.n = null;\n        this.e = 0;\n        this.d = null;\n        this.p = null;\n        this.q = null;\n        this.dmp1 = null;\n        this.dmq1 = null;\n        this.coeff = null;\n    }\n\n    RSAKey.prototype.setOptions = function (options) {\n        var signingSchemeProvider = schemes[options.signingScheme];\n        var encryptionSchemeProvider = schemes[options.encryptionScheme];\n\n        if (signingSchemeProvider === encryptionSchemeProvider) {\n            this.signingScheme = this.encryptionScheme = encryptionSchemeProvider.makeScheme(this, options);\n        } else {\n            this.encryptionScheme = encryptionSchemeProvider.makeScheme(this, options);\n            this.signingScheme = signingSchemeProvider.makeScheme(this, options);\n        }\n\n        this.encryptEngine = encryptEngines.getEngine(this, options);\n    };\n\n    /**\n     * Generate a new random private key B bits long, using public expt E\n     * @param B\n     * @param E\n     */\n    RSAKey.prototype.generate = function (B, E) {\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new BigInteger(E, 16);\n        while (true) {\n            while (true) {\n                this.p = new BigInteger(B - qs, 1);\n                if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) === 0 && this.p.isProbablePrime(10))\n                    break;\n            }\n            while (true) {\n                this.q = new BigInteger(qs, 1);\n                if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) === 0 && this.q.isProbablePrime(10))\n                    break;\n            }\n            if (this.p.compareTo(this.q) <= 0) {\n                var t = this.p;\n                this.p = this.q;\n                this.q = t;\n            }\n            var p1 = this.p.subtract(BigInteger.ONE);\n            var q1 = this.q.subtract(BigInteger.ONE);\n            var phi = p1.multiply(q1);\n            if (phi.gcd(ee).compareTo(BigInteger.ONE) === 0) {\n                this.n = this.p.multiply(this.q);\n                if (this.n.bitLength() < B) {\n                    continue;\n                }\n                this.d = ee.modInverse(phi);\n                this.dmp1 = this.d.mod(p1);\n                this.dmq1 = this.d.mod(q1);\n                this.coeff = this.q.modInverse(this.p);\n                break;\n            }\n        }\n        this.$$recalculateCache();\n    };\n\n    /**\n     * Set the private key fields N, e, d and CRT params from buffers\n     *\n     * @param N\n     * @param E\n     * @param D\n     * @param P\n     * @param Q\n     * @param DP\n     * @param DQ\n     * @param C\n     */\n    RSAKey.prototype.setPrivate = function (N, E, D, P, Q, DP, DQ, C) {\n        if (N && E && D && N.length > 0 && (_.isNumber(E) || E.length > 0) && D.length > 0) {\n            this.n = new BigInteger(N);\n            this.e = _.isNumber(E) ? E : utils.get32IntFromBuffer(E, 0);\n            this.d = new BigInteger(D);\n\n            if (P && Q && DP && DQ && C) {\n                this.p = new BigInteger(P);\n                this.q = new BigInteger(Q);\n                this.dmp1 = new BigInteger(DP);\n                this.dmq1 = new BigInteger(DQ);\n                this.coeff = new BigInteger(C);\n            } else {\n                // TODO: re-calculate any missing CRT params\n            }\n            this.$$recalculateCache();\n        } else {\n            throw Error(\"Invalid RSA private key\");\n        }\n    };\n\n    /**\n     * Set the public key fields N and e from hex strings\n     * @param N\n     * @param E\n     */\n    RSAKey.prototype.setPublic = function (N, E) {\n        if (N && E && N.length > 0 && (_.isNumber(E) || E.length > 0)) {\n            this.n = new BigInteger(N);\n            this.e = _.isNumber(E) ? E : utils.get32IntFromBuffer(E, 0);\n            this.$$recalculateCache();\n        } else {\n            throw Error(\"Invalid RSA public key\");\n        }\n    };\n\n    /**\n     * private\n     * Perform raw private operation on \"x\": return x^d (mod n)\n     *\n     * @param x\n     * @returns {*}\n     */\n    RSAKey.prototype.$doPrivate = function (x) {\n        if (this.p || this.q) {\n            return x.modPow(this.d, this.n);\n        }\n\n        // TODO: re-calculate any missing CRT params\n        var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n        var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n\n        while (xp.compareTo(xq) < 0) {\n            xp = xp.add(this.p);\n        }\n        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n    };\n\n    /**\n     * private\n     * Perform raw public operation on \"x\": return x^e (mod n)\n     *\n     * @param x\n     * @returns {*}\n     */\n    RSAKey.prototype.$doPublic = function (x) {\n        return x.modPowInt(this.e, this.n);\n    };\n\n    /**\n     * Return the PKCS#1 RSA encryption of buffer\n     * @param buffer {Buffer}\n     * @returns {Buffer}\n     */\n    RSAKey.prototype.encrypt = function (buffer, usePrivate) {\n        var buffers = [];\n        var results = [];\n        var bufferSize = buffer.length;\n        var buffersCount = Math.ceil(bufferSize / this.maxMessageLength) || 1; // total buffers count for encrypt\n        var dividedSize = Math.ceil(bufferSize / buffersCount || 1); // each buffer size\n\n        if (buffersCount == 1) {\n            buffers.push(buffer);\n        } else {\n            for (var bufNum = 0; bufNum < buffersCount; bufNum++) {\n                buffers.push(buffer.slice(bufNum * dividedSize, (bufNum + 1) * dividedSize));\n            }\n        }\n\n        for (var i = 0; i < buffers.length; i++) {\n            results.push(this.encryptEngine.encrypt(buffers[i], usePrivate));\n        }\n\n        return Buffer.concat(results);\n    };\n\n    /**\n     * Return the PKCS#1 RSA decryption of buffer\n     * @param buffer {Buffer}\n     * @returns {Buffer}\n     */\n    RSAKey.prototype.decrypt = function (buffer, usePublic) {\n        if (buffer.length % this.encryptedDataLength > 0) {\n            throw Error('Incorrect data or key');\n        }\n\n        var result = [];\n        var offset = 0;\n        var length = 0;\n        var buffersCount = buffer.length / this.encryptedDataLength;\n\n        for (var i = 0; i < buffersCount; i++) {\n            offset = i * this.encryptedDataLength;\n            length = offset + this.encryptedDataLength;\n            result.push(this.encryptEngine.decrypt(buffer.slice(offset, Math.min(length, buffer.length)), usePublic));\n        }\n\n        return Buffer.concat(result);\n    };\n\n    RSAKey.prototype.sign = function (buffer) {\n        return this.signingScheme.sign.apply(this.signingScheme, arguments);\n    };\n\n    RSAKey.prototype.verify = function (buffer, signature, signature_encoding) {\n        return this.signingScheme.verify.apply(this.signingScheme, arguments);\n    };\n\n    /**\n     * Check if key pair contains private key\n     */\n    RSAKey.prototype.isPrivate = function () {\n        return this.n && this.e && this.d && true || false;\n    };\n\n    /**\n     * Check if key pair contains public key\n     * @param strict {boolean} - public key only, return false if have private exponent\n     */\n    RSAKey.prototype.isPublic = function (strict) {\n        return this.n && this.e && !(strict && this.d) || false;\n    };\n\n    Object.defineProperty(RSAKey.prototype, 'keySize', {\n        get: function () {\n            return this.cache.keyBitLength;\n        }\n    });\n\n    Object.defineProperty(RSAKey.prototype, 'encryptedDataLength', {\n        get: function () {\n            return this.cache.keyByteLength;\n        }\n    });\n\n    Object.defineProperty(RSAKey.prototype, 'maxMessageLength', {\n        get: function () {\n            return this.encryptionScheme.maxMessageLength();\n        }\n    });\n\n    /**\n     * Caching key data\n     */\n    RSAKey.prototype.$$recalculateCache = function () {\n        this.cache = this.cache || {};\n        // Bit & byte length\n        this.cache.keyBitLength = this.n.bitLength();\n        this.cache.keyByteLength = (this.cache.keyBitLength + 6) >> 3;\n    };\n\n    return RSAKey;\n})();\n\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n\n  newInvalidAsn1Error: function (msg) {\n    var e = new Error();\n    e.name = 'InvalidAsn1Error';\n    e.message = msg || '';\n    return e;\n  }\n\n};\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n  EOC: 0,\n  Boolean: 1,\n  Integer: 2,\n  BitString: 3,\n  OctetString: 4,\n  Null: 5,\n  OID: 6,\n  ObjectDescriptor: 7,\n  External: 8,\n  Real: 9, // float\n  Enumeration: 10,\n  PDV: 11,\n  Utf8String: 12,\n  RelativeOID: 13,\n  Sequence: 16,\n  Set: 17,\n  NumericString: 18,\n  PrintableString: 19,\n  T61String: 20,\n  VideotexString: 21,\n  IA5String: 22,\n  UTCTime: 23,\n  GeneralizedTime: 24,\n  GraphicString: 25,\n  VisibleString: 26,\n  GeneralString: 28,\n  UniversalString: 29,\n  CharacterString: 30,\n  BMPString: 31,\n  Constructor: 32,\n  Context: 128\n};\n", "import libDefault from 'assert';\nmodule.exports = libDefault;", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\n\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\n\n\n// --- API\n\nfunction Reader(data) {\n  if (!data || !Buffer.isBuffer(data))\n    throw new TypeError('data must be a node Buffer');\n\n  this._buf = data;\n  this._size = data.length;\n\n  // These hold the \"current\" state\n  this._len = 0;\n  this._offset = 0;\n}\n\nObject.defineProperty(Reader.prototype, 'length', {\n  enumerable: true,\n  get: function () { return (this._len); }\n});\n\nObject.defineProperty(Reader.prototype, 'offset', {\n  enumerable: true,\n  get: function () { return (this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'remain', {\n  get: function () { return (this._size - this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'buffer', {\n  get: function () { return (this._buf.slice(this._offset)); }\n});\n\n\n/**\n * Reads a single byte and advances offset; you can pass in `true` to make this\n * a \"peek\" operation (i.e., get the byte, but don't advance the offset).\n *\n * @param {Boolean} peek true means don't move offset.\n * @return {Number} the next byte, null if not enough data.\n */\nReader.prototype.readByte = function (peek) {\n  if (this._size - this._offset < 1)\n    return null;\n\n  var b = this._buf[this._offset] & 0xff;\n\n  if (!peek)\n    this._offset += 1;\n\n  return b;\n};\n\n\nReader.prototype.peek = function () {\n  return this.readByte(true);\n};\n\n\n/**\n * Reads a (potentially) variable length off the BER buffer.  This call is\n * not really meant to be called directly, as callers have to manipulate\n * the internal buffer afterwards.\n *\n * As a result of this call, you can call `Reader.length`, until the\n * next thing called that does a readLength.\n *\n * @return {Number} the amount of offset to advance the buffer.\n * @throws {InvalidAsn1Error} on bad ASN.1\n */\nReader.prototype.readLength = function (offset) {\n  if (offset === undefined)\n    offset = this._offset;\n\n  if (offset >= this._size)\n    return null;\n\n  var lenB = this._buf[offset++] & 0xff;\n  if (lenB === null)\n    return null;\n\n  if ((lenB & 0x80) === 0x80) {\n    lenB &= 0x7f;\n\n    if (lenB === 0)\n      throw newInvalidAsn1Error('Indefinite length not supported');\n\n    if (lenB > 4)\n      throw newInvalidAsn1Error('encoding too long');\n\n    if (this._size - offset < lenB)\n      return null;\n\n    this._len = 0;\n    for (var i = 0; i < lenB; i++)\n      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);\n\n  } else {\n    // Wasn't a variable length\n    this._len = lenB;\n  }\n\n  return offset;\n};\n\n\n/**\n * Parses the next sequence in this BER buffer.\n *\n * To get the length of the sequence, call `Reader.length`.\n *\n * @return {Number} the sequence's tag.\n */\nReader.prototype.readSequence = function (tag) {\n  var seq = this.peek();\n  if (seq === null)\n    return null;\n  if (tag !== undefined && tag !== seq)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + seq.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  this._offset = o;\n  return seq;\n};\n\n\nReader.prototype.readInt = function () {\n  return this._readTag(ASN1.Integer);\n};\n\n\nReader.prototype.readBoolean = function () {\n  return (this._readTag(ASN1.Boolean) === 0 ? false : true);\n};\n\n\nReader.prototype.readEnumeration = function () {\n  return this._readTag(ASN1.Enumeration);\n};\n\n\nReader.prototype.readString = function (tag, retbuf) {\n  if (!tag)\n    tag = ASN1.OctetString;\n\n  var b = this.peek();\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n\n  if (o === null)\n    return null;\n\n  if (this.length > this._size - o)\n    return null;\n\n  this._offset = o;\n\n  if (this.length === 0)\n    return retbuf ? Buffer.alloc(0) : '';\n\n  var str = this._buf.slice(this._offset, this._offset + this.length);\n  this._offset += this.length;\n\n  return retbuf ? str : str.toString('utf8');\n};\n\nReader.prototype.readOID = function (tag) {\n  if (!tag)\n    tag = ASN1.OID;\n\n  var b = this.readString(tag, true);\n  if (b === null)\n    return null;\n\n  var values = [];\n  var value = 0;\n\n  for (var i = 0; i < b.length; i++) {\n    var byte = b[i] & 0xff;\n\n    value <<= 7;\n    value += byte & 0x7f;\n    if ((byte & 0x80) === 0) {\n      values.push(value);\n      value = 0;\n    }\n  }\n\n  value = values.shift();\n  values.unshift(value % 40);\n  values.unshift((value / 40) >> 0);\n\n  return values.join('.');\n};\n\n\nReader.prototype._readTag = function (tag) {\n  assert.ok(tag !== undefined);\n\n  var b = this.peek();\n\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  if (this.length > 4)\n    throw newInvalidAsn1Error('Integer too long: ' + this.length);\n\n  if (this.length > this._size - o)\n    return null;\n  this._offset = o;\n\n  var fb = this._buf[this._offset];\n  var value = 0;\n\n  for (var i = 0; i < this.length; i++) {\n    value <<= 8;\n    value |= (this._buf[this._offset++] & 0xff);\n  }\n\n  if ((fb & 0x80) === 0x80 && i !== 4)\n    value -= (1 << (i * 8));\n\n  return value >> 0;\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Reader;\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\nvar DEFAULT_OPTS = {\n  size: 1024,\n  growthFactor: 8\n};\n\n\n// --- Helpers\n\nfunction merge(from, to) {\n  assert.ok(from);\n  assert.equal(typeof (from), 'object');\n  assert.ok(to);\n  assert.equal(typeof (to), 'object');\n\n  var keys = Object.getOwnPropertyNames(from);\n  keys.forEach(function (key) {\n    if (to[key])\n      return;\n\n    var value = Object.getOwnPropertyDescriptor(from, key);\n    Object.defineProperty(to, key, value);\n  });\n\n  return to;\n}\n\n\n\n// --- API\n\nfunction Writer(options) {\n  options = merge(DEFAULT_OPTS, options || {});\n\n  this._buf = Buffer.alloc(options.size || 1024);\n  this._size = this._buf.length;\n  this._offset = 0;\n  this._options = options;\n\n  // A list of offsets in the buffer where we need to insert\n  // sequence tag/len pairs.\n  this._seq = [];\n}\n\nObject.defineProperty(Writer.prototype, 'buffer', {\n  get: function () {\n    if (this._seq.length)\n      throw newInvalidAsn1Error(this._seq.length + ' unended sequence(s)');\n\n    return (this._buf.slice(0, this._offset));\n  }\n});\n\nWriter.prototype.writeByte = function (b) {\n  if (typeof (b) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(1);\n  this._buf[this._offset++] = b;\n};\n\n\nWriter.prototype.writeInt = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Integer;\n\n  var sz = 4;\n\n  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000 >> 0)) &&\n        (sz > 1)) {\n    sz--;\n    i <<= 8;\n  }\n\n  if (sz > 4)\n    throw newInvalidAsn1Error('BER ints cannot be > 0xffffffff');\n\n  this._ensure(2 + sz);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = sz;\n\n  while (sz-- > 0) {\n    this._buf[this._offset++] = ((i & 0xff000000) >>> 24);\n    i <<= 8;\n  }\n\n};\n\n\nWriter.prototype.writeNull = function () {\n  this.writeByte(ASN1.Null);\n  this.writeByte(0x00);\n};\n\n\nWriter.prototype.writeEnumeration = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Enumeration;\n\n  return this.writeInt(i, tag);\n};\n\n\nWriter.prototype.writeBoolean = function (b, tag) {\n  if (typeof (b) !== 'boolean')\n    throw new TypeError('argument must be a Boolean');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Boolean;\n\n  this._ensure(3);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = 0x01;\n  this._buf[this._offset++] = b ? 0xff : 0x00;\n};\n\n\nWriter.prototype.writeString = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string (was: ' + typeof (s) + ')');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OctetString;\n\n  var len = Buffer.byteLength(s);\n  this.writeByte(tag);\n  this.writeLength(len);\n  if (len) {\n    this._ensure(len);\n    this._buf.write(s, this._offset);\n    this._offset += len;\n  }\n};\n\n\nWriter.prototype.writeBuffer = function (buf, tag) {\n  if (typeof (tag) !== 'number')\n    throw new TypeError('tag must be a number');\n  if (!Buffer.isBuffer(buf))\n    throw new TypeError('argument must be a buffer');\n\n  this.writeByte(tag);\n  this.writeLength(buf.length);\n  this._ensure(buf.length);\n  buf.copy(this._buf, this._offset, 0, buf.length);\n  this._offset += buf.length;\n};\n\n\nWriter.prototype.writeStringArray = function (strings) {\n  if ((!strings instanceof Array))\n    throw new TypeError('argument must be an Array[String]');\n\n  var self = this;\n  strings.forEach(function (s) {\n    self.writeString(s);\n  });\n};\n\n// This is really to solve DER cases, but whatever for now\nWriter.prototype.writeOID = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OID;\n\n  if (!/^([0-9]+\\.){3,}[0-9]+$/.test(s))\n    throw new Error('argument is not a valid OID string');\n\n  function encodeOctet(bytes, octet) {\n    if (octet < 128) {\n        bytes.push(octet);\n    } else if (octet < 16384) {\n        bytes.push((octet >>> 7) | 0x80);\n        bytes.push(octet & 0x7F);\n    } else if (octet < 2097152) {\n      bytes.push((octet >>> 14) | 0x80);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 268435456) {\n      bytes.push((octet >>> 21) | 0x80);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else {\n      bytes.push(((octet >>> 28) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 21) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    }\n  }\n\n  var tmp = s.split('.');\n  var bytes = [];\n  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));\n  tmp.slice(2).forEach(function (b) {\n    encodeOctet(bytes, parseInt(b, 10));\n  });\n\n  var self = this;\n  this._ensure(2 + bytes.length);\n  this.writeByte(tag);\n  this.writeLength(bytes.length);\n  bytes.forEach(function (b) {\n    self.writeByte(b);\n  });\n};\n\n\nWriter.prototype.writeLength = function (len) {\n  if (typeof (len) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(4);\n\n  if (len <= 0x7f) {\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xff) {\n    this._buf[this._offset++] = 0x81;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffff) {\n    this._buf[this._offset++] = 0x82;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffffff) {\n    this._buf[this._offset++] = 0x83;\n    this._buf[this._offset++] = len >> 16;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else {\n    throw newInvalidAsn1Error('Length too long (> 4 bytes)');\n  }\n};\n\nWriter.prototype.startSequence = function (tag) {\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Sequence | ASN1.Constructor;\n\n  this.writeByte(tag);\n  this._seq.push(this._offset);\n  this._ensure(3);\n  this._offset += 3;\n};\n\n\nWriter.prototype.endSequence = function () {\n  var seq = this._seq.pop();\n  var start = seq + 3;\n  var len = this._offset - start;\n\n  if (len <= 0x7f) {\n    this._shift(start, len, -2);\n    this._buf[seq] = len;\n  } else if (len <= 0xff) {\n    this._shift(start, len, -1);\n    this._buf[seq] = 0x81;\n    this._buf[seq + 1] = len;\n  } else if (len <= 0xffff) {\n    this._buf[seq] = 0x82;\n    this._buf[seq + 1] = len >> 8;\n    this._buf[seq + 2] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n    this._buf[seq] = 0x83;\n    this._buf[seq + 1] = len >> 16;\n    this._buf[seq + 2] = len >> 8;\n    this._buf[seq + 3] = len;\n  } else {\n    throw newInvalidAsn1Error('Sequence too long');\n  }\n};\n\n\nWriter.prototype._shift = function (start, len, shift) {\n  assert.ok(start !== undefined);\n  assert.ok(len !== undefined);\n  assert.ok(shift);\n\n  this._buf.copy(this._buf, start + shift, start, start + len);\n  this._offset += shift;\n};\n\nWriter.prototype._ensure = function (len) {\n  assert.ok(len);\n\n  if (this._size - this._offset < len) {\n    var sz = this._size * this._options.growthFactor;\n    if (sz - this._offset < len)\n      sz += len;\n\n    var buf = Buffer.alloc(sz);\n\n    this._buf.copy(buf, 0, 0, this._offset);\n    this._buf = buf;\n    this._size = sz;\n  }\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Writer;\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar errors = require('./errors');\nvar types = require('./types');\n\nvar Reader = require('./reader');\nvar Writer = require('./writer');\n\n\n// --- Exports\n\nmodule.exports = {\n\n  Reader: Reader,\n\n  Writer: Writer\n\n};\n\nfor (var t in types) {\n  if (types.hasOwnProperty(t))\n    module.exports[t] = types[t];\n}\nfor (var e in errors) {\n  if (errors.hasOwnProperty(e))\n    module.exports[e] = errors[e];\n}\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n// If you have no idea what ASN.1 or BER is, see this:\n// ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\n\nvar Ber = require('./ber/index');\n\n\n\n// --- Exported API\n\nmodule.exports = {\n\n  Ber: Ber,\n\n  BerReader: Ber.Reader,\n\n  BerWriter: Ber.Writer\n\n};\n", "var ber = require('asn1').Ber;\nvar _ = require('../utils')._;\nvar utils = require('../utils');\n\nconst PRIVATE_OPENING_BOUNDARY = '-----BEGIN RSA PRIVATE KEY-----';\nconst PRIVATE_CLOSING_BOUNDARY = '-----END RSA PRIVATE KEY-----';\n\nconst PUBLIC_OPENING_BOUNDARY = '-----BEGIN RSA PUBLIC KEY-----';\nconst PUBLIC_CLOSING_BOUNDARY = '-----END RSA PUBLIC KEY-----';\n\nmodule.exports = {\n    privateExport: function (key, options) {\n        options = options || {};\n\n        var n = key.n.toBuffer();\n        var d = key.d.toBuffer();\n        var p = key.p.toBuffer();\n        var q = key.q.toBuffer();\n        var dmp1 = key.dmp1.toBuffer();\n        var dmq1 = key.dmq1.toBuffer();\n        var coeff = key.coeff.toBuffer();\n\n        var length = n.length + d.length + p.length + q.length + dmp1.length + dmq1.length + coeff.length + 512; // magic\n        var writer = new ber.Writer({size: length});\n\n        writer.startSequence();\n        writer.writeInt(0);\n        writer.writeBuffer(n, 2);\n        writer.writeInt(key.e);\n        writer.writeBuffer(d, 2);\n        writer.writeBuffer(p, 2);\n        writer.writeBuffer(q, 2);\n        writer.writeBuffer(dmp1, 2);\n        writer.writeBuffer(dmq1, 2);\n        writer.writeBuffer(coeff, 2);\n        writer.endSequence();\n\n        if (options.type === 'der') {\n            return writer.buffer;\n        } else {\n            return PRIVATE_OPENING_BOUNDARY + '\\n' + utils.linebrk(writer.buffer.toString('base64'), 64) + '\\n' + PRIVATE_CLOSING_BOUNDARY;\n        }\n    },\n\n    privateImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== 'der') {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString('utf8');\n            }\n\n            if (_.isString(data)) {\n                var pem = utils.trimSurroundingText(data, PRIVATE_OPENING_BOUNDARY, PRIVATE_CLOSING_BOUNDARY)\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, '');\n                buffer = Buffer.from(pem, 'base64');\n            } else {\n                throw Error('Unsupported key format');\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error('Unsupported key format');\n        }\n\n        var reader = new ber.Reader(buffer);\n        reader.readSequence();\n        reader.readString(2, true); // just zero\n        key.setPrivate(\n            reader.readString(2, true),  // modulus\n            reader.readString(2, true),  // publicExponent\n            reader.readString(2, true),  // privateExponent\n            reader.readString(2, true),  // prime1\n            reader.readString(2, true),  // prime2\n            reader.readString(2, true),  // exponent1 -- d mod (p1)\n            reader.readString(2, true),  // exponent2 -- d mod (q-1)\n            reader.readString(2, true)   // coefficient -- (inverse of q) mod p\n        );\n    },\n\n    publicExport: function (key, options) {\n        options = options || {};\n\n        var n = key.n.toBuffer();\n        var length = n.length + 512; // magic\n\n        var bodyWriter = new ber.Writer({size: length});\n        bodyWriter.startSequence();\n        bodyWriter.writeBuffer(n, 2);\n        bodyWriter.writeInt(key.e);\n        bodyWriter.endSequence();\n\n        if (options.type === 'der') {\n            return bodyWriter.buffer;\n        } else {\n            return PUBLIC_OPENING_BOUNDARY + '\\n' + utils.linebrk(bodyWriter.buffer.toString('base64'), 64) + '\\n' + PUBLIC_CLOSING_BOUNDARY;\n        }\n    },\n\n    publicImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== 'der') {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString('utf8');\n            }\n\n            if (_.isString(data)) {\n                var pem = utils.trimSurroundingText(data, PUBLIC_OPENING_BOUNDARY, PUBLIC_CLOSING_BOUNDARY)\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, '');\n                buffer = Buffer.from(pem, 'base64');\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error('Unsupported key format');\n        }\n\n        var body = new ber.Reader(buffer);\n        body.readSequence();\n        key.setPublic(\n            body.readString(0x02, true), // modulus\n            body.readString(0x02, true)  // publicExponent\n        );\n    },\n\n    /**\n     * Trying autodetect and import key\n     * @param key\n     * @param data\n     */\n    autoImport: function (key, data) {\n        // [\\S\\s]* matches zero or more of any character\n        if (/^[\\S\\s]*-----BEGIN RSA PRIVATE KEY-----\\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1-----END RSA PRIVATE KEY-----[\\S\\s]*$/g.test(data)) {\n            module.exports.privateImport(key, data);\n            return true;\n        }\n\n        if (/^[\\S\\s]*-----BEGIN RSA PUBLIC KEY-----\\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1-----END RSA PUBLIC KEY-----[\\S\\s]*$/g.test(data)) {\n            module.exports.publicImport(key, data);\n            return true;\n        }\n\n        return false;\n    }\n};", "var ber = require('asn1').Ber;\nvar _ = require('../utils')._;\nvar PUBLIC_RSA_OID = '1.2.840.113549.1.1.1';\nvar utils = require('../utils');\n\nconst PRIVATE_OPENING_BOUNDARY = '-----BEGIN PRIVATE KEY-----';\nconst PRIVATE_CLOSING_BOUNDARY = '-----END PRIVATE KEY-----';\n\nconst PUBLIC_OPENING_BOUNDARY = '-----BEGIN PUBLIC KEY-----';\nconst PUBLIC_CLOSING_BOUNDARY = '-----END PUBLIC KEY-----';\n\nmodule.exports = {\n    privateExport: function (key, options) {\n        options = options || {};\n\n        var n = key.n.toBuffer();\n        var d = key.d.toBuffer();\n        var p = key.p.toBuffer();\n        var q = key.q.toBuffer();\n        var dmp1 = key.dmp1.toBuffer();\n        var dmq1 = key.dmq1.toBuffer();\n        var coeff = key.coeff.toBuffer();\n\n        var length = n.length + d.length + p.length + q.length + dmp1.length + dmq1.length + coeff.length + 512; // magic\n        var bodyWriter = new ber.Writer({size: length});\n\n        bodyWriter.startSequence();\n        bodyWriter.writeInt(0);\n        bodyWriter.writeBuffer(n, 2);\n        bodyWriter.writeInt(key.e);\n        bodyWriter.writeBuffer(d, 2);\n        bodyWriter.writeBuffer(p, 2);\n        bodyWriter.writeBuffer(q, 2);\n        bodyWriter.writeBuffer(dmp1, 2);\n        bodyWriter.writeBuffer(dmq1, 2);\n        bodyWriter.writeBuffer(coeff, 2);\n        bodyWriter.endSequence();\n\n        var writer = new ber.Writer({size: length});\n        writer.startSequence();\n        writer.writeInt(0);\n        writer.startSequence();\n        writer.writeOID(PUBLIC_RSA_OID);\n        writer.writeNull();\n        writer.endSequence();\n        writer.writeBuffer(bodyWriter.buffer, 4);\n        writer.endSequence();\n\n        if (options.type === 'der') {\n            return writer.buffer;\n        } else {\n            return PRIVATE_OPENING_BOUNDARY + '\\n' + utils.linebrk(writer.buffer.toString('base64'), 64) + '\\n' + PRIVATE_CLOSING_BOUNDARY;\n        }\n    },\n\n    privateImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== 'der') {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString('utf8');\n            }\n\n            if (_.isString(data)) {\n                var pem = utils.trimSurroundingText(data, PRIVATE_OPENING_BOUNDARY, PRIVATE_CLOSING_BOUNDARY)\n                    .replace('-----END PRIVATE KEY-----', '')\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, '');\n                buffer = Buffer.from(pem, 'base64');\n            } else {\n                throw Error('Unsupported key format');\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error('Unsupported key format');\n        }\n\n        var reader = new ber.Reader(buffer);\n        reader.readSequence();\n        reader.readInt(0);\n        var header = new ber.Reader(reader.readString(0x30, true));\n\n        if (header.readOID(0x06, true) !== PUBLIC_RSA_OID) {\n            throw Error('Invalid Public key format');\n        }\n\n        var body = new ber.Reader(reader.readString(0x04, true));\n        body.readSequence();\n        body.readString(2, true); // just zero\n        key.setPrivate(\n            body.readString(2, true),  // modulus\n            body.readString(2, true),  // publicExponent\n            body.readString(2, true),  // privateExponent\n            body.readString(2, true),  // prime1\n            body.readString(2, true),  // prime2\n            body.readString(2, true),  // exponent1 -- d mod (p1)\n            body.readString(2, true),  // exponent2 -- d mod (q-1)\n            body.readString(2, true)   // coefficient -- (inverse of q) mod p\n        );\n    },\n\n    publicExport: function (key, options) {\n        options = options || {};\n\n        var n = key.n.toBuffer();\n        var length = n.length + 512; // magic\n\n        var bodyWriter = new ber.Writer({size: length});\n        bodyWriter.writeByte(0);\n        bodyWriter.startSequence();\n        bodyWriter.writeBuffer(n, 2);\n        bodyWriter.writeInt(key.e);\n        bodyWriter.endSequence();\n\n        var writer = new ber.Writer({size: length});\n        writer.startSequence();\n        writer.startSequence();\n        writer.writeOID(PUBLIC_RSA_OID);\n        writer.writeNull();\n        writer.endSequence();\n        writer.writeBuffer(bodyWriter.buffer, 3);\n        writer.endSequence();\n\n        if (options.type === 'der') {\n            return writer.buffer;\n        } else {\n            return PUBLIC_OPENING_BOUNDARY + '\\n' + utils.linebrk(writer.buffer.toString('base64'), 64) + '\\n' + PUBLIC_CLOSING_BOUNDARY;\n        }\n    },\n\n    publicImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== 'der') {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString('utf8');\n            }\n\n            if (_.isString(data)) {\n                var pem = utils.trimSurroundingText(data, PUBLIC_OPENING_BOUNDARY, PUBLIC_CLOSING_BOUNDARY)\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, '');\n                buffer = Buffer.from(pem, 'base64');\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error('Unsupported key format');\n        }\n\n        var reader = new ber.Reader(buffer);\n        reader.readSequence();\n        var header = new ber.Reader(reader.readString(0x30, true));\n\n        if (header.readOID(0x06, true) !== PUBLIC_RSA_OID) {\n            throw Error('Invalid Public key format');\n        }\n\n        var body = new ber.Reader(reader.readString(0x03, true));\n        body.readByte();\n        body.readSequence();\n        key.setPublic(\n            body.readString(0x02, true), // modulus\n            body.readString(0x02, true)  // publicExponent\n        );\n    },\n\n    /**\n     * Trying autodetect and import key\n     * @param key\n     * @param data\n     */\n    autoImport: function (key, data) {\n        if (/^[\\S\\s]*-----BEGIN PRIVATE KEY-----\\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1-----END PRIVATE KEY-----[\\S\\s]*$/g.test(data)) {\n            module.exports.privateImport(key, data);\n            return true;\n        }\n\n        if (/^[\\S\\s]*-----BEGIN PUBLIC KEY-----\\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1-----END PUBLIC KEY-----[\\S\\s]*$/g.test(data)) {\n            module.exports.publicImport(key, data);\n            return true;\n        }\n\n        return false;\n    }\n};\n", "var _ = require('../utils')._;\r\nvar utils = require('../utils');\r\n\r\nmodule.exports = {\r\n    privateExport: function (key, options) {\r\n        return {\r\n            n: key.n.toBuffer(),\r\n            e: key.e,\r\n            d: key.d.toBuffer(),\r\n            p: key.p.toBuffer(),\r\n            q: key.q.toBuffer(),\r\n            dmp1: key.dmp1.toBuffer(),\r\n            dmq1: key.dmq1.toBuffer(),\r\n            coeff: key.coeff.toBuffer()\r\n        };\r\n    },\r\n\r\n    privateImport: function (key, data, options) {\r\n        if (data.n && data.e && data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\r\n            key.setPrivate(\r\n                data.n,\r\n                data.e,\r\n                data.d,\r\n                data.p,\r\n                data.q,\r\n                data.dmp1,\r\n                data.dmq1,\r\n                data.coeff\r\n            );\r\n        } else {\r\n            throw Error(\"Invalid key data\");\r\n        }\r\n    },\r\n\r\n    publicExport: function (key, options) {\r\n        return {\r\n            n: key.n.toBuffer(),\r\n            e: key.e\r\n        };\r\n    },\r\n\r\n    publicImport: function (key, data, options) {\r\n        if (data.n && data.e) {\r\n            key.setPublic(\r\n                data.n,\r\n                data.e\r\n            );\r\n        } else {\r\n            throw Error(\"Invalid key data\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Trying autodetect and import key\r\n     * @param key\r\n     * @param data\r\n     */\r\n    autoImport: function (key, data) {\r\n        if (data.n && data.e) {\r\n            if (data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\r\n                module.exports.privateImport(key, data);\r\n                return true;\r\n            } else {\r\n                module.exports.publicImport(key, data);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n", "var _ = require(\"../utils\")._;\nvar utils = require(\"../utils\");\nvar BigInteger = require(\"../libs/jsbn\");\n\nconst PRIVATE_OPENING_BOUNDARY = \"-----BEGIN OPENSSH PRIVATE KEY-----\";\nconst PRIVATE_CLOSING_BOUNDARY = \"-----END OPENSSH PRIVATE KEY-----\";\n\nmodule.exports = {\n    privateExport: function (key, options) {\n        const nbuf = key.n.toBuffer();\n\n        let ebuf = Buffer.alloc(4)\n        ebuf.writeUInt32BE(key.e, 0);\n        //Slice leading zeroes\n        while (ebuf[0] === 0) ebuf = ebuf.slice(1);\n\n        const dbuf = key.d.toBuffer();\n        const coeffbuf = key.coeff.toBuffer();\n        const pbuf = key.p.toBuffer();\n        const qbuf = key.q.toBuffer();\n        let commentbuf;\n        if (typeof key.sshcomment !== \"undefined\") {\n            commentbuf = Buffer.from(key.sshcomment);\n        } else {\n            commentbuf = Buffer.from([]);\n        }\n\n        const pubkeyLength =\n            11 + // 32bit length, 'ssh-rsa'\n            4 + ebuf.byteLength +\n            4 + nbuf.byteLength;\n\n        const privateKeyLength =\n            8 + //64bit unused checksum\n            11 + // 32bit length, 'ssh-rsa'\n            4 + nbuf.byteLength +\n            4 + ebuf.byteLength +\n            4 + dbuf.byteLength +\n            4 + coeffbuf.byteLength +\n            4 + pbuf.byteLength +\n            4 + qbuf.byteLength +\n            4 + commentbuf.byteLength;\n\n        let length =\n            15 + //openssh-key-v1,0x00,\n            16 + // 2*(32bit length, 'none')\n            4 + // 32bit length, empty string\n            4 + // 32bit number of keys\n            4 + // 32bit pubkey length\n            pubkeyLength +\n            4 + //32bit private+checksum+comment+padding length\n            privateKeyLength;\n\n        const paddingLength = Math.ceil(privateKeyLength / 8) * 8 - privateKeyLength;\n        length += paddingLength;\n\n        const buf = Buffer.alloc(length);\n        const writer = {buf: buf, off: 0};\n        buf.write(\"openssh-key-v1\", \"utf8\");\n        buf.writeUInt8(0, 14);\n        writer.off += 15;\n\n        writeOpenSSHKeyString(writer, Buffer.from(\"none\"));\n        writeOpenSSHKeyString(writer, Buffer.from(\"none\"));\n        writeOpenSSHKeyString(writer, Buffer.from(\"\"));\n\n        writer.off = writer.buf.writeUInt32BE(1, writer.off);\n        writer.off = writer.buf.writeUInt32BE(pubkeyLength, writer.off);\n\n        writeOpenSSHKeyString(writer, Buffer.from(\"ssh-rsa\"));\n        writeOpenSSHKeyString(writer, ebuf);\n        writeOpenSSHKeyString(writer, nbuf);\n\n        writer.off = writer.buf.writeUInt32BE(\n            length - 47 - pubkeyLength,\n            writer.off\n        );\n        writer.off += 8;\n\n        writeOpenSSHKeyString(writer, Buffer.from(\"ssh-rsa\"));\n        writeOpenSSHKeyString(writer, nbuf);\n        writeOpenSSHKeyString(writer, ebuf);\n        writeOpenSSHKeyString(writer, dbuf);\n        writeOpenSSHKeyString(writer, coeffbuf);\n        writeOpenSSHKeyString(writer, pbuf);\n        writeOpenSSHKeyString(writer, qbuf);\n        writeOpenSSHKeyString(writer, commentbuf);\n\n        let pad = 0x01;\n        while (writer.off < length) {\n            writer.off = writer.buf.writeUInt8(pad++, writer.off);\n        }\n\n        if (options.type === \"der\") {\n            return writer.buf\n        } else {\n            return PRIVATE_OPENING_BOUNDARY + \"\\n\" + utils.linebrk(buf.toString(\"base64\"), 70) + \"\\n\" + PRIVATE_CLOSING_BOUNDARY + \"\\n\";\n        }\n    },\n\n    privateImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== \"der\") {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString(\"utf8\");\n            }\n\n            if (_.isString(data)) {\n                var pem = utils.trimSurroundingText(data, PRIVATE_OPENING_BOUNDARY, PRIVATE_CLOSING_BOUNDARY)\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, \"\");\n                buffer = Buffer.from(pem, \"base64\");\n            } else {\n                throw Error(\"Unsupported key format\");\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error(\"Unsupported key format\");\n        }\n\n        const reader = {buf: buffer, off: 0};\n\n        if (buffer.slice(0, 14).toString(\"ascii\") !== \"openssh-key-v1\")\n            throw \"Invalid file format.\";\n\n        reader.off += 15;\n\n        //ciphername\n        if (readOpenSSHKeyString(reader).toString(\"ascii\") !== \"none\")\n            throw Error(\"Unsupported key type\");\n        //kdfname\n        if (readOpenSSHKeyString(reader).toString(\"ascii\") !== \"none\")\n            throw Error(\"Unsupported key type\");\n        //kdf\n        if (readOpenSSHKeyString(reader).toString(\"ascii\") !== \"\")\n            throw Error(\"Unsupported key type\");\n        //keynum\n        reader.off += 4;\n\n        //sshpublength\n        reader.off += 4;\n\n        //keytype\n        if (readOpenSSHKeyString(reader).toString(\"ascii\") !== \"ssh-rsa\")\n            throw Error(\"Unsupported key type\");\n        readOpenSSHKeyString(reader);\n        readOpenSSHKeyString(reader);\n\n        reader.off += 12;\n        if (readOpenSSHKeyString(reader).toString(\"ascii\") !== \"ssh-rsa\")\n            throw Error(\"Unsupported key type\");\n\n        const n = readOpenSSHKeyString(reader);\n        const e = readOpenSSHKeyString(reader);\n        const d = readOpenSSHKeyString(reader);\n        const coeff = readOpenSSHKeyString(reader);\n        const p = readOpenSSHKeyString(reader);\n        const q = readOpenSSHKeyString(reader);\n\n        //Calculate missing values\n        const dint = new BigInteger(d);\n        const qint = new BigInteger(q);\n        const pint = new BigInteger(p);\n        const dp = dint.mod(pint.subtract(BigInteger.ONE));\n        const dq = dint.mod(qint.subtract(BigInteger.ONE));\n\n        key.setPrivate(\n            n,  // modulus\n            e,  // publicExponent\n            d,  // privateExponent\n            p,  // prime1\n            q,  // prime2\n            dp.toBuffer(),  // exponent1 -- d mod (p1)\n            dq.toBuffer(),  // exponent2 -- d mod (q-1)\n            coeff  // coefficient -- (inverse of q) mod p\n        );\n\n        key.sshcomment = readOpenSSHKeyString(reader).toString(\"ascii\");\n    },\n\n    publicExport: function (key, options) {\n        let ebuf = Buffer.alloc(4)\n        ebuf.writeUInt32BE(key.e, 0);\n        //Slice leading zeroes\n        while (ebuf[0] === 0) ebuf = ebuf.slice(1);\n        const nbuf = key.n.toBuffer();\n        const buf = Buffer.alloc(\n            ebuf.byteLength + 4 +\n            nbuf.byteLength + 4 +\n            \"ssh-rsa\".length + 4\n        );\n\n        const writer = {buf: buf, off: 0};\n        writeOpenSSHKeyString(writer, Buffer.from(\"ssh-rsa\"));\n        writeOpenSSHKeyString(writer, ebuf);\n        writeOpenSSHKeyString(writer, nbuf);\n\n        let comment = key.sshcomment || \"\";\n\n        if (options.type === \"der\") {\n            return writer.buf\n        } else {\n            return \"ssh-rsa \" + buf.toString(\"base64\") + \" \" + comment + \"\\n\";\n        }\n    },\n\n    publicImport: function (key, data, options) {\n        options = options || {};\n        var buffer;\n\n        if (options.type !== \"der\") {\n            if (Buffer.isBuffer(data)) {\n                data = data.toString(\"utf8\");\n            }\n\n            if (_.isString(data)) {\n                if (data.substring(0, 8) !== \"ssh-rsa \")\n                    throw Error(\"Unsupported key format\");\n                let pemEnd = data.indexOf(\" \", 8);\n\n                //Handle keys with no comment\n                if (pemEnd === -1) {\n                    pemEnd = data.length;\n                } else {\n                    key.sshcomment = data.substring(pemEnd + 1)\n                        .replace(/\\s+|\\n\\r|\\n|\\r$/gm, \"\");\n                }\n\n                const pem = data.substring(8, pemEnd)\n                    .replace(/\\s+|\\n\\r|\\n|\\r$/gm, \"\");\n                buffer = Buffer.from(pem, \"base64\");\n            } else {\n                throw Error(\"Unsupported key format\");\n            }\n        } else if (Buffer.isBuffer(data)) {\n            buffer = data;\n        } else {\n            throw Error(\"Unsupported key format\");\n        }\n\n        const reader = {buf: buffer, off: 0};\n\n        const type = readOpenSSHKeyString(reader).toString(\"ascii\");\n\n        if (type !== \"ssh-rsa\")\n            throw Error(\"Invalid key type: \" + type);\n\n        const e = readOpenSSHKeyString(reader);\n        const n = readOpenSSHKeyString(reader);\n\n        key.setPublic(\n            n,\n            e\n        );\n    },\n\n    /**\n     * Trying autodetect and import key\n     * @param key\n     * @param data\n     */\n    autoImport: function (key, data) {\n        // [\\S\\s]* matches zero or more of any character\n        if (/^[\\S\\s]*-----BEGIN OPENSSH PRIVATE KEY-----\\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1-----END OPENSSH PRIVATE KEY-----[\\S\\s]*$/g.test(data)) {\n            module.exports.privateImport(key, data);\n            return true;\n        }\n\n        if (/^[\\S\\s]*ssh-rsa \\s*(?=(([A-Za-z0-9+/=]+\\s*)+))\\1[\\S\\s]*$/g.test(data)) {\n            module.exports.publicImport(key, data);\n            return true;\n        }\n\n        return false;\n    }\n};\n\nfunction readOpenSSHKeyString(reader) {\n    const len = reader.buf.readInt32BE(reader.off);\n    reader.off += 4;\n    const res = reader.buf.slice(reader.off, reader.off + len);\n    reader.off += len;\n    return res;\n}\n\nfunction writeOpenSSHKeyString(writer, data) {\n    writer.buf.writeInt32BE(data.byteLength, writer.off);\n    writer.off += 4;\n    writer.off += data.copy(writer.buf, writer.off);\n}", "var _ = require('../utils')._;\n\nfunction formatParse(format) {\n    format = format.split('-');\n    var keyType = 'private';\n    var keyOpt = {type: 'default'};\n\n    for (var i = 1; i < format.length; i++) {\n        if (format[i]) {\n            switch (format[i]) {\n                case 'public':\n                    keyType = format[i];\n                    break;\n                case 'private':\n                    keyType = format[i];\n                    break;\n                case 'pem':\n                    keyOpt.type = format[i];\n                    break;\n                case 'der':\n                    keyOpt.type = format[i];\n                    break;\n            }\n        }\n    }\n\n    return {scheme: format[0], keyType: keyType, keyOpt: keyOpt};\n}\n\nmodule.exports = {\n    pkcs1: require('./pkcs1'),\n    pkcs8: require('./pkcs8'),\n    components: require('./components'),\n    openssh: require('./openssh'),\n\n    isPrivateExport: function (format) {\n        return module.exports[format] && typeof module.exports[format].privateExport === 'function';\n    },\n\n    isPrivateImport: function (format) {\n        return module.exports[format] && typeof module.exports[format].privateImport === 'function';\n    },\n\n    isPublicExport: function (format) {\n        return module.exports[format] && typeof module.exports[format].publicExport === 'function';\n    },\n\n    isPublicImport: function (format) {\n        return module.exports[format] && typeof module.exports[format].publicImport === 'function';\n    },\n\n    detectAndImport: function (key, data, format) {\n        if (format === undefined) {\n            for (var scheme in module.exports) {\n                if (typeof module.exports[scheme].autoImport === 'function' && module.exports[scheme].autoImport(key, data)) {\n                    return true;\n                }\n            }\n        } else if (format) {\n            var fmt = formatParse(format);\n\n            if (module.exports[fmt.scheme]) {\n                if (fmt.keyType === 'private') {\n                    module.exports[fmt.scheme].privateImport(key, data, fmt.keyOpt);\n                } else {\n                    module.exports[fmt.scheme].publicImport(key, data, fmt.keyOpt);\n                }\n            } else {\n                throw Error('Unsupported key format');\n            }\n        }\n\n        return false;\n    },\n\n    detectAndExport: function (key, format) {\n        if (format) {\n            var fmt = formatParse(format);\n\n            if (module.exports[fmt.scheme]) {\n                if (fmt.keyType === 'private') {\n                    if (!key.isPrivate()) {\n                        throw Error(\"This is not private key\");\n                    }\n                    return module.exports[fmt.scheme].privateExport(key, fmt.keyOpt);\n                } else {\n                    if (!key.isPublic()) {\n                        throw Error(\"This is not public key\");\n                    }\n                    return module.exports[fmt.scheme].publicExport(key, fmt.keyOpt);\n                }\n            } else {\n                throw Error('Unsupported key format');\n            }\n        }\n    }\n};", "/*!\n * RSA library for Node.js\n *\n * Author: rzcoder\n * License MIT\n */\n\nvar constants = require('constants');\nvar rsa = require('./libs/rsa.js');\nvar crypt = require('crypto');\nvar ber = require('asn1').Ber;\nvar _ = require('./utils')._;\nvar utils = require('./utils');\nvar schemes = require('./schemes/schemes.js');\nvar formats = require('./formats/formats.js');\n\nif (typeof constants.RSA_NO_PADDING === \"undefined\") {\n    //patch for node v0.10.x, constants do not defined\n    constants.RSA_NO_PADDING = 3;\n}\n\nmodule.exports = (function () {\n    var SUPPORTED_HASH_ALGORITHMS = {\n        node10: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\n        node: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\n        iojs: ['md4', 'md5', 'ripemd160', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512'],\n        browser: ['md5', 'ripemd160', 'sha1', 'sha256', 'sha512']\n    };\n\n    var DEFAULT_ENCRYPTION_SCHEME = 'pkcs1_oaep';\n    var DEFAULT_SIGNING_SCHEME = 'pkcs1';\n\n    var DEFAULT_EXPORT_FORMAT = 'private';\n    var EXPORT_FORMAT_ALIASES = {\n        'private': 'pkcs1-private-pem',\n        'private-der': 'pkcs1-private-der',\n        'public': 'pkcs8-public-pem',\n        'public-der': 'pkcs8-public-der',\n    };\n\n    /**\n     * @param key {string|buffer|object} Key in PEM format, or data for generate key {b: bits, e: exponent}\n     * @constructor\n     */\n    function NodeRSA(key, format, options) {\n        if (!(this instanceof NodeRSA)) {\n            return new NodeRSA(key, format, options);\n        }\n\n        if (_.isObject(format)) {\n            options = format;\n            format = undefined;\n        }\n\n        this.$options = {\n            signingScheme: DEFAULT_SIGNING_SCHEME,\n            signingSchemeOptions: {\n                hash: 'sha256',\n                saltLength: null\n            },\n            encryptionScheme: DEFAULT_ENCRYPTION_SCHEME,\n            encryptionSchemeOptions: {\n                hash: 'sha1',\n                label: null\n            },\n            environment: utils.detectEnvironment(),\n            rsaUtils: this\n        };\n        this.keyPair = new rsa.Key();\n        this.$cache = {};\n\n        if (Buffer.isBuffer(key) || _.isString(key)) {\n            this.importKey(key, format);\n        } else if (_.isObject(key)) {\n            this.generateKeyPair(key.b, key.e);\n        }\n\n        this.setOptions(options);\n    }\n\n    /**\n     * Set and validate options for key instance\n     * @param options\n     */\n    NodeRSA.prototype.setOptions = function (options) {\n        options = options || {};\n        if (options.environment) {\n            this.$options.environment = options.environment;\n        }\n\n        if (options.signingScheme) {\n            if (_.isString(options.signingScheme)) {\n                var signingScheme = options.signingScheme.toLowerCase().split('-');\n                if (signingScheme.length == 1) {\n                    if (SUPPORTED_HASH_ALGORITHMS.node.indexOf(signingScheme[0]) > -1) {\n                        this.$options.signingSchemeOptions = {\n                            hash: signingScheme[0]\n                        };\n                        this.$options.signingScheme = DEFAULT_SIGNING_SCHEME;\n                    } else {\n                        this.$options.signingScheme = signingScheme[0];\n                        this.$options.signingSchemeOptions = {\n                            hash: null\n                        };\n                    }\n                } else {\n                    this.$options.signingSchemeOptions = {\n                        hash: signingScheme[1]\n                    };\n                    this.$options.signingScheme = signingScheme[0];\n                }\n            } else if (_.isObject(options.signingScheme)) {\n                this.$options.signingScheme = options.signingScheme.scheme || DEFAULT_SIGNING_SCHEME;\n                this.$options.signingSchemeOptions = _.omit(options.signingScheme, 'scheme');\n            }\n\n            if (!schemes.isSignature(this.$options.signingScheme)) {\n                throw Error('Unsupported signing scheme');\n            }\n\n            if (this.$options.signingSchemeOptions.hash &&\n                SUPPORTED_HASH_ALGORITHMS[this.$options.environment].indexOf(this.$options.signingSchemeOptions.hash) === -1) {\n                throw Error('Unsupported hashing algorithm for ' + this.$options.environment + ' environment');\n            }\n        }\n\n        if (options.encryptionScheme) {\n            if (_.isString(options.encryptionScheme)) {\n                this.$options.encryptionScheme = options.encryptionScheme.toLowerCase();\n                this.$options.encryptionSchemeOptions = {};\n            } else if (_.isObject(options.encryptionScheme)) {\n                this.$options.encryptionScheme = options.encryptionScheme.scheme || DEFAULT_ENCRYPTION_SCHEME;\n                this.$options.encryptionSchemeOptions = _.omit(options.encryptionScheme, 'scheme');\n            }\n\n            if (!schemes.isEncryption(this.$options.encryptionScheme)) {\n                throw Error('Unsupported encryption scheme');\n            }\n\n            if (this.$options.encryptionSchemeOptions.hash &&\n                SUPPORTED_HASH_ALGORITHMS[this.$options.environment].indexOf(this.$options.encryptionSchemeOptions.hash) === -1) {\n                throw Error('Unsupported hashing algorithm for ' + this.$options.environment + ' environment');\n            }\n        }\n\n        this.keyPair.setOptions(this.$options);\n    };\n\n    /**\n     * Generate private/public keys pair\n     *\n     * @param bits {int} length key in bits. Default 2048.\n     * @param exp {int} public exponent. Default 65537.\n     * @returns {NodeRSA}\n     */\n    NodeRSA.prototype.generateKeyPair = function (bits, exp) {\n        bits = bits || 2048;\n        exp = exp || 65537;\n\n        if (bits % 8 !== 0) {\n            throw Error('Key size must be a multiple of 8.');\n        }\n\n        this.keyPair.generate(bits, exp.toString(16));\n        this.$cache = {};\n        return this;\n    };\n\n    /**\n     * Importing key\n     * @param keyData {string|buffer|Object}\n     * @param format {string}\n     */\n    NodeRSA.prototype.importKey = function (keyData, format) {\n        if (!keyData) {\n            throw Error(\"Empty key given\");\n        }\n\n        if (format) {\n            format = EXPORT_FORMAT_ALIASES[format] || format;\n        }\n\n        if (!formats.detectAndImport(this.keyPair, keyData, format) && format === undefined) {\n            throw Error(\"Key format must be specified\");\n        }\n        \n        this.$cache = {};\n        \n        return this;\n    };\n\n    /**\n     * Exporting key\n     * @param [format] {string}\n     */\n    NodeRSA.prototype.exportKey = function (format) {\n        format = format || DEFAULT_EXPORT_FORMAT;\n        format = EXPORT_FORMAT_ALIASES[format] || format;\n\n        if (!this.$cache[format]) {\n            this.$cache[format] = formats.detectAndExport(this.keyPair, format);\n        }\n\n        return this.$cache[format];\n    };\n\n    /**\n     * Check if key pair contains private key\n     */\n    NodeRSA.prototype.isPrivate = function () {\n        return this.keyPair.isPrivate();\n    };\n\n    /**\n     * Check if key pair contains public key\n     * @param [strict] {boolean} - public key only, return false if have private exponent\n     */\n    NodeRSA.prototype.isPublic = function (strict) {\n        return this.keyPair.isPublic(strict);\n    };\n\n    /**\n     * Check if key pair doesn't contains any data\n     */\n    NodeRSA.prototype.isEmpty = function (strict) {\n        return !(this.keyPair.n || this.keyPair.e || this.keyPair.d);\n    };\n\n    /**\n     * Encrypting data method with public key\n     *\n     * @param buffer {string|number|object|array|Buffer} - data for encrypting. Object and array will convert to JSON string.\n     * @param encoding {string} - optional. Encoding for output result, may be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\n     * @returns {string|Buffer}\n     */\n    NodeRSA.prototype.encrypt = function (buffer, encoding, source_encoding) {\n        return this.$$encryptKey(false, buffer, encoding, source_encoding);\n    };\n\n    /**\n     * Decrypting data method with private key\n     *\n     * @param buffer {Buffer} - buffer for decrypting\n     * @param encoding - encoding for result string, can also take 'json' or 'buffer' for the automatic conversion of this type\n     * @returns {Buffer|object|string}\n     */\n    NodeRSA.prototype.decrypt = function (buffer, encoding) {\n        return this.$$decryptKey(false, buffer, encoding);\n    };\n\n    /**\n     * Encrypting data method with private key\n     *\n     * Parameters same as `encrypt` method\n     */\n    NodeRSA.prototype.encryptPrivate = function (buffer, encoding, source_encoding) {\n        return this.$$encryptKey(true, buffer, encoding, source_encoding);\n    };\n\n    /**\n     * Decrypting data method with public key\n     *\n     * Parameters same as `decrypt` method\n     */\n    NodeRSA.prototype.decryptPublic = function (buffer, encoding) {\n        return this.$$decryptKey(true, buffer, encoding);\n    };\n\n    /**\n     * Encrypting data method with custom key\n     */\n    NodeRSA.prototype.$$encryptKey = function (usePrivate, buffer, encoding, source_encoding) {\n        try {\n            var res = this.keyPair.encrypt(this.$getDataForEncrypt(buffer, source_encoding), usePrivate);\n\n            if (encoding == 'buffer' || !encoding) {\n                return res;\n            } else {\n                return res.toString(encoding);\n            }\n        } catch (e) {\n            throw Error('Error during encryption. Original error: ' + e);\n        }\n    };\n\n    /**\n     * Decrypting data method with custom key\n     */\n    NodeRSA.prototype.$$decryptKey = function (usePublic, buffer, encoding) {\n        try {\n            buffer = _.isString(buffer) ? Buffer.from(buffer, 'base64') : buffer;\n            var res = this.keyPair.decrypt(buffer, usePublic);\n\n            if (res === null) {\n                throw Error('Key decrypt method returns null.');\n            }\n\n            return this.$getDecryptedData(res, encoding);\n        } catch (e) {\n            throw Error('Error during decryption (probably incorrect key). Original error: ' + e);\n        }\n    };\n\n    /**\n     *  Signing data\n     *\n     * @param buffer {string|number|object|array|Buffer} - data for signing. Object and array will convert to JSON string.\n     * @param encoding {string} - optional. Encoding for output result, may be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\n     * @returns {string|Buffer}\n     */\n    NodeRSA.prototype.sign = function (buffer, encoding, source_encoding) {\n        if (!this.isPrivate()) {\n            throw Error(\"This is not private key\");\n        }\n\n        var res = this.keyPair.sign(this.$getDataForEncrypt(buffer, source_encoding));\n\n        if (encoding && encoding != 'buffer') {\n            res = res.toString(encoding);\n        }\n\n        return res;\n    };\n\n    /**\n     *  Verifying signed data\n     *\n     * @param buffer - signed data\n     * @param signature\n     * @param source_encoding {string} - optional. Encoding for given string. Default utf8.\n     * @param signature_encoding - optional. Encoding of given signature. May be 'buffer', 'binary', 'hex' or 'base64'. Default 'buffer'.\n     * @returns {*}\n     */\n    NodeRSA.prototype.verify = function (buffer, signature, source_encoding, signature_encoding) {\n        if (!this.isPublic()) {\n            throw Error(\"This is not public key\");\n        }\n        signature_encoding = (!signature_encoding || signature_encoding == 'buffer' ? null : signature_encoding);\n        return this.keyPair.verify(this.$getDataForEncrypt(buffer, source_encoding), signature, signature_encoding);\n    };\n\n    /**\n     * Returns key size in bits\n     * @returns {int}\n     */\n    NodeRSA.prototype.getKeySize = function () {\n        return this.keyPair.keySize;\n    };\n\n    /**\n     * Returns max message length in bytes (for 1 chunk) depending on current encryption scheme\n     * @returns {int}\n     */\n    NodeRSA.prototype.getMaxMessageSize = function () {\n        return this.keyPair.maxMessageLength;\n    };\n\n    /**\n     * Preparing given data for encrypting/signing. Just make new/return Buffer object.\n     *\n     * @param buffer {string|number|object|array|Buffer} - data for encrypting. Object and array will convert to JSON string.\n     * @param encoding {string} - optional. Encoding for given string. Default utf8.\n     * @returns {Buffer}\n     */\n    NodeRSA.prototype.$getDataForEncrypt = function (buffer, encoding) {\n        if (_.isString(buffer) || _.isNumber(buffer)) {\n            return Buffer.from('' + buffer, encoding || 'utf8');\n        } else if (Buffer.isBuffer(buffer)) {\n            return buffer;\n        } else if (_.isObject(buffer)) {\n            return Buffer.from(JSON.stringify(buffer));\n        } else {\n            throw Error(\"Unexpected data type\");\n        }\n    };\n\n    /**\n     *\n     * @param buffer {Buffer} - decrypted data.\n     * @param encoding - optional. Encoding for result output. May be 'buffer', 'json' or any of Node.js Buffer supported encoding.\n     * @returns {*}\n     */\n    NodeRSA.prototype.$getDecryptedData = function (buffer, encoding) {\n        encoding = encoding || 'buffer';\n\n        if (encoding == 'buffer') {\n            return buffer;\n        } else if (encoding == 'json') {\n            return JSON.parse(buffer.toString());\n        } else {\n            return buffer.toString(encoding);\n        }\n    };\n\n    return NodeRSA;\n})();\n", "/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    var NodeTypes = {\r\n        ELEMENT_NODE: 1,\r\n        ATTRIBUTE_NODE: 2,\r\n        TEXT_NODE: 3,\r\n        CDATA_SECTION_NODE: 4,\r\n        PROCESSING_INSTRUCTION_NODE: 7,\r\n        COMMENT_NODE: 8,\r\n        DOCUMENT_NODE: 9,\r\n        DOCUMENT_TYPE_NODE: 10,\r\n        DOCUMENT_FRAGMENT_NODE: 11,\r\n    };\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === NodeTypes.DOCUMENT_NODE) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == NodeTypes.ATTRIBUTE_NODE ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != NodeTypes.DOCUMENT_NODE && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == NodeTypes.ELEMENT_NODE) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == NodeTypes.ELEMENT_NODE; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == NodeTypes.DOCUMENT_NODE\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType(\r\n                    [\r\n                        NodeTypes.ELEMENT_NODE,\r\n                        NodeTypes.ATTRIBUTE_NODE,\r\n                        XPathNamespace.XPATH_NAMESPACE_NODE,\r\n                    ]\r\n                )(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType(\r\n                [NodeTypes.PROCESSING_INSTRUCTION_NODE]\r\n            )(n) &&\r\n                (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(\r\n        NodeTest.NAMETESTANY,\r\n        [\r\n            NodeTypes.ELEMENT_NODE,\r\n            NodeTypes.ATTRIBUTE_NODE,\r\n            XPathNamespace.XPATH_NAMESPACE_NODE,\r\n        ],\r\n        '*'\r\n    );\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.TEXT,\r\n        [\r\n            NodeTypes.TEXT_NODE,\r\n            NodeTypes.CDATA_SECTION_NODE,\r\n        ],\r\n        'text()'\r\n    );\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.COMMENT,\r\n        [NodeTypes.COMMENT_NODE],\r\n        'comment()'\r\n    );\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.NODE,\r\n        [\r\n            NodeTypes.ELEMENT_NODE,\r\n            NodeTypes.ATTRIBUTE_NODE, \r\n            NodeTypes.TEXT_NODE, \r\n            NodeTypes.CDATA_SECTION_NODE,\r\n            NodeTypes.PROCESSING_INSTRUCTION_NODE,\r\n            NodeTypes.COMMENT_NODE,\r\n            NodeTypes.DOCUMENT_NODE,\r\n        ],\r\n        'node()'\r\n    );\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.PI,\r\n        [NodeTypes.PROCESSING_INSTRUCTION_NODE],\r\n        'processing-instruction()'\r\n    );\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == NodeTypes.DOCUMENT_NODE ||\r\n            n.nodeType == NodeTypes.ELEMENT_NODE ||\r\n            n.nodeType === NodeTypes.DOCUMENT_FRAGMENT_NODE) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === NodeTypes.ATTRIBUTE_NODE) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == NodeTypes.DOCUMENT_NODE) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != NodeTypes.ELEMENT_NODE) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == NodeTypes.DOCUMENT_NODE\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === NodeTypes.PROCESSING_INSTRUCTION_NODE) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != NodeTypes.DOCUMENT_NODE; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === NodeTypes.ATTRIBUTE_NODE || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == NodeTypes.CDATA_SECTION_NODE) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == NodeTypes.ELEMENT_NODE) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === NodeTypes.DOCUMENT_NODE ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath: XPath,\r\n            XPathParser: XPathParser,\r\n            XPathResult: XPathResult,\r\n\r\n            Step: Step,\r\n            PathExpr: PathExpr,\r\n            NodeTest: NodeTest,\r\n            LocationPath: LocationPath,\r\n\r\n            OrOperation: OrOperation,\r\n            AndOperation: AndOperation,\r\n\r\n            BarOperation: BarOperation,\r\n\r\n            EqualsOperation: EqualsOperation,\r\n            NotEqualOperation: NotEqualOperation,\r\n            LessThanOperation: LessThanOperation,\r\n            GreaterThanOperation: GreaterThanOperation,\r\n            LessThanOrEqualOperation: LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation: GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation: PlusOperation,\r\n            MinusOperation: MinusOperation,\r\n            MultiplyOperation: MultiplyOperation,\r\n            DivOperation: DivOperation,\r\n            ModOperation: ModOperation,\r\n            UnaryMinusOperation: UnaryMinusOperation,\r\n          \r\n            FunctionCall: FunctionCall,\r\n            VariableReference: VariableReference,\r\n          \r\n            XPathContext: XPathContext,\r\n          \r\n            XNodeSet: XNodeSet,\r\n            XBoolean: XBoolean,\r\n            XString: XString,\r\n            XNumber: XNumber,\r\n          \r\n            NamespaceResolver: NamespaceResolver,\r\n            FunctionResolver: FunctionResolver,\r\n            VariableResolver: VariableResolver,\r\n          \r\n            Utilities: Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    var isNodeLike = function (value) {\r\n        return value \r\n            && typeof value.nodeType === \"number\" \r\n            && Number.isInteger(value.nodeType)\r\n            && value.nodeType >= 1\r\n            && value.nodeType <= 11\r\n            && typeof value.nodeName === \"string\";\r\n    };\r\n\r\n    var isArrayOfNodes = function (value) {\r\n        return Array.isArray(value) && value.every(isNodeLike);\r\n    };\r\n\r\n    var isNodeOfType = function (type) {\r\n        return function (value) {\r\n            return isNodeLike(value) && value.nodeType === type;\r\n        };\r\n    };\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            isNodeLike: isNodeLike,\r\n            isArrayOfNodes: isArrayOfNodes,\r\n            isElement: isNodeOfType(NodeTypes.ELEMENT_NODE),\r\n            isAttribute: isNodeOfType(NodeTypes.ATTRIBUTE_NODE),\r\n            isTextNode: isNodeOfType(NodeTypes.TEXT_NODE),\r\n            isCDATASection: isNodeOfType(NodeTypes.CDATA_SECTION_NODE),\r\n            isProcessingInstruction: isNodeOfType(NodeTypes.PROCESSING_INSTRUCTION_NODE),\r\n            isComment: isNodeOfType(NodeTypes.COMMENT_NODE),\r\n            isDocumentNode: isNodeOfType(NodeTypes.DOCUMENT_NODE),\r\n            isDocumentTypeNode: isNodeOfType(NodeTypes.DOCUMENT_TYPE_NODE),\r\n            isDocumentFragment: isNodeOfType(NodeTypes.DOCUMENT_FRAGMENT_NODE),\r\n        }\r\n    );\r\n    // end non-node wrapper\r\n})(xpath);\r\n", "export enum NodeTypes {\n  ELEMENT_NODE = 1,\n  ATTRIBUTE_NODE = 2,\n  TEXT_NODE = 3,\n  CDATA_SECTION_NODE = 4,\n  PROCESSING_INSTRUCTION_NODE = 7,\n  COMMENT_NODE = 8,\n  DOCUMENT_NODE = 9,\n  DOCUMENT_TYPE_NODE = 10,\n  DOCUMENT_FRAGMENT_NODE = 11,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isNodeLike(value: any): value is Node {\n  return (\n    value &&\n    typeof value === \"object\" &&\n    Number.isInteger(value.nodeType) &&\n    value.nodeType >= 1 &&\n    value.nodeType <= 11 &&\n    typeof value.nodeName === \"string\" &&\n    typeof value.appendChild === \"function\" &&\n    typeof value.removeChild === \"function\"\n  );\n}\n\nexport function assertIsNodeLike(value: unknown): asserts value is Node {\n  if (!isNodeLike(value)) {\n    throw new Error(`Value is not a Node-like object. Received: ${value}`);\n  }\n}\n\nexport function isArrayOfNodes(value: unknown): value is Node[] {\n  return Array.isArray(value) && value.every(isNodeLike);\n}\n\nexport function assertIsArrayOfNodes(value: unknown): asserts value is Node[] {\n  if (!isArrayOfNodes(value)) {\n    throw new Error(\"Value is not an array of Nodes\");\n  }\n}\n\nfunction isNodeOfType(type: number, value: unknown): value is Node {\n  return isNodeLike(value) && value.nodeType === type;\n}\n\nfunction assertIsNodeOfType(type: number, value: unknown): void {\n  const typeName = Object.keys(NodeTypes).find(\n    (key) => NodeTypes[key as keyof typeof NodeTypes] === type,\n  );\n  if (!isNodeOfType(type, value)) {\n    throw new Error(`Value is not of type ${typeName}`);\n  }\n}\n\nexport const isElementNode = (value: unknown): value is Element =>\n  isNodeOfType(NodeTypes.ELEMENT_NODE, value);\nexport const isAttributeNode = (value: unknown): value is Attr =>\n  isNodeOfType(NodeTypes.ATTRIBUTE_NODE, value);\nexport const isTextNode = (value: unknown): value is Text =>\n  isNodeOfType(NodeTypes.TEXT_NODE, value);\nexport const isCDATASectionNode = (value: unknown): value is CDATASection =>\n  isNodeOfType(NodeTypes.CDATA_SECTION_NODE, value);\nexport const isProcessingInstructionNode = (value: unknown): value is ProcessingInstruction =>\n  isNodeOfType(NodeTypes.PROCESSING_INSTRUCTION_NODE, value);\nexport const isCommentNode = (value: unknown): value is Comment =>\n  isNodeOfType(NodeTypes.COMMENT_NODE, value);\nexport const isDocumentNode = (value: unknown): value is Document =>\n  isNodeOfType(NodeTypes.DOCUMENT_NODE, value);\nexport const isDocumentTypeNode = (value: unknown): value is DocumentType =>\n  isNodeOfType(NodeTypes.DOCUMENT_TYPE_NODE, value);\nexport const isDocumentFragmentNode = (value: unknown): value is DocumentFragment =>\n  isNodeOfType(NodeTypes.DOCUMENT_FRAGMENT_NODE, value);\n\nexport const assertIsElementNode: (value: unknown) => asserts value is Element = (\n  value: unknown,\n): asserts value is Element => {\n  assertIsNodeOfType(NodeTypes.ELEMENT_NODE, value);\n};\nexport const assertIsAttributeNode: (value: unknown) => asserts value is Attr = (value) =>\n  assertIsNodeOfType(NodeTypes.ATTRIBUTE_NODE, value);\n\nexport const assertIsTextNode: (value: unknown) => asserts value is Text = (value) =>\n  assertIsNodeOfType(NodeTypes.TEXT_NODE, value);\n\nexport const assertIsCDATASectionNode: (value: unknown) => asserts value is CDATASection = (\n  value,\n) => assertIsNodeOfType(NodeTypes.CDATA_SECTION_NODE, value);\n\nexport const assertIsProcessingInstructionNode: (\n  value: unknown,\n) => asserts value is ProcessingInstruction = (value) =>\n  assertIsNodeOfType(NodeTypes.PROCESSING_INSTRUCTION_NODE, value);\n\nexport const assertIsCommentNode: (value: unknown) => asserts value is Comment = (value) =>\n  assertIsNodeOfType(NodeTypes.COMMENT_NODE, value);\n\nexport const assertIsDocumentNode: (value: unknown) => asserts value is Document = (value) =>\n  assertIsNodeOfType(NodeTypes.DOCUMENT_NODE, value);\n\nexport const assertIsDocumentTypeNode: (value: unknown) => asserts value is DocumentType = (\n  value,\n) => assertIsNodeOfType(NodeTypes.DOCUMENT_TYPE_NODE, value);\n\nexport const assertIsDocumentFragmentNode: (value: unknown) => asserts value is DocumentFragment = (\n  value,\n) => assertIsNodeOfType(NodeTypes.DOCUMENT_FRAGMENT_NODE, value);\n", "import * as xpath from \"xpath\";\nimport type { NamespacePrefix } from \"./types\";\nimport * as isDomNode from \"@xmldom/is-dom-node\";\n\nexport function isArrayHasLength(array: unknown): array is unknown[] {\n  return Array.isArray(array) && array.length > 0;\n}\n\nfunction attrEqualsExplicitly(attr: Attr, localName: string, namespace?: string) {\n  return attr.localName === localName && (attr.namespaceURI === namespace || namespace == null);\n}\n\nfunction attrEqualsImplicitly(attr: Attr, localName: string, namespace?: string, node?: Element) {\n  return (\n    attr.localName === localName &&\n    ((!attr.namespaceURI && node?.namespaceURI === namespace) || namespace == null)\n  );\n}\n\nexport function findAttr(element: Element, localName: string, namespace?: string) {\n  for (let i = 0; i < element.attributes.length; i++) {\n    const attr = element.attributes[i];\n\n    if (\n      attrEqualsExplicitly(attr, localName, namespace) ||\n      attrEqualsImplicitly(attr, localName, namespace, element)\n    ) {\n      return attr;\n    }\n  }\n  return null;\n}\n\nexport function findChildren(node: Node | Document, localName: string, namespace?: string) {\n  const element = (node as Document).documentElement ?? node;\n  const res: Element[] = [];\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i];\n    if (\n      isDomNode.isElementNode(child) &&\n      child.localName === localName &&\n      (child.namespaceURI === namespace || namespace == null)\n    ) {\n      res.push(child);\n    }\n  }\n  return res;\n}\n\n/** @deprecated */\nexport function findChilds(node: Node | Document, localName: string, namespace?: string) {\n  return findChildren(node, localName, namespace);\n}\n\nconst xml_special_to_encoded_attribute = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  '\"': \"&quot;\",\n  \"\\r\": \"&#xD;\",\n  \"\\n\": \"&#xA;\",\n  \"\\t\": \"&#x9;\",\n};\n\nconst xml_special_to_encoded_text = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  \"\\r\": \"&#xD;\",\n};\n\nexport function encodeSpecialCharactersInAttribute(attributeValue) {\n  return attributeValue.replace(/([&<\"\\r\\n\\t])/g, function (str, item) {\n    /** Special character normalization.\n     * @see:\n     * - https://www.w3.org/TR/xml-c14n#ProcessingModel (Attribute Nodes)\n     * - https://www.w3.org/TR/xml-c14n#Example-Chars\n     */\n    return xml_special_to_encoded_attribute[item];\n  });\n}\n\nexport function encodeSpecialCharactersInText(text: string): string {\n  return text.replace(/([&<>\\r])/g, function (str, item) {\n    /** Special character normalization.\n     * @see:\n     * - https://www.w3.org/TR/xml-c14n#ProcessingModel (Text Nodes)\n     * - https://www.w3.org/TR/xml-c14n#Example-Chars\n     */\n    return xml_special_to_encoded_text[item];\n  });\n}\n\n/**\n * PEM format has wide range of usages, but this library\n * is enforcing RFC7468 which focuses on PKIX, PKCS and CMS.\n *\n * https://www.rfc-editor.org/rfc/rfc7468\n *\n * PEM_FORMAT_REGEX is validating given PEM file against RFC7468 'stricttextualmsg' definition.\n *\n * With few exceptions;\n *  - 'posteb' MAY have 'eol', but it is not mandatory.\n *  - 'preeb' and 'posteb' lines are limited to 64 characters, but\n *     should not cause any issues in context of PKIX, PKCS and CMS.\n */\nexport const PEM_FORMAT_REGEX = new RegExp(\n  \"^-----BEGIN [A-Z\\x20]{1,48}-----([^-]*)-----END [A-Z\\x20]{1,48}-----$\",\n  \"s\",\n);\nexport const EXTRACT_X509_CERTS = new RegExp(\n  \"-----BEGIN CERTIFICATE-----[^-]*-----END CERTIFICATE-----\",\n  \"g\",\n);\nexport const BASE64_REGEX = new RegExp(\n  \"^(?:[A-Za-z0-9\\\\+\\\\/]{4}\\\\n{0,1})*(?:[A-Za-z0-9\\\\+\\\\/]{2}==|[A-Za-z0-9\\\\+\\\\/]{3}=)?$\",\n  \"s\",\n);\n\n/**\n * -----BEGIN [LABEL]-----\n * base64([DATA])\n * -----END [LABEL]-----\n *\n * Above is shown what PEM file looks like. As can be seen, base64 data\n * can be in single line or multiple lines.\n *\n * This function normalizes PEM presentation to;\n *  - contain PEM header and footer as they are given\n *  - normalize line endings to '\\n'\n *  - normalize line length to maximum of 64 characters\n *  - ensure that 'preeb' has line ending '\\n'\n *\n * With a couple of notes:\n *  - 'eol' is normalized to '\\n'\n *\n * @param pem The PEM string to normalize to RFC7468 'stricttextualmsg' definition\n */\nexport function normalizePem(pem: string): string {\n  return `${(\n    pem\n      .trim()\n      .replace(/(\\r\\n|\\r)/g, \"\\n\")\n      .match(/.{1,64}/g) ?? []\n  ).join(\"\\n\")}\\n`;\n}\n\n/**\n * @param pem The PEM-encoded base64 certificate to strip headers from\n */\nexport function pemToDer(pem: string): Buffer {\n  if (!PEM_FORMAT_REGEX.test(pem.trim())) {\n    throw new Error(\"Invalid PEM format.\");\n  }\n\n  return Buffer.from(\n    pem\n      .replace(/(\\r\\n|\\r)/g, \"\")\n      .replace(/-----BEGIN [A-Z\\x20]{1,48}-----\\n?/, \"\")\n      .replace(/-----END [A-Z\\x20]{1,48}-----\\n?/, \"\"),\n    \"base64\",\n  );\n}\n\n/**\n * @param der The DER-encoded base64 certificate to add PEM headers too\n * @param pemLabel The label of the header and footer to add\n */\nexport function derToPem(\n  der: string | Buffer,\n  pemLabel?: \"CERTIFICATE\" | \"PRIVATE KEY\" | \"RSA PUBLIC KEY\",\n): string {\n  const base64Der = Buffer.isBuffer(der)\n    ? der.toString(\"base64\").trim()\n    : der.replace(/(\\r\\n|\\r)/g, \"\").trim();\n\n  if (PEM_FORMAT_REGEX.test(base64Der)) {\n    return normalizePem(base64Der);\n  }\n\n  if (BASE64_REGEX.test(base64Der.replace(/ /g, \"\"))) {\n    if (pemLabel == null) {\n      throw new Error(\"PEM label is required when DER is given.\");\n    }\n    const pem = `-----BEGIN ${pemLabel}-----\\n${base64Der.replace(\n      / /g,\n      \"\",\n    )}\\n-----END ${pemLabel}-----`;\n\n    return normalizePem(pem);\n  }\n\n  throw new Error(\"Unknown DER format.\");\n}\n\nfunction collectAncestorNamespaces(\n  node: Element,\n  nsArray: NamespacePrefix[] = [],\n): NamespacePrefix[] {\n  if (!isDomNode.isElementNode(node.parentNode)) {\n    return nsArray;\n  }\n\n  const parent: Element = node.parentNode;\n\n  if (!parent) {\n    return nsArray;\n  }\n\n  if (parent.attributes && parent.attributes.length > 0) {\n    for (let i = 0; i < parent.attributes.length; i++) {\n      const attr = parent.attributes[i];\n      if (attr && attr.nodeName && attr.nodeName.search(/^xmlns:?/) !== -1) {\n        nsArray.push({\n          prefix: attr.nodeName.replace(/^xmlns:?/, \"\"),\n          namespaceURI: attr.nodeValue || \"\",\n        });\n      }\n    }\n  }\n\n  return collectAncestorNamespaces(parent, nsArray);\n}\n\nfunction findNSPrefix(subset) {\n  const subsetAttributes = subset.attributes;\n  for (let k = 0; k < subsetAttributes.length; k++) {\n    const nodeName = subsetAttributes[k].nodeName;\n    if (nodeName.search(/^xmlns:?/) !== -1) {\n      return nodeName.replace(/^xmlns:?/, \"\");\n    }\n  }\n  return subset.prefix || \"\";\n}\n\nfunction isElementSubset(docSubset: Node[]): docSubset is Element[] {\n  return docSubset.every((node) => isDomNode.isElementNode(node));\n}\n\n/**\n * Extract ancestor namespaces in order to import it to root of document subset\n * which is being canonicalized for non-exclusive c14n.\n *\n * @param doc - Usually a product from `new xmldom.DOMParser().parseFromString()`\n * @param docSubsetXpath - xpath query to get document subset being canonicalized\n * @param namespaceResolver - xpath namespace resolver\n * @returns i.e. [{prefix: \"saml\", namespaceURI: \"urn:oasis:names:tc:SAML:2.0:assertion\"}]\n */\nexport function findAncestorNs(\n  doc: Document,\n  docSubsetXpath?: string,\n  namespaceResolver?: XPathNSResolver,\n): NamespacePrefix[] {\n  if (docSubsetXpath == null) {\n    return [];\n  }\n\n  const docSubset = xpath.selectWithResolver(docSubsetXpath, doc, namespaceResolver);\n\n  if (!isArrayHasLength(docSubset)) {\n    return [];\n  }\n\n  if (!isElementSubset(docSubset)) {\n    throw new Error(\"Document subset must be list of elements\");\n  }\n\n  // Remove duplicate on ancestor namespace\n  const ancestorNs = collectAncestorNamespaces(docSubset[0]);\n  const ancestorNsWithoutDuplicate: NamespacePrefix[] = [];\n  for (let i = 0; i < ancestorNs.length; i++) {\n    let notOnTheList = true;\n    for (const v in ancestorNsWithoutDuplicate) {\n      if (ancestorNsWithoutDuplicate[v].prefix === ancestorNs[i].prefix) {\n        notOnTheList = false;\n        break;\n      }\n    }\n\n    if (notOnTheList) {\n      ancestorNsWithoutDuplicate.push(ancestorNs[i]);\n    }\n  }\n\n  // Remove namespaces which are already declared in the subset with the same prefix\n  const returningNs: NamespacePrefix[] = [];\n  const subsetNsPrefix = findNSPrefix(docSubset[0]);\n  for (const ancestorNs of ancestorNsWithoutDuplicate) {\n    if (ancestorNs.prefix !== subsetNsPrefix) {\n      returningNs.push(ancestorNs);\n    }\n  }\n\n  return returningNs;\n}\n\nexport function validateDigestValue(digest, expectedDigest) {\n  const buffer = Buffer.from(digest, \"base64\");\n  const expectedBuffer = Buffer.from(expectedDigest, \"base64\");\n\n  if (typeof buffer.equals === \"function\") {\n    return buffer.equals(expectedBuffer);\n  }\n\n  if (buffer.length !== expectedBuffer.length) {\n    return false;\n  }\n\n  for (let i = 0; i < buffer.length; i++) {\n    if (buffer[i] !== expectedBuffer[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type {\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  NamespacePrefix,\n  RenderedNamespace,\n} from \"./types\";\nimport * as utils from \"./utils\";\nimport * as isDomNode from \"@xmldom/is-dom-node\";\n\nexport class C14nCanonicalization implements CanonicalizationOrTransformationAlgorithm {\n  protected includeComments = false;\n\n  constructor() {\n    this.includeComments = false;\n  }\n\n  attrCompare(a, b) {\n    if (!a.namespaceURI && b.namespaceURI) {\n      return -1;\n    }\n    if (!b.namespaceURI && a.namespaceURI) {\n      return 1;\n    }\n\n    const left = a.namespaceURI + a.localName;\n    const right = b.namespaceURI + b.localName;\n\n    if (left === right) {\n      return 0;\n    } else if (left < right) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n\n  nsCompare(a, b) {\n    const attr1 = a.prefix;\n    const attr2 = b.prefix;\n    if (attr1 === attr2) {\n      return 0;\n    }\n    return attr1.localeCompare(attr2);\n  }\n\n  renderAttrs(node) {\n    let i;\n    let attr;\n    const attrListToRender: Attr[] = [];\n\n    if (isDomNode.isCommentNode(node)) {\n      return this.renderComment(node);\n    }\n\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n        //ignore namespace definition attributes\n        if (attr.name.indexOf(\"xmlns\") === 0) {\n          continue;\n        }\n        attrListToRender.push(attr);\n      }\n    }\n\n    attrListToRender.sort(this.attrCompare);\n\n    const res = attrListToRender.map((attr) => {\n      return ` ${attr.name}=\"${utils.encodeSpecialCharactersInAttribute(attr.value)}\"`;\n    });\n\n    return res.join(\"\");\n  }\n\n  /**\n   * Create the string of all namespace declarations that should appear on this element\n   *\n   * @param node The node we now render\n   * @param prefixesInScope The prefixes defined on this node parents which are a part of the output set\n   * @param defaultNs The current default namespace\n   * @param defaultNsForPrefix\n   * @param ancestorNamespaces Import ancestor namespaces if it is specified\n   * @api private\n   */\n  renderNs(\n    node: Element,\n    prefixesInScope: string[],\n    defaultNs: string,\n    defaultNsForPrefix: string,\n    ancestorNamespaces: NamespacePrefix[],\n  ): RenderedNamespace {\n    let i;\n    let attr;\n    const res: string[] = [];\n    let newDefaultNs = defaultNs;\n    const nsListToRender: { prefix: string; namespaceURI: string }[] = [];\n    const currNs = node.namespaceURI || \"\";\n\n    //handle the namespace of the node itself\n    if (node.prefix) {\n      if (prefixesInScope.indexOf(node.prefix) === -1) {\n        nsListToRender.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n        prefixesInScope.push(node.prefix);\n      }\n    } else if (defaultNs !== currNs) {\n      //new default ns\n      newDefaultNs = node.namespaceURI || \"\";\n      res.push(' xmlns=\"', newDefaultNs, '\"');\n    }\n\n    //handle the attributes namespace\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n\n        //handle all prefixed attributes that are included in the prefix list and where\n        //the prefix is not defined already. New prefixes can only be defined by `xmlns:`.\n        if (attr.prefix === \"xmlns\" && prefixesInScope.indexOf(attr.localName) === -1) {\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\n          prefixesInScope.push(attr.localName);\n        }\n\n        //handle all prefixed attributes that are not xmlns definitions and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          prefixesInScope.indexOf(attr.prefix) === -1 &&\n          attr.prefix !== \"xmlns\" &&\n          attr.prefix !== \"xml\"\n        ) {\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n          prefixesInScope.push(attr.prefix);\n        }\n      }\n    }\n\n    if (utils.isArrayHasLength(ancestorNamespaces)) {\n      // Remove namespaces which are already present in nsListToRender\n      for (const ancestorNamespace of ancestorNamespaces) {\n        let alreadyListed = false;\n        for (const nsToRender of nsListToRender) {\n          if (\n            nsToRender.prefix === ancestorNamespace.prefix &&\n            nsToRender.namespaceURI === ancestorNamespace.namespaceURI\n          ) {\n            alreadyListed = true;\n          }\n        }\n\n        if (!alreadyListed) {\n          nsListToRender.push(ancestorNamespace);\n        }\n      }\n    }\n\n    nsListToRender.sort(this.nsCompare);\n\n    //render namespaces\n    res.push(\n      ...nsListToRender.map((attr) => {\n        if (attr.prefix) {\n          return ` xmlns:${attr.prefix}=\"${attr.namespaceURI}\"`;\n        }\n        return ` xmlns=\"${attr.namespaceURI}\"`;\n      }),\n    );\n\n    return { rendered: res.join(\"\"), newDefaultNs };\n  }\n\n  /**\n   * @param node Node\n   */\n  processInner(node, prefixesInScope, defaultNs, defaultNsForPrefix, ancestorNamespaces) {\n    if (isDomNode.isCommentNode(node)) {\n      return this.renderComment(node);\n    }\n    if (node.data) {\n      return utils.encodeSpecialCharactersInText(node.data);\n    }\n\n    if (isDomNode.isElementNode(node)) {\n      let i;\n      let pfxCopy;\n      const ns = this.renderNs(\n        node,\n        prefixesInScope,\n        defaultNs,\n        defaultNsForPrefix,\n        ancestorNamespaces,\n      );\n      const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\n\n      for (i = 0; i < node.childNodes.length; ++i) {\n        pfxCopy = prefixesInScope.slice(0);\n        res.push(\n          this.processInner(node.childNodes[i], pfxCopy, ns.newDefaultNs, defaultNsForPrefix, []),\n        );\n      }\n\n      res.push(\"</\", node.tagName, \">\");\n      return res.join(\"\");\n    }\n\n    throw new Error(`Unable to canonicalize node type: ${node.nodeType}`);\n  }\n\n  // Thanks to deoxxa/xml-c14n for comment renderer\n  renderComment(node: Comment) {\n    if (!this.includeComments) {\n      return \"\";\n    }\n\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\n    let isBeforeDocument = false;\n    let isAfterDocument = false;\n\n    if (isOutsideDocument) {\n      let nextNode: ChildNode | null = node;\n      let previousNode: ChildNode | null = node;\n\n      while (nextNode !== null) {\n        if (nextNode === node.ownerDocument.documentElement) {\n          isBeforeDocument = true;\n          break;\n        }\n\n        nextNode = nextNode.nextSibling;\n      }\n\n      while (previousNode !== null) {\n        if (previousNode === node.ownerDocument.documentElement) {\n          isAfterDocument = true;\n          break;\n        }\n\n        previousNode = previousNode.previousSibling;\n      }\n    }\n\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\n\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\n  }\n\n  /**\n   * Perform canonicalization of the given node\n   *\n   * @param node\n   * @api public\n   */\n  process(node: Node, options: CanonicalizationOrTransformationAlgorithmProcessOptions): string {\n    options = options || {};\n    const defaultNs = options.defaultNs || \"\";\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\n    const ancestorNamespaces = options.ancestorNamespaces || [];\n\n    const prefixesInScope: string[] = [];\n    for (let i = 0; i < ancestorNamespaces.length; i++) {\n      prefixesInScope.push(ancestorNamespaces[i].prefix);\n    }\n\n    const res = this.processInner(\n      node,\n      prefixesInScope,\n      defaultNs,\n      defaultNsForPrefix,\n      ancestorNamespaces,\n    );\n    return res;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\";\n  }\n}\n\n/**\n * Add c14n#WithComments here (very simple subclass)\n */\nexport class C14nCanonicalizationWithComments extends C14nCanonicalization {\n  constructor() {\n    super();\n    this.includeComments = true;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\";\n  }\n}\n", "import type {\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  NamespacePrefix,\n} from \"./types\";\nimport * as utils from \"./utils\";\nimport * as isDomNode from \"@xmldom/is-dom-node\";\n\nfunction isPrefixInScope(prefixesInScope, prefix, namespaceURI) {\n  let ret = false;\n  prefixesInScope.forEach(function (pf) {\n    if (pf.prefix === prefix && pf.namespaceURI === namespaceURI) {\n      ret = true;\n    }\n  });\n\n  return ret;\n}\n\nexport class ExclusiveCanonicalization implements CanonicalizationOrTransformationAlgorithm {\n  protected includeComments = false;\n\n  constructor() {\n    this.includeComments = false;\n  }\n\n  attrCompare(a, b) {\n    if (!a.namespaceURI && b.namespaceURI) {\n      return -1;\n    }\n    if (!b.namespaceURI && a.namespaceURI) {\n      return 1;\n    }\n\n    const left = a.namespaceURI + a.localName;\n    const right = b.namespaceURI + b.localName;\n\n    if (left === right) {\n      return 0;\n    } else if (left < right) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n\n  nsCompare(a, b) {\n    const attr1 = a.prefix;\n    const attr2 = b.prefix;\n    if (attr1 === attr2) {\n      return 0;\n    }\n    return attr1.localeCompare(attr2);\n  }\n\n  renderAttrs(node) {\n    let i;\n    let attr;\n    const res: string[] = [];\n    const attrListToRender: Attr[] = [];\n\n    if (isDomNode.isCommentNode(node)) {\n      return this.renderComment(node);\n    }\n\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n        //ignore namespace definition attributes\n        if (attr.name.indexOf(\"xmlns\") === 0) {\n          continue;\n        }\n        attrListToRender.push(attr);\n      }\n    }\n\n    attrListToRender.sort(this.attrCompare);\n\n    for (attr of attrListToRender) {\n      res.push(\" \", attr.name, '=\"', utils.encodeSpecialCharactersInAttribute(attr.value), '\"');\n    }\n\n    return res.join(\"\");\n  }\n\n  /**\n   * Create the string of all namespace declarations that should appear on this element\n   *\n   * @param {Node} node. The node we now render\n   * @param {Array} prefixesInScope. The prefixes defined on this node\n   *                parents which are a part of the output set\n   * @param {String} defaultNs. The current default namespace\n   * @return {String}\n   * @api private\n   */\n  renderNs(\n    node,\n    prefixesInScope,\n    defaultNs,\n    defaultNsForPrefix,\n    inclusiveNamespacesPrefixList: string[],\n  ) {\n    let i;\n    let attr;\n    const res: string[] = [];\n    let newDefaultNs = defaultNs;\n    const nsListToRender: NamespacePrefix[] = [];\n    const currNs = node.namespaceURI || \"\";\n\n    //handle the namespaceof the node itself\n    if (node.prefix) {\n      if (\n        !isPrefixInScope(\n          prefixesInScope,\n          node.prefix,\n          node.namespaceURI || defaultNsForPrefix[node.prefix],\n        )\n      ) {\n        nsListToRender.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n        prefixesInScope.push({\n          prefix: node.prefix,\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\n        });\n      }\n    } else if (defaultNs !== currNs) {\n      //new default ns\n      newDefaultNs = node.namespaceURI;\n      res.push(' xmlns=\"', newDefaultNs, '\"');\n    }\n\n    //handle the attributes namespace\n    if (node.attributes) {\n      for (i = 0; i < node.attributes.length; ++i) {\n        attr = node.attributes[i];\n\n        //handle all prefixed attributes that are included in the prefix list and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          !isPrefixInScope(prefixesInScope, attr.localName, attr.value) &&\n          inclusiveNamespacesPrefixList.indexOf(attr.localName) >= 0\n        ) {\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\n          prefixesInScope.push({ prefix: attr.localName, namespaceURI: attr.value });\n        }\n\n        //handle all prefixed attributes that are not xmlns definitions and where\n        //the prefix is not defined already\n        if (\n          attr.prefix &&\n          !isPrefixInScope(prefixesInScope, attr.prefix, attr.namespaceURI) &&\n          attr.prefix !== \"xmlns\" &&\n          attr.prefix !== \"xml\"\n        ) {\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n          prefixesInScope.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\n        }\n      }\n    }\n\n    nsListToRender.sort(this.nsCompare);\n\n    //render namespaces\n    for (const p of nsListToRender) {\n      res.push(\" xmlns:\", p.prefix, '=\"', p.namespaceURI, '\"');\n    }\n\n    return { rendered: res.join(\"\"), newDefaultNs: newDefaultNs };\n  }\n\n  /**\n   * @param node Node\n   */\n  processInner(\n    node,\n    prefixesInScope,\n    defaultNs,\n    defaultNsForPrefix,\n    inclusiveNamespacesPrefixList: string[],\n  ) {\n    if (isDomNode.isCommentNode(node)) {\n      return this.renderComment(node);\n    }\n    if (node.data) {\n      return utils.encodeSpecialCharactersInText(node.data);\n    }\n\n    if (isDomNode.isElementNode(node)) {\n      let i;\n      let pfxCopy;\n      const ns = this.renderNs(\n        node,\n        prefixesInScope,\n        defaultNs,\n        defaultNsForPrefix,\n        inclusiveNamespacesPrefixList,\n      );\n      const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\n\n      for (i = 0; i < node.childNodes.length; ++i) {\n        pfxCopy = prefixesInScope.slice(0);\n        res.push(\n          this.processInner(\n            node.childNodes[i],\n            pfxCopy,\n            ns.newDefaultNs,\n            defaultNsForPrefix,\n            inclusiveNamespacesPrefixList,\n          ),\n        );\n      }\n\n      res.push(\"</\", node.tagName, \">\");\n      return res.join(\"\");\n    }\n\n    throw new Error(`Unable to exclusive canonicalize node type: ${node.nodeType}`);\n  }\n\n  // Thanks to deoxxa/xml-c14n for comment renderer\n  renderComment(node: Comment) {\n    if (!this.includeComments) {\n      return \"\";\n    }\n\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\n    let isBeforeDocument = false;\n    let isAfterDocument = false;\n\n    if (isOutsideDocument) {\n      let nextNode: ChildNode | null = node;\n      let previousNode: ChildNode | null = node;\n\n      while (nextNode != null) {\n        if (nextNode === node.ownerDocument.documentElement) {\n          isBeforeDocument = true;\n          break;\n        }\n\n        nextNode = nextNode.nextSibling;\n      }\n\n      while (previousNode != null) {\n        if (previousNode === node.ownerDocument.documentElement) {\n          isAfterDocument = true;\n          break;\n        }\n\n        previousNode = previousNode.previousSibling;\n      }\n    }\n\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\n\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\n  }\n\n  /**\n   * Perform canonicalization of the given element node\n   *\n   * @api public\n   */\n  process(elem: Element, options: CanonicalizationOrTransformationAlgorithmProcessOptions): string {\n    options = options || {};\n    let inclusiveNamespacesPrefixList = options.inclusiveNamespacesPrefixList || [];\n    const defaultNs = options.defaultNs || \"\";\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\n    const ancestorNamespaces = options.ancestorNamespaces || [];\n\n    /**\n     * If the inclusiveNamespacesPrefixList has not been explicitly provided then look it up in CanonicalizationMethod/InclusiveNamespaces\n     */\n    if (!utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\n      const CanonicalizationMethod = utils.findChildren(elem, \"CanonicalizationMethod\");\n      if (CanonicalizationMethod.length !== 0) {\n        const inclusiveNamespaces = utils.findChildren(\n          CanonicalizationMethod[0],\n          \"InclusiveNamespaces\",\n        );\n        if (inclusiveNamespaces.length !== 0) {\n          inclusiveNamespacesPrefixList = (\n            inclusiveNamespaces[0].getAttribute(\"PrefixList\") || \"\"\n          ).split(\" \");\n        }\n      }\n    }\n\n    /**\n     * If you have a PrefixList then use it and the ancestors to add the necessary namespaces\n     */\n    if (utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\n      inclusiveNamespacesPrefixList.forEach(function (prefix) {\n        if (ancestorNamespaces) {\n          ancestorNamespaces.forEach(function (ancestorNamespace) {\n            if (prefix === ancestorNamespace.prefix) {\n              elem.setAttributeNS(\n                \"http://www.w3.org/2000/xmlns/\",\n                `xmlns:${prefix}`,\n                ancestorNamespace.namespaceURI,\n              );\n            }\n          });\n        }\n      });\n    }\n\n    const res = this.processInner(\n      elem,\n      [],\n      defaultNs,\n      defaultNsForPrefix,\n      inclusiveNamespacesPrefixList,\n    );\n    return res;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#\";\n  }\n}\n\nexport class ExclusiveCanonicalizationWithComments extends ExclusiveCanonicalization {\n  constructor() {\n    super();\n    this.includeComments = true;\n  }\n\n  getAlgorithmName() {\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\";\n  }\n}\n", "import * as xpath from \"xpath\";\nimport * as isDomNode from \"@xmldom/is-dom-node\";\n\nimport type {\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  CanonicalizationOrTransformAlgorithmType,\n} from \"./types\";\n\nexport class EnvelopedSignature implements CanonicalizationOrTransformationAlgorithm {\n  protected includeComments = false;\n\n  constructor() {\n    this.includeComments = false;\n  }\n\n  process(node: Node, options: CanonicalizationOrTransformationAlgorithmProcessOptions): Node {\n    if (null == options.signatureNode) {\n      const signature = xpath.select1(\n        \"./*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",\n        node,\n      );\n      if (isDomNode.isNodeLike(signature) && signature.parentNode) {\n        signature.parentNode.removeChild(signature);\n      }\n      return node;\n    }\n    const signatureNode = options.signatureNode;\n    const expectedSignatureValue = xpath.select1(\n      \".//*[local-name(.)='SignatureValue']/text()\",\n      signatureNode,\n    );\n    if (isDomNode.isTextNode(expectedSignatureValue)) {\n      const expectedSignatureValueData = expectedSignatureValue.data;\n\n      const signatures = xpath.select(\n        \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",\n        node,\n      );\n      for (const nodeSignature of Array.isArray(signatures) ? signatures : []) {\n        const signatureValue = xpath.select1(\n          \".//*[local-name(.)='SignatureValue']/text()\",\n          nodeSignature,\n        );\n        if (isDomNode.isTextNode(signatureValue)) {\n          const signatureValueData = signatureValue.data;\n          if (expectedSignatureValueData === signatureValueData) {\n            if (nodeSignature.parentNode) {\n              nodeSignature.parentNode.removeChild(nodeSignature);\n            }\n          }\n        }\n      }\n    }\n    return node;\n  }\n\n  getAlgorithmName(): CanonicalizationOrTransformAlgorithmType {\n    return \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\";\n  }\n}\n", "import * as crypto from \"crypto\";\nimport type { HashAlgorithm } from \"./types\";\n\nexport class Sha1 implements HashAlgorithm {\n  getHash = function (xml) {\n    const shasum = crypto.createHash(\"sha1\");\n    shasum.update(xml, \"utf8\");\n    const res = shasum.digest(\"base64\");\n    return res;\n  };\n\n  getAlgorithmName = function () {\n    return \"http://www.w3.org/2000/09/xmldsig#sha1\";\n  };\n}\n\nexport class Sha256 implements HashAlgorithm {\n  getHash = function (xml) {\n    const shasum = crypto.createHash(\"sha256\");\n    shasum.update(xml, \"utf8\");\n    const res = shasum.digest(\"base64\");\n    return res;\n  };\n\n  getAlgorithmName = function () {\n    return \"http://www.w3.org/2001/04/xmlenc#sha256\";\n  };\n}\n\nexport class Sha512 implements HashAlgorithm {\n  getHash = function (xml) {\n    const shasum = crypto.createHash(\"sha512\");\n    shasum.update(xml, \"utf8\");\n    const res = shasum.digest(\"base64\");\n    return res;\n  };\n\n  getAlgorithmName = function () {\n    return \"http://www.w3.org/2001/04/xmlenc#sha512\";\n  };\n}\n", "/* eslint-disable no-unused-vars */\n// Type definitions for @node-saml/xml-crypto\n// Project: https://github.com/node-saml/xml-crypto#readme\n// Original definitions by: Eric Heikes <https://github.com/eheikes>\n//                          Max Chehab <https://github.com/maxchehab>\n\n/// <reference types=\"node\" />\n\nimport * as crypto from \"crypto\";\n\nexport type ErrorFirstCallback<T> = (err: Error | null, result?: T) => void;\n\nexport type CanonicalizationAlgorithmType =\n  | \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"\n  | \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"\n  | \"http://www.w3.org/2001/10/xml-exc-c14n#\"\n  | \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\"\n  | string;\n\nexport type CanonicalizationOrTransformAlgorithmType =\n  | CanonicalizationAlgorithmType\n  | \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\";\n\nexport type HashAlgorithmType =\n  | \"http://www.w3.org/2000/09/xmldsig#sha1\"\n  | \"http://www.w3.org/2001/04/xmlenc#sha256\"\n  | \"http://www.w3.org/2001/04/xmlenc#sha512\"\n  | string;\n\nexport type SignatureAlgorithmType =\n  | \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"\n  | \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n  | \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"\n  | \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\"\n  | string;\n\n/**\n * @param cert the certificate as a string or array of strings (@see https://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-X509Data)\n * @param prefix an optional namespace alias to be used for the generated XML\n */\nexport interface GetKeyInfoContentArgs {\n  publicCert?: crypto.KeyLike;\n  prefix?: string | null;\n}\n\n/**\n * Options for the SignedXml constructor.\n */\nexport interface SignedXmlOptions {\n  idMode?: \"wssecurity\";\n  idAttribute?: string;\n  privateKey?: crypto.KeyLike;\n  publicCert?: crypto.KeyLike;\n  signatureAlgorithm?: SignatureAlgorithmType;\n  canonicalizationAlgorithm?: CanonicalizationAlgorithmType;\n  inclusiveNamespacesPrefixList?: string | string[];\n  implicitTransforms?: ReadonlyArray<CanonicalizationOrTransformAlgorithmType>;\n  keyInfoAttributes?: Record<string, string>;\n  getKeyInfoContent?(args?: GetKeyInfoContentArgs): string | null;\n  getCertFromKeyInfo?(keyInfo?: Node | null): string | null;\n}\n\nexport interface NamespacePrefix {\n  prefix: string;\n  namespaceURI: string;\n}\n\nexport interface RenderedNamespace {\n  rendered: string;\n  newDefaultNs: string;\n}\n\nexport interface CanonicalizationOrTransformationAlgorithmProcessOptions {\n  defaultNs?: string;\n  defaultNsForPrefix?: Record<string, string>;\n  ancestorNamespaces?: NamespacePrefix[];\n  signatureNode?: Node | null;\n  inclusiveNamespacesPrefixList?: string[];\n}\n\nexport interface ComputeSignatureOptionsLocation {\n  reference?: string;\n  action?: \"append\" | \"prepend\" | \"before\" | \"after\";\n}\n\n/**\n * Options for the computeSignature method.\n *\n * - `prefix` {String} Adds a prefix for the generated signature tags\n * - `attrs` {Object} A hash of attributes and values `attrName: value` to add to the signature root node\n * - `location` {{ reference: String, action: String }}\n * - `existingPrefixes` {Object} A hash of prefixes and namespaces `prefix: namespace` already in the xml\n *   An object with a `reference` key which should\n *   contain a XPath expression, an `action` key which\n *   should contain one of the following values:\n *   `append`, `prepend`, `before`, `after`\n */\nexport interface ComputeSignatureOptions {\n  prefix?: string;\n  attrs?: Record<string, string>;\n  location?: ComputeSignatureOptionsLocation;\n  existingPrefixes?: Record<string, string>;\n}\n\n/**\n * Represents a reference node for XML digital signature.\n */\nexport interface Reference {\n  // The XPath expression that selects the data to be signed.\n  xpath?: string;\n\n  // An array of transforms to be applied to the data before signing.\n  transforms: ReadonlyArray<CanonicalizationOrTransformAlgorithmType>;\n\n  // The algorithm used to calculate the digest value of the data.\n  digestAlgorithm: HashAlgorithmType;\n\n  // The URI that identifies the data to be signed.\n  uri: string;\n\n  // Optional. The digest value of the referenced data.\n  digestValue?: unknown;\n\n  // A list of namespace prefixes to be treated as \"inclusive\" during canonicalization.\n  inclusiveNamespacesPrefixList: string[];\n\n  // Optional. Indicates whether the URI is empty.\n  isEmptyUri: boolean;\n\n  // Optional. The type of the reference node.\n  ancestorNamespaces?: NamespacePrefix[];\n\n  validationError?: Error;\n\n  getValidatedNode(xpathSelector?: string): Node | null;\n\n  signedReference?: string;\n}\n\n/** Implement this to create a new CanonicalizationOrTransformationAlgorithm */\nexport interface CanonicalizationOrTransformationAlgorithm {\n  process(\n    node: Node,\n    options: CanonicalizationOrTransformationAlgorithmProcessOptions,\n  ): Node | string;\n\n  getAlgorithmName(): CanonicalizationOrTransformAlgorithmType;\n}\n\n/** Implement this to create a new HashAlgorithm */\nexport interface HashAlgorithm {\n  getAlgorithmName(): HashAlgorithmType;\n\n  getHash(xml: string): string;\n}\n\n/** Extend this to create a new SignatureAlgorithm */\nexport interface SignatureAlgorithm {\n  /**\n   * Sign the given string using the given key\n   */\n  getSignature(signedInfo: crypto.BinaryLike, privateKey: crypto.KeyLike): string;\n  getSignature(\n    signedInfo: crypto.BinaryLike,\n    privateKey: crypto.KeyLike,\n    callback?: ErrorFirstCallback<string>,\n  ): void;\n  /**\n   * Verify the given signature of the given string using key\n   *\n   * @param key a public cert, public key, or private key can be passed here\n   */\n  verifySignature(material: string, key: crypto.KeyLike, signatureValue: string): boolean;\n  verifySignature(\n    material: string,\n    key: crypto.KeyLike,\n    signatureValue: string,\n    callback?: ErrorFirstCallback<boolean>,\n  ): void;\n\n  getAlgorithmName(): SignatureAlgorithmType;\n}\n\n/** Implement this to create a new TransformAlgorithm */\nexport interface TransformAlgorithm {\n  getAlgorithmName(): CanonicalizationOrTransformAlgorithmType;\n\n  process(node: Node): string;\n}\n\n/**\n * ### Sign\n * #### Properties\n * - {@link SignedXml#privateKey} [required]\n * - {@link SignedXml#publicCert} [optional]\n * - {@link SignedXml#signatureAlgorithm} [optional]\n * - {@link SignedXml#canonicalizationAlgorithm} [optional]\n * #### Api\n *  - {@link SignedXml#addReference}\n *  - {@link SignedXml#computeSignature}\n *  - {@link SignedXml#getSignedXml}\n *  - {@link SignedXml#getSignatureXml}\n *  - {@link SignedXml#getOriginalXmlWithIds}\n *\n * ### Verify\n * #### Properties\n * -  {@link SignedXml#publicCert} [optional]\n * #### Api\n *  - {@link SignedXml#loadSignature}\n *  - {@link SignedXml#checkSignature}\n */\n\nfunction isErrorFirstCallback<T>(\n  possibleCallback: unknown,\n): possibleCallback is ErrorFirstCallback<T> {\n  return typeof possibleCallback === \"function\";\n}\n\n/**\n * This function will add a callback version of a sync function.\n *\n * This follows the factory pattern.\n * Just call this function, passing the function that you'd like to add a callback version of.\n */\nexport function createOptionalCallbackFunction<T, A extends unknown[]>(\n  syncVersion: (...args: A) => T,\n): {\n  (...args: A): T;\n  (...args: [...A, ErrorFirstCallback<T>]): void;\n} {\n  return ((...args: A | [...A, ErrorFirstCallback<T>]) => {\n    const possibleCallback = args[args.length - 1];\n    if (isErrorFirstCallback(possibleCallback)) {\n      try {\n        const result = syncVersion(...(args.slice(0, -1) as A));\n        possibleCallback(null, result);\n      } catch (err) {\n        possibleCallback(err instanceof Error ? err : new Error(\"Unknown error\"));\n      }\n    } else {\n      return syncVersion(...(args as A));\n    }\n  }) as {\n    (...args: A): T;\n    (...args: [...A, ErrorFirstCallback<T>]): void;\n  };\n}\n", "import * as crypto from \"crypto\";\nimport { type SignatureAlgorithm, createOptionalCallbackFunction } from \"./types\";\n\nexport class RsaSha1 implements SignatureAlgorithm {\n  getSignature = createOptionalCallbackFunction(\n    (signedInfo: crypto.BinaryLike, privateKey: crypto.KeyLike): string => {\n      const signer = crypto.createSign(\"RSA-SHA1\");\n      signer.update(signedInfo);\n      const res = signer.sign(privateKey, \"base64\");\n\n      return res;\n    },\n  );\n\n  verifySignature = createOptionalCallbackFunction(\n    (material: string, key: crypto.KeyLike, signatureValue: string): boolean => {\n      const verifier = crypto.createVerify(\"RSA-SHA1\");\n      verifier.update(material);\n      const res = verifier.verify(key, signatureValue, \"base64\");\n\n      return res;\n    },\n  );\n\n  getAlgorithmName = () => {\n    return \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\";\n  };\n}\n\nexport class RsaSha256 implements SignatureAlgorithm {\n  getSignature = createOptionalCallbackFunction(\n    (signedInfo: crypto.BinaryLike, privateKey: crypto.KeyLike): string => {\n      const signer = crypto.createSign(\"RSA-SHA256\");\n      signer.update(signedInfo);\n      const res = signer.sign(privateKey, \"base64\");\n\n      return res;\n    },\n  );\n\n  verifySignature = createOptionalCallbackFunction(\n    (material: string, key: crypto.KeyLike, signatureValue: string): boolean => {\n      const verifier = crypto.createVerify(\"RSA-SHA256\");\n      verifier.update(material);\n      const res = verifier.verify(key, signatureValue, \"base64\");\n\n      return res;\n    },\n  );\n\n  getAlgorithmName = () => {\n    return \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n  };\n}\n\nexport class RsaSha512 implements SignatureAlgorithm {\n  getSignature = createOptionalCallbackFunction(\n    (signedInfo: crypto.BinaryLike, privateKey: crypto.KeyLike): string => {\n      const signer = crypto.createSign(\"RSA-SHA512\");\n      signer.update(signedInfo);\n      const res = signer.sign(privateKey, \"base64\");\n\n      return res;\n    },\n  );\n\n  verifySignature = createOptionalCallbackFunction(\n    (material: string, key: crypto.KeyLike, signatureValue: string): boolean => {\n      const verifier = crypto.createVerify(\"RSA-SHA512\");\n      verifier.update(material);\n      const res = verifier.verify(key, signatureValue, \"base64\");\n\n      return res;\n    },\n  );\n\n  getAlgorithmName = () => {\n    return \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\";\n  };\n}\n\nexport class HmacSha1 implements SignatureAlgorithm {\n  getSignature = createOptionalCallbackFunction(\n    (signedInfo: crypto.BinaryLike, privateKey: crypto.KeyLike): string => {\n      const signer = crypto.createHmac(\"SHA1\", privateKey);\n      signer.update(signedInfo);\n      const res = signer.digest(\"base64\");\n\n      return res;\n    },\n  );\n\n  verifySignature = createOptionalCallbackFunction(\n    (material: string, key: crypto.KeyLike, signatureValue: string): boolean => {\n      const verifier = crypto.createHmac(\"SHA1\", key);\n      verifier.update(material);\n      const res = verifier.digest(\"base64\");\n\n      return res === signatureValue;\n    },\n  );\n\n  getAlgorithmName = () => {\n    return \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\";\n  };\n}\n", "import type {\n  CanonicalizationAlgorithmType,\n  CanonicalizationOrTransformAlgorithmType,\n  CanonicalizationOrTransformationAlgorithm,\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\n  ComputeSignatureOptions,\n  ErrorFirstCallback,\n  GetKeyInfoContentArgs,\n  HashAlgorithm,\n  HashAlgorithmType,\n  Reference,\n  SignatureAlgorithm,\n  SignatureAlgorithmType,\n  SignedXmlOptions,\n} from \"./types\";\n\nimport * as isDomNode from \"@xmldom/is-dom-node\";\nimport * as xmldom from \"@xmldom/xmldom\";\nimport * as crypto from \"crypto\";\nimport { deprecate } from \"util\";\nimport * as xpath from \"xpath\";\nimport * as c14n from \"./c14n-canonicalization\";\nimport * as envelopedSignatures from \"./enveloped-signature\";\nimport * as execC14n from \"./exclusive-canonicalization\";\nimport * as hashAlgorithms from \"./hash-algorithms\";\nimport * as signatureAlgorithms from \"./signature-algorithms\";\nimport * as utils from \"./utils\";\n\nexport class SignedXml {\n  idMode?: \"wssecurity\";\n  idAttributes: string[];\n  /**\n   * A {@link Buffer} or pem encoded {@link String} containing your private key\n   */\n  privateKey?: crypto.KeyLike;\n  publicCert?: crypto.KeyLike;\n  /**\n   * One of the supported signature algorithms.\n   * @see {@link SignatureAlgorithmType}\n   */\n  signatureAlgorithm?: SignatureAlgorithmType = undefined;\n  /**\n   * Rules used to convert an XML document into its canonical form.\n   */\n  canonicalizationAlgorithm?: CanonicalizationAlgorithmType = undefined;\n  /**\n   * It specifies a list of namespace prefixes that should be considered \"inclusive\" during the canonicalization process.\n   */\n  inclusiveNamespacesPrefixList: string[] = [];\n  namespaceResolver: XPathNSResolver = {\n    lookupNamespaceURI: function (/* prefix */) {\n      throw new Error(\"Not implemented\");\n    },\n  };\n  implicitTransforms: ReadonlyArray<CanonicalizationOrTransformAlgorithmType> = [];\n  keyInfoAttributes: { [attrName: string]: string } = {};\n  getKeyInfoContent = SignedXml.getKeyInfoContent;\n  getCertFromKeyInfo = SignedXml.getCertFromKeyInfo;\n\n  // Internal state\n  private id = 0;\n  private signedXml = \"\";\n  private signatureXml = \"\";\n  private signatureNode: Node | null = null;\n  private signatureValue = \"\";\n  private originalXmlWithIds = \"\";\n  private keyInfo: Node | null = null;\n\n  /**\n   * Contains the references that were signed.\n   * @see {@link Reference}\n   */\n  private references: Reference[] = [];\n\n  /**\n   * Contains the canonicalized XML of the references that were validly signed.\n   *\n   * This populates with the canonical XML of the reference only after\n   * verifying the signature is cryptographically authentic.\n   */\n  private signedReferences: string[] = [];\n\n  /**\n   *  To add a new transformation algorithm create a new class that implements the {@link TransformationAlgorithm} interface, and register it here. More info: {@link https://github.com/node-saml/xml-crypto#customizing-algorithms|Customizing Algorithms}\n   */\n  CanonicalizationAlgorithms: Record<\n    CanonicalizationOrTransformAlgorithmType,\n    new () => CanonicalizationOrTransformationAlgorithm\n  > = {\n    \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\": c14n.C14nCanonicalization,\n    \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\":\n      c14n.C14nCanonicalizationWithComments,\n    \"http://www.w3.org/2001/10/xml-exc-c14n#\": execC14n.ExclusiveCanonicalization,\n    \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\":\n      execC14n.ExclusiveCanonicalizationWithComments,\n    \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\": envelopedSignatures.EnvelopedSignature,\n  };\n\n  // TODO: In v7.x we may consider deprecating sha1\n\n  /**\n   * To add a new hash algorithm create a new class that implements the {@link HashAlgorithm} interface, and register it here. More info: {@link https://github.com/node-saml/xml-crypto#customizing-algorithms|Customizing Algorithms}\n   */\n  HashAlgorithms: Record<HashAlgorithmType, new () => HashAlgorithm> = {\n    \"http://www.w3.org/2000/09/xmldsig#sha1\": hashAlgorithms.Sha1,\n    \"http://www.w3.org/2001/04/xmlenc#sha256\": hashAlgorithms.Sha256,\n    \"http://www.w3.org/2001/04/xmlenc#sha512\": hashAlgorithms.Sha512,\n  };\n\n  // TODO: In v7.x we may consider deprecating sha1\n\n  /**\n   * To add a new signature algorithm create a new class that implements the {@link SignatureAlgorithm} interface, and register it here. More info: {@link https://github.com/node-saml/xml-crypto#customizing-algorithms|Customizing Algorithms}\n   */\n  SignatureAlgorithms: Record<SignatureAlgorithmType, new () => SignatureAlgorithm> = {\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\": signatureAlgorithms.RsaSha1,\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\": signatureAlgorithms.RsaSha256,\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\": signatureAlgorithms.RsaSha512,\n    // Disabled by default due to key confusion concerns.\n    // 'http://www.w3.org/2000/09/xmldsig#hmac-sha1': SignatureAlgorithms.HmacSha1\n  };\n\n  static defaultNsForPrefix = {\n    ds: \"http://www.w3.org/2000/09/xmldsig#\",\n  };\n\n  static noop = () => null;\n\n  /**\n   * The SignedXml constructor provides an abstraction for sign and verify xml documents. The object is constructed using\n   * @param options {@link SignedXmlOptions}\n   */\n  constructor(options: SignedXmlOptions = {}) {\n    const {\n      idMode,\n      idAttribute,\n      privateKey,\n      publicCert,\n      signatureAlgorithm,\n      canonicalizationAlgorithm,\n      inclusiveNamespacesPrefixList,\n      implicitTransforms,\n      keyInfoAttributes,\n      getKeyInfoContent,\n      getCertFromKeyInfo,\n    } = options;\n\n    // Options\n    this.idMode = idMode;\n    this.idAttributes = [\"Id\", \"ID\", \"id\"];\n    if (idAttribute) {\n      this.idAttributes.unshift(idAttribute);\n    }\n    this.privateKey = privateKey;\n    this.publicCert = publicCert;\n    this.signatureAlgorithm = signatureAlgorithm ?? this.signatureAlgorithm;\n    this.canonicalizationAlgorithm = canonicalizationAlgorithm;\n    if (typeof inclusiveNamespacesPrefixList === \"string\") {\n      this.inclusiveNamespacesPrefixList = inclusiveNamespacesPrefixList.split(\" \");\n    } else if (utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\n      this.inclusiveNamespacesPrefixList = inclusiveNamespacesPrefixList;\n    }\n    this.implicitTransforms = implicitTransforms ?? this.implicitTransforms;\n    this.keyInfoAttributes = keyInfoAttributes ?? this.keyInfoAttributes;\n    this.getKeyInfoContent = getKeyInfoContent ?? this.getKeyInfoContent;\n    this.getCertFromKeyInfo = getCertFromKeyInfo ?? SignedXml.noop;\n    this.CanonicalizationAlgorithms;\n    this.HashAlgorithms;\n    this.SignatureAlgorithms;\n  }\n\n  /**\n   * Due to key-confusion issues, it's risky to have both hmac\n   * and digital signature algorithms enabled at the same time.\n   * This enables HMAC and disables other signing algorithms.\n   */\n  enableHMAC(): void {\n    this.SignatureAlgorithms = {\n      \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\": signatureAlgorithms.HmacSha1,\n    };\n    this.getKeyInfoContent = SignedXml.noop;\n  }\n\n  /**\n   * Builds the contents of a KeyInfo element as an XML string.\n   *\n   * For example, if the value of the prefix argument is 'foo', then\n   * the resultant XML string will be \"<foo:X509Data></foo:X509Data>\"\n   *\n   * @return an XML string representation of the contents of a KeyInfo element, or `null` if no `KeyInfo` element should be included\n   */\n  static getKeyInfoContent({ publicCert, prefix }: GetKeyInfoContentArgs): string | null {\n    if (publicCert == null) {\n      return null;\n    }\n\n    prefix = prefix ? `${prefix}:` : \"\";\n\n    let x509Certs = \"\";\n    if (Buffer.isBuffer(publicCert)) {\n      publicCert = publicCert.toString(\"latin1\");\n    }\n\n    let publicCertMatches: string[] = [];\n    if (typeof publicCert === \"string\") {\n      publicCertMatches = publicCert.match(utils.EXTRACT_X509_CERTS) || [];\n    }\n\n    if (publicCertMatches.length > 0) {\n      x509Certs = publicCertMatches\n        .map(\n          (c) =>\n            `<${prefix}X509Certificate>${utils\n              .pemToDer(c)\n              .toString(\"base64\")}</${prefix}X509Certificate>`,\n        )\n        .join(\"\");\n    }\n\n    return `<${prefix}X509Data>${x509Certs}</${prefix}X509Data>`;\n  }\n\n  /**\n   * Returns the value of the signing certificate based on the contents of the\n   * specified KeyInfo.\n   *\n   * @param keyInfo KeyInfo element (@see https://www.w3.org/TR/2008/REC-xmldsig-core-20080610/#sec-X509Data)\n   * @return the signing certificate as a string in PEM format\n   */\n  static getCertFromKeyInfo(keyInfo?: Node | null): string | null {\n    if (keyInfo != null) {\n      const cert = xpath.select1(\".//*[local-name(.)='X509Certificate']\", keyInfo);\n      if (isDomNode.isNodeLike(cert)) {\n        return utils.derToPem(cert.textContent ?? \"\", \"CERTIFICATE\");\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Validates the signature of the provided XML document synchronously using the configured key info provider.\n   *\n   * @param xml The XML document containing the signature to be validated.\n   * @returns `true` if the signature is valid\n   * @throws Error if no key info resolver is provided.\n   */\n  checkSignature(xml: string): boolean;\n  /**\n   * Validates the signature of the provided XML document synchronously using the configured key info provider.\n   *\n   * @param xml The XML document containing the signature to be validated.\n   * @param callback Callback function to handle the validation result asynchronously.\n   * @throws Error if the last parameter is provided and is not a function, or if no key info resolver is provided.\n   */\n  checkSignature(xml: string, callback: (error: Error | null, isValid?: boolean) => void): void;\n  checkSignature(\n    xml: string,\n    callback?: (error: Error | null, isValid?: boolean) => void,\n  ): unknown {\n    if (callback != null && typeof callback !== \"function\") {\n      throw new Error(\"Last parameter must be a callback function\");\n    }\n\n    this.signedXml = xml;\n\n    const doc = new xmldom.DOMParser().parseFromString(xml);\n\n    // Reset the references as only references from our re-parsed signedInfo node can be trusted\n    this.references = [];\n\n    const unverifiedSignedInfoCanon = this.getCanonSignedInfoXml(doc);\n    if (!unverifiedSignedInfoCanon) {\n      if (callback) {\n        callback(new Error(\"Canonical signed info cannot be empty\"), false);\n        return;\n      }\n\n      throw new Error(\"Canonical signed info cannot be empty\");\n    }\n\n    // unsigned, verify later to keep with consistent callback behavior\n    const parsedUnverifiedSignedInfo = new xmldom.DOMParser().parseFromString(\n      unverifiedSignedInfoCanon,\n      \"text/xml\",\n    );\n\n    const unverifiedSignedInfoDoc = parsedUnverifiedSignedInfo.documentElement;\n    if (!unverifiedSignedInfoDoc) {\n      if (callback) {\n        callback(new Error(\"Could not parse unverifiedSignedInfoCanon into a document\"), false);\n        return;\n      }\n\n      throw new Error(\"Could not parse unverifiedSignedInfoCanon into a document\");\n    }\n\n    const references = utils.findChildren(unverifiedSignedInfoDoc, \"Reference\");\n    if (!utils.isArrayHasLength(references)) {\n      if (callback) {\n        callback(new Error(\"could not find any Reference elements\"), false);\n        return;\n      }\n\n      throw new Error(\"could not find any Reference elements\");\n    }\n\n    // TODO: In a future release we'd like to load the Signature and its References at the same time,\n    // however, in the `.loadSignature()` method we don't have the entire document,\n    // which we need to to keep the inclusive namespaces\n    for (const reference of references) {\n      this.loadReference(reference);\n    }\n\n    /* eslint-disable-next-line deprecation/deprecation */\n    if (!this.getReferences().every((ref) => this.validateReference(ref, doc))) {\n      /* Trustworthiness can only be determined if SignedInfo's (which holds References' DigestValue(s)\n         which were validated at this stage) signature is valid. Execution does not proceed to validate\n         signature phase thus each References' DigestValue must be considered to be untrusted (attacker\n         might have injected any data with new new references and/or recalculated new DigestValue for\n         altered Reference(s)). Returning any content via `signedReferences` would give false sense of\n         trustworthiness if/when SignedInfo's (which holds references' DigestValues) signature is not\n         valid(ated). Put simply: if one fails, they are all not trustworthy.\n      */\n      this.signedReferences = [];\n      this.references.forEach((ref) => {\n        ref.signedReference = undefined;\n      });\n      // TODO: add this breaking change here later on for even more security: `this.references = [];`\n\n      if (callback) {\n        callback(new Error(\"Could not validate all references\"), false);\n        return;\n      }\n\n      // We return false because some references validated, but not all\n      // We should actually be throwing an error here, but that would be a breaking change\n      // See https://www.w3.org/TR/xmldsig-core/#sec-CoreValidation\n      return false;\n    }\n\n    // (Stage B authentication step, show that the `signedInfoCanon` is signed)\n\n    // First find the key & signature algorithm, these should match\n    // Stage B: Take the signature algorithm and key and verify the `SignatureValue` against the canonicalized `SignedInfo`\n    const signer = this.findSignatureAlgorithm(this.signatureAlgorithm);\n    const key = this.getCertFromKeyInfo(this.keyInfo) || this.publicCert || this.privateKey;\n    if (key == null) {\n      throw new Error(\"KeyInfo or publicCert or privateKey is required to validate signature\");\n    }\n\n    // Check the signature verification to know whether to reset signature value or not.\n    const sigRes = signer.verifySignature(unverifiedSignedInfoCanon, key, this.signatureValue);\n    if (sigRes === true) {\n      if (callback) {\n        callback(null, true);\n      } else {\n        return true;\n      }\n    } else {\n      // Ideally, we would start by verifying the `signedInfoCanon` first,\n      // but that may cause some breaking changes, so we'll handle that in v7.x.\n      // If we were validating `signedInfoCanon` first, we wouldn't have to reset this array.\n      this.signedReferences = [];\n      this.references.forEach((ref) => {\n        ref.signedReference = undefined;\n      });\n      // TODO: add this breaking change here later on for even more security: `this.references = [];`\n\n      if (callback) {\n        callback(\n          new Error(`invalid signature: the signature value ${this.signatureValue} is incorrect`),\n        );\n        return; // return early\n      } else {\n        throw new Error(\n          `invalid signature: the signature value ${this.signatureValue} is incorrect`,\n        );\n      }\n    }\n  }\n\n  private getCanonSignedInfoXml(doc: Document) {\n    if (this.signatureNode == null) {\n      throw new Error(\"No signature found.\");\n    }\n    if (typeof this.canonicalizationAlgorithm !== \"string\") {\n      throw new Error(\"Missing canonicalizationAlgorithm when trying to get signed info for XML\");\n    }\n\n    const signedInfo = utils.findChildren(this.signatureNode, \"SignedInfo\");\n    if (signedInfo.length === 0) {\n      throw new Error(\"could not find SignedInfo element in the message\");\n    }\n    if (signedInfo.length > 1) {\n      throw new Error(\n        \"could not get canonicalized signed info for a signature that contains multiple SignedInfo nodes\",\n      );\n    }\n\n    if (\n      this.canonicalizationAlgorithm === \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" ||\n      this.canonicalizationAlgorithm ===\n        \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"\n    ) {\n      if (!doc || typeof doc !== \"object\") {\n        throw new Error(\n          \"When canonicalization method is non-exclusive, whole xml dom must be provided as an argument\",\n        );\n      }\n    }\n\n    /**\n     * Search for ancestor namespaces before canonicalization.\n     */\n    const ancestorNamespaces = utils.findAncestorNs(doc, \"//*[local-name()='SignedInfo']\");\n\n    const c14nOptions = {\n      ancestorNamespaces: ancestorNamespaces,\n    };\n\n    return this.getCanonXml([this.canonicalizationAlgorithm], signedInfo[0], c14nOptions);\n  }\n\n  private getCanonReferenceXml(doc: Document, ref: Reference, node: Node) {\n    /**\n     * Search for ancestor namespaces before canonicalization.\n     */\n    if (Array.isArray(ref.transforms)) {\n      ref.ancestorNamespaces = utils.findAncestorNs(doc, ref.xpath, this.namespaceResolver);\n    }\n\n    const c14nOptions = {\n      inclusiveNamespacesPrefixList: ref.inclusiveNamespacesPrefixList,\n      ancestorNamespaces: ref.ancestorNamespaces,\n    };\n\n    return this.getCanonXml(ref.transforms, node, c14nOptions);\n  }\n\n  private calculateSignatureValue(doc: Document, callback?: ErrorFirstCallback<string>) {\n    const signedInfoCanon = this.getCanonSignedInfoXml(doc);\n    const signer = this.findSignatureAlgorithm(this.signatureAlgorithm);\n    if (this.privateKey == null) {\n      throw new Error(\"Private key is required to compute signature\");\n    }\n    if (typeof callback === \"function\") {\n      signer.getSignature(signedInfoCanon, this.privateKey, callback);\n    } else {\n      this.signatureValue = signer.getSignature(signedInfoCanon, this.privateKey);\n    }\n  }\n\n  private findSignatureAlgorithm(name?: SignatureAlgorithmType) {\n    if (name == null) {\n      throw new Error(\"signatureAlgorithm is required\");\n    }\n    const algo = this.SignatureAlgorithms[name];\n    if (algo) {\n      return new algo();\n    } else {\n      throw new Error(`signature algorithm '${name}' is not supported`);\n    }\n  }\n\n  private findCanonicalizationAlgorithm(name: CanonicalizationOrTransformAlgorithmType) {\n    if (name != null) {\n      const algo = this.CanonicalizationAlgorithms[name];\n      if (algo) {\n        return new algo();\n      }\n    }\n\n    throw new Error(`canonicalization algorithm '${name}' is not supported`);\n  }\n\n  private findHashAlgorithm(name: HashAlgorithmType) {\n    const algo = this.HashAlgorithms[name];\n    if (algo) {\n      return new algo();\n    } else {\n      throw new Error(`hash algorithm '${name}' is not supported`);\n    }\n  }\n\n  validateElementAgainstReferences(elemOrXpath: Element | string, doc: Document): Reference {\n    let elem: Element;\n    if (typeof elemOrXpath === \"string\") {\n      const firstElem = xpath.select1(elemOrXpath, doc);\n      isDomNode.assertIsElementNode(firstElem);\n      elem = firstElem;\n    } else {\n      elem = elemOrXpath;\n    }\n\n    /* eslint-disable-next-line deprecation/deprecation */\n    for (const ref of this.getReferences()) {\n      const uri = ref.uri?.[0] === \"#\" ? ref.uri.substring(1) : ref.uri;\n\n      for (const attr of this.idAttributes) {\n        const elemId = elem.getAttribute(attr);\n        if (uri === elemId) {\n          ref.xpath = `//*[@*[local-name(.)='${attr}']='${uri}']`;\n          break; // found the correct element, no need to check further\n        }\n      }\n\n      const canonXml = this.getCanonReferenceXml(doc, ref, elem);\n      const hash = this.findHashAlgorithm(ref.digestAlgorithm);\n      const digest = hash.getHash(canonXml);\n\n      if (utils.validateDigestValue(digest, ref.digestValue)) {\n        return ref;\n      }\n    }\n\n    throw new Error(\"No references passed validation\");\n  }\n\n  private validateReference(ref: Reference, doc: Document) {\n    const uri = ref.uri?.[0] === \"#\" ? ref.uri.substring(1) : ref.uri;\n    let elem: xpath.SelectSingleReturnType = null;\n\n    if (uri === \"\") {\n      elem = xpath.select1(\"//*\", doc);\n    } else if (uri?.indexOf(\"'\") !== -1) {\n      // xpath injection\n      throw new Error(\"Cannot validate a uri with quotes inside it\");\n    } else {\n      let num_elements_for_id = 0;\n      for (const attr of this.idAttributes) {\n        const tmp_elemXpath = `//*[@*[local-name(.)='${attr}']='${uri}']`;\n        const tmp_elem = xpath.select(tmp_elemXpath, doc);\n        if (utils.isArrayHasLength(tmp_elem)) {\n          num_elements_for_id += tmp_elem.length;\n\n          if (num_elements_for_id > 1) {\n            throw new Error(\n              \"Cannot validate a document which contains multiple elements with the \" +\n                \"same value for the ID / Id / Id attributes, in order to prevent \" +\n                \"signature wrapping attack.\",\n            );\n          }\n\n          elem = tmp_elem[0];\n          ref.xpath = tmp_elemXpath;\n        }\n      }\n    }\n\n    ref.getValidatedNode = deprecate((xpathSelector?: string) => {\n      xpathSelector = xpathSelector || ref.xpath;\n      if (typeof xpathSelector !== \"string\" || ref.validationError != null) {\n        return null;\n      }\n      const selectedValue = xpath.select1(xpathSelector, doc);\n      return isDomNode.isNodeLike(selectedValue) ? selectedValue : null;\n    }, \"`ref.getValidatedNode()` is deprecated and insecure. Use `ref.signedReference` or `this.getSignedReferences()` instead.\");\n\n    if (!isDomNode.isNodeLike(elem)) {\n      const validationError = new Error(\n        `invalid signature: the signature references an element with uri ${ref.uri} but could not find such element in the xml`,\n      );\n      ref.validationError = validationError;\n      return false;\n    }\n\n    const canonXml = this.getCanonReferenceXml(doc, ref, elem);\n    const hash = this.findHashAlgorithm(ref.digestAlgorithm);\n    const digest = hash.getHash(canonXml);\n\n    if (!utils.validateDigestValue(digest, ref.digestValue)) {\n      const validationError = new Error(\n        `invalid signature: for uri ${ref.uri} calculated digest is ${digest} but the xml to validate supplies digest ${ref.digestValue}`,\n      );\n      ref.validationError = validationError;\n\n      return false;\n    }\n    // This step can only be done after we have verified the `signedInfo`.\n    // We verified that they have same hash,\n    // thus the `canonXml` and _only_ the `canonXml` can be trusted.\n    // Append this to `signedReferences`.\n    this.signedReferences.push(canonXml);\n    ref.signedReference = canonXml;\n\n    return true;\n  }\n\n  findSignatures(doc: Node): Node[] {\n    const nodes = xpath.select(\n      \"//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",\n      doc,\n    );\n\n    return isDomNode.isArrayOfNodes(nodes) ? nodes : [];\n  }\n\n  /**\n   * Loads the signature information from the provided XML node or string.\n   *\n   * @param signatureNode The XML node or string representing the signature.\n   */\n  loadSignature(signatureNode: Node | string): void {\n    if (typeof signatureNode === \"string\") {\n      this.signatureNode = signatureNode = new xmldom.DOMParser().parseFromString(signatureNode);\n    } else {\n      this.signatureNode = signatureNode;\n    }\n\n    this.signatureXml = signatureNode.toString();\n\n    const node = xpath.select1(\n      \".//*[local-name(.)='CanonicalizationMethod']/@Algorithm\",\n      signatureNode,\n    );\n    if (!isDomNode.isNodeLike(node)) {\n      throw new Error(\"could not find CanonicalizationMethod/@Algorithm element\");\n    }\n\n    if (isDomNode.isAttributeNode(node)) {\n      this.canonicalizationAlgorithm = node.value as CanonicalizationAlgorithmType;\n    }\n\n    const signatureAlgorithm = xpath.select1(\n      \".//*[local-name(.)='SignatureMethod']/@Algorithm\",\n      signatureNode,\n    );\n\n    if (isDomNode.isAttributeNode(signatureAlgorithm)) {\n      this.signatureAlgorithm = signatureAlgorithm.value as SignatureAlgorithmType;\n    }\n\n    const signedInfoNodes = utils.findChildren(this.signatureNode, \"SignedInfo\");\n    if (!utils.isArrayHasLength(signedInfoNodes)) {\n      throw new Error(\"no signed info node found\");\n    }\n    if (signedInfoNodes.length > 1) {\n      throw new Error(\"could not load signature that contains multiple SignedInfo nodes\");\n    }\n\n    // Try to operate on the c14n version of `signedInfo`. This forces the initial `getReferences()`\n    // API call to always return references that are loaded under the canonical `SignedInfo`\n    // in the case that the client access the `.references` **before** signature verification.\n\n    // Ensure canonicalization algorithm is exclusive, otherwise we'd need the entire document\n    let canonicalizationAlgorithmForSignedInfo = this.canonicalizationAlgorithm;\n    if (\n      !canonicalizationAlgorithmForSignedInfo ||\n      canonicalizationAlgorithmForSignedInfo ===\n        \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" ||\n      canonicalizationAlgorithmForSignedInfo ===\n        \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"\n    ) {\n      canonicalizationAlgorithmForSignedInfo = \"http://www.w3.org/2001/10/xml-exc-c14n#\";\n    }\n\n    const temporaryCanonSignedInfo = this.getCanonXml(\n      [canonicalizationAlgorithmForSignedInfo],\n      signedInfoNodes[0],\n    );\n    const temporaryCanonSignedInfoXml = new xmldom.DOMParser().parseFromString(\n      temporaryCanonSignedInfo,\n      \"text/xml\",\n    );\n    const signedInfoDoc = temporaryCanonSignedInfoXml.documentElement;\n\n    this.references = [];\n    const references = utils.findChildren(signedInfoDoc, \"Reference\");\n\n    if (!utils.isArrayHasLength(references)) {\n      throw new Error(\"could not find any Reference elements\");\n    }\n\n    for (const reference of references) {\n      this.loadReference(reference);\n    }\n\n    const signatureValue = xpath.select1(\n      \".//*[local-name(.)='SignatureValue']/text()\",\n      signatureNode,\n    );\n\n    if (isDomNode.isTextNode(signatureValue)) {\n      this.signatureValue = signatureValue.data.replace(/\\r?\\n/g, \"\");\n    }\n\n    const keyInfo = xpath.select1(\".//*[local-name(.)='KeyInfo']\", signatureNode);\n\n    if (isDomNode.isNodeLike(keyInfo)) {\n      this.keyInfo = keyInfo;\n    }\n  }\n\n  /**\n   * Load the reference xml node to a model\n   *\n   */\n  private loadReference(refNode: Node) {\n    let nodes = utils.findChildren(refNode, \"DigestMethod\");\n    if (nodes.length === 0) {\n      throw new Error(`could not find DigestMethod in reference ${refNode.toString()}`);\n    }\n    const digestAlgoNode = nodes[0];\n\n    const attr = utils.findAttr(digestAlgoNode, \"Algorithm\");\n    if (!attr) {\n      throw new Error(`could not find Algorithm attribute in node ${digestAlgoNode.toString()}`);\n    }\n    const digestAlgo = attr.value;\n\n    nodes = utils.findChildren(refNode, \"DigestValue\");\n    if (nodes.length === 0) {\n      throw new Error(`could not find DigestValue node in reference ${refNode.toString()}`);\n    }\n\n    if (nodes.length > 1) {\n      throw new Error(\n        `could not load reference for a node that contains multiple DigestValue nodes: ${refNode.toString()}`,\n      );\n    }\n    const digestValue = nodes[0].textContent;\n    if (!digestValue) {\n      throw new Error(`could not find the value of DigestValue in ${refNode.toString()}`);\n    }\n\n    const transforms: string[] = [];\n    let inclusiveNamespacesPrefixList: string[] = [];\n    nodes = utils.findChildren(refNode, \"Transforms\");\n    if (nodes.length !== 0) {\n      const transformsNode = nodes[0];\n      const transformsAll = utils.findChildren(transformsNode, \"Transform\");\n      for (const transform of transformsAll) {\n        const transformAttr = utils.findAttr(transform, \"Algorithm\");\n\n        if (transformAttr) {\n          transforms.push(transformAttr.value);\n        }\n      }\n\n      // This is a little strange, we are looking for children of the last child of `transformsNode`\n      const inclusiveNamespaces = utils.findChildren(\n        transformsAll[transformsAll.length - 1],\n        \"InclusiveNamespaces\",\n      );\n      if (utils.isArrayHasLength(inclusiveNamespaces)) {\n        // Should really only be one prefix list, but maybe there's some circumstances where more than one to let's handle it\n        inclusiveNamespacesPrefixList = inclusiveNamespaces\n          .flatMap((namespace) => (namespace.getAttribute(\"PrefixList\") ?? \"\").split(\" \"))\n          .filter((value) => value.length > 0);\n      }\n    }\n\n    if (utils.isArrayHasLength(this.implicitTransforms)) {\n      this.implicitTransforms.forEach(function (t) {\n        transforms.push(t);\n      });\n    }\n\n    /**\n     * DigestMethods take an octet stream rather than a node set. If the output of the last transform is a node set, we\n     * need to canonicalize the node set to an octet stream using non-exclusive canonicalization. If there are no\n     * transforms, we need to canonicalize because URI dereferencing for a same-document reference will return a node-set.\n     * @see:\n     * https://www.w3.org/TR/xmldsig-core1/#sec-DigestMethod\n     * https://www.w3.org/TR/xmldsig-core1/#sec-ReferenceProcessingModel\n     * https://www.w3.org/TR/xmldsig-core1/#sec-Same-Document\n     */\n    if (\n      transforms.length === 0 ||\n      transforms[transforms.length - 1] === \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"\n    ) {\n      transforms.push(\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\");\n    }\n    const refUri = isDomNode.isElementNode(refNode)\n      ? refNode.getAttribute(\"URI\") || undefined\n      : undefined;\n\n    this.addReference({\n      transforms,\n      digestAlgorithm: digestAlgo,\n      uri: refUri,\n      digestValue,\n      inclusiveNamespacesPrefixList,\n      isEmptyUri: false,\n    });\n  }\n\n  /**\n   * Adds a reference to the signature.\n   *\n   * @param xpath The XPath expression to select the XML nodes to be referenced.\n   * @param transforms An array of transform algorithms to be applied to the selected nodes.\n   * @param digestAlgorithm The digest algorithm to use for computing the digest value.\n   * @param uri The URI identifier for the reference. If empty, an empty URI will be used.\n   * @param digestValue The expected digest value for the reference.\n   * @param inclusiveNamespacesPrefixList The prefix list for inclusive namespace canonicalization.\n   * @param isEmptyUri Indicates whether the URI is empty. Defaults to `false`.\n   */\n  addReference({\n    xpath,\n    transforms,\n    digestAlgorithm,\n    uri = \"\",\n    digestValue,\n    inclusiveNamespacesPrefixList = [],\n    isEmptyUri = false,\n  }: Partial<Reference> & Pick<Reference, \"xpath\">): void {\n    if (digestAlgorithm == null) {\n      throw new Error(\"digestAlgorithm is required\");\n    }\n\n    if (!utils.isArrayHasLength(transforms)) {\n      throw new Error(\"transforms must contain at least one transform algorithm\");\n    }\n\n    this.references.push({\n      xpath,\n      transforms,\n      digestAlgorithm,\n      uri,\n      digestValue,\n      inclusiveNamespacesPrefixList,\n      isEmptyUri,\n      getValidatedNode: () => {\n        throw new Error(\n          \"Reference has not been validated yet; Did you call `sig.checkSignature()`?\",\n        );\n      },\n    });\n  }\n\n  /**\n   * Returns the list of references.\n   */\n  getReferences() {\n    // TODO: Refactor once `getValidatedNode` is removed\n    /* Once we completely remove the deprecated `getValidatedNode()` method,\n    we can change this to return a clone to prevent accidental mutations,\n    e.g.:\n    return [...this.references];\n    */\n\n    return this.references;\n  }\n\n  getSignedReferences() {\n    return [...this.signedReferences];\n  }\n\n  /**\n   * Compute the signature of the given XML (using the already defined settings).\n   *\n   * @param xml The XML to compute the signature for.\n   * @param callback A callback function to handle the signature computation asynchronously.\n   * @returns void\n   * @throws TypeError If the xml can not be parsed.\n   */\n  computeSignature(xml: string): void;\n\n  /**\n   * Compute the signature of the given XML (using the already defined settings).\n   *\n   * @param xml The XML to compute the signature for.\n   * @param callback A callback function to handle the signature computation asynchronously.\n   * @returns void\n   * @throws TypeError If the xml can not be parsed.\n   */\n  computeSignature(xml: string, callback: ErrorFirstCallback<SignedXml>): void;\n\n  /**\n   * Compute the signature of the given XML (using the already defined settings).\n   *\n   * @param xml The XML to compute the signature for.\n   * @param opts An object containing options for the signature computation.\n   * @returns If no callback is provided, returns `this` (the instance of SignedXml).\n   * @throws TypeError If the xml can not be parsed, or Error if there were invalid options passed.\n   */\n  computeSignature(xml: string, options: ComputeSignatureOptions): void;\n\n  /**\n   * Compute the signature of the given XML (using the already defined settings).\n   *\n   * @param xml The XML to compute the signature for.\n   * @param opts An object containing options for the signature computation.\n   * @param callback A callback function to handle the signature computation asynchronously.\n   * @returns void\n   * @throws TypeError If the xml can not be parsed, or Error if there were invalid options passed.\n   */\n  computeSignature(\n    xml: string,\n    options: ComputeSignatureOptions,\n    callback: ErrorFirstCallback<SignedXml>,\n  ): void;\n\n  computeSignature(\n    xml: string,\n    options?: ComputeSignatureOptions | ErrorFirstCallback<SignedXml>,\n    callbackParam?: ErrorFirstCallback<SignedXml>,\n  ): void {\n    let callback: ErrorFirstCallback<SignedXml>;\n    if (typeof options === \"function\" && callbackParam == null) {\n      callback = options as ErrorFirstCallback<SignedXml>;\n      options = {} as ComputeSignatureOptions;\n    } else {\n      callback = callbackParam as ErrorFirstCallback<SignedXml>;\n      options = (options ?? {}) as ComputeSignatureOptions;\n    }\n\n    const doc = new xmldom.DOMParser().parseFromString(xml);\n    let xmlNsAttr = \"xmlns\";\n    const signatureAttrs: string[] = [];\n    let currentPrefix: string;\n\n    const validActions = [\"append\", \"prepend\", \"before\", \"after\"];\n\n    const prefix = options.prefix;\n    const attrs = options.attrs || {};\n    const location = options.location || {};\n    const existingPrefixes = options.existingPrefixes || {};\n\n    this.namespaceResolver = {\n      lookupNamespaceURI: function (prefix) {\n        return prefix ? existingPrefixes[prefix] : null;\n      },\n    };\n\n    // defaults to the root node\n    location.reference = location.reference || \"/*\";\n    // defaults to append action\n    location.action = location.action || \"append\";\n\n    if (validActions.indexOf(location.action) === -1) {\n      const err = new Error(\n        `location.action option has an invalid action: ${\n          location.action\n        }, must be any of the following values: ${validActions.join(\", \")}`,\n      );\n      if (!callback) {\n        throw err;\n      } else {\n        callback(err);\n        return;\n      }\n    }\n\n    // automatic insertion of `:`\n    if (prefix) {\n      xmlNsAttr += `:${prefix}`;\n      currentPrefix = `${prefix}:`;\n    } else {\n      currentPrefix = \"\";\n    }\n\n    Object.keys(attrs).forEach(function (name) {\n      if (name !== \"xmlns\" && name !== xmlNsAttr) {\n        signatureAttrs.push(`${name}=\"${attrs[name]}\"`);\n      }\n    });\n\n    // add the xml namespace attribute\n    signatureAttrs.push(`${xmlNsAttr}=\"http://www.w3.org/2000/09/xmldsig#\"`);\n\n    let signatureXml = `<${currentPrefix}Signature ${signatureAttrs.join(\" \")}>`;\n\n    signatureXml += this.createSignedInfo(doc, prefix);\n    signatureXml += this.getKeyInfo(prefix);\n    signatureXml += `</${currentPrefix}Signature>`;\n\n    this.originalXmlWithIds = doc.toString();\n\n    let existingPrefixesString = \"\";\n    Object.keys(existingPrefixes).forEach(function (key) {\n      existingPrefixesString += `xmlns:${key}=\"${existingPrefixes[key]}\" `;\n    });\n\n    // A trick to remove the namespaces that already exist in the xml\n    // This only works if the prefix and namespace match with those in the xml\n    const dummySignatureWrapper = `<Dummy ${existingPrefixesString}>${signatureXml}</Dummy>`;\n    const nodeXml = new xmldom.DOMParser().parseFromString(dummySignatureWrapper);\n\n    // Because we are using a dummy wrapper hack described above, we know there will be a `firstChild`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const signatureDoc = nodeXml.documentElement.firstChild!;\n\n    const referenceNode = xpath.select1(location.reference, doc);\n\n    if (!isDomNode.isNodeLike(referenceNode)) {\n      const err2 = new Error(\n        `the following xpath cannot be used because it was not found: ${location.reference}`,\n      );\n      if (!callback) {\n        throw err2;\n      } else {\n        callback(err2);\n        return;\n      }\n    }\n\n    if (location.action === \"append\") {\n      referenceNode.appendChild(signatureDoc);\n    } else if (location.action === \"prepend\") {\n      referenceNode.insertBefore(signatureDoc, referenceNode.firstChild);\n    } else if (location.action === \"before\") {\n      if (referenceNode.parentNode == null) {\n        throw new Error(\n          \"`location.reference` refers to the root node (by default), so we can't insert `before`\",\n        );\n      }\n      referenceNode.parentNode.insertBefore(signatureDoc, referenceNode);\n    } else if (location.action === \"after\") {\n      if (referenceNode.parentNode == null) {\n        throw new Error(\n          \"`location.reference` refers to the root node (by default), so we can't insert `after`\",\n        );\n      }\n      referenceNode.parentNode.insertBefore(signatureDoc, referenceNode.nextSibling);\n    }\n\n    this.signatureNode = signatureDoc;\n    const signedInfoNodes = utils.findChildren(this.signatureNode, \"SignedInfo\");\n    if (signedInfoNodes.length === 0) {\n      const err3 = new Error(\"could not find SignedInfo element in the message\");\n      if (!callback) {\n        throw err3;\n      } else {\n        callback(err3);\n        return;\n      }\n    }\n    const signedInfoNode = signedInfoNodes[0];\n\n    if (typeof callback === \"function\") {\n      // Asynchronous flow\n      this.calculateSignatureValue(doc, (err, signature) => {\n        if (err) {\n          callback(err);\n        } else {\n          this.signatureValue = signature || \"\";\n          signatureDoc.insertBefore(this.createSignature(prefix), signedInfoNode.nextSibling);\n          this.signatureXml = signatureDoc.toString();\n          this.signedXml = doc.toString();\n          callback(null, this);\n        }\n      });\n    } else {\n      // Synchronous flow\n      this.calculateSignatureValue(doc);\n      signatureDoc.insertBefore(this.createSignature(prefix), signedInfoNode.nextSibling);\n      this.signatureXml = signatureDoc.toString();\n      this.signedXml = doc.toString();\n    }\n  }\n\n  private getKeyInfo(prefix) {\n    const currentPrefix = prefix ? `${prefix}:` : \"\";\n\n    let keyInfoAttrs = \"\";\n    if (this.keyInfoAttributes) {\n      Object.keys(this.keyInfoAttributes).forEach((name) => {\n        keyInfoAttrs += ` ${name}=\"${this.keyInfoAttributes[name]}\"`;\n      });\n    }\n\n    const keyInfoContent = this.getKeyInfoContent({ publicCert: this.publicCert, prefix });\n    if (keyInfoAttrs || keyInfoContent) {\n      return `<${currentPrefix}KeyInfo${keyInfoAttrs}>${keyInfoContent}</${currentPrefix}KeyInfo>`;\n    }\n\n    return \"\";\n  }\n\n  /**\n   * Generate the Reference nodes (as part of the signature process)\n   *\n   */\n  private createReferences(doc, prefix) {\n    let res = \"\";\n\n    prefix = prefix || \"\";\n    prefix = prefix ? `${prefix}:` : prefix;\n\n    /* eslint-disable-next-line deprecation/deprecation */\n    for (const ref of this.getReferences()) {\n      const nodes = xpath.selectWithResolver(ref.xpath ?? \"\", doc, this.namespaceResolver);\n\n      if (!utils.isArrayHasLength(nodes)) {\n        throw new Error(\n          `the following xpath cannot be signed because it was not found: ${ref.xpath}`,\n        );\n      }\n\n      for (const node of nodes) {\n        if (ref.isEmptyUri) {\n          res += `<${prefix}Reference URI=\"\">`;\n        } else {\n          const id = this.ensureHasId(node);\n          ref.uri = id;\n          res += `<${prefix}Reference URI=\"#${id}\">`;\n        }\n        res += `<${prefix}Transforms>`;\n        for (const trans of ref.transforms || []) {\n          const transform = this.findCanonicalizationAlgorithm(trans);\n          res += `<${prefix}Transform Algorithm=\"${transform.getAlgorithmName()}\"`;\n          if (utils.isArrayHasLength(ref.inclusiveNamespacesPrefixList)) {\n            res += \">\";\n            res += `<InclusiveNamespaces PrefixList=\"${ref.inclusiveNamespacesPrefixList.join(\n              \" \",\n            )}\" xmlns=\"${transform.getAlgorithmName()}\"/>`;\n            res += `</${prefix}Transform>`;\n          } else {\n            res += \" />\";\n          }\n        }\n\n        const canonXml = this.getCanonReferenceXml(doc, ref, node);\n\n        const digestAlgorithm = this.findHashAlgorithm(ref.digestAlgorithm);\n        res +=\n          `</${prefix}Transforms>` +\n          `<${prefix}DigestMethod Algorithm=\"${digestAlgorithm.getAlgorithmName()}\" />` +\n          `<${prefix}DigestValue>${digestAlgorithm.getHash(canonXml)}</${prefix}DigestValue>` +\n          `</${prefix}Reference>`;\n      }\n    }\n\n    return res;\n  }\n\n  getCanonXml(\n    transforms: Reference[\"transforms\"],\n    node: Node,\n    options: CanonicalizationOrTransformationAlgorithmProcessOptions = {},\n  ) {\n    options.defaultNsForPrefix = options.defaultNsForPrefix ?? SignedXml.defaultNsForPrefix;\n    options.signatureNode = this.signatureNode;\n\n    const canonXml = node.cloneNode(true); // Deep clone\n    let transformedXml: Node | string = canonXml;\n\n    transforms.forEach((transformName) => {\n      if (isDomNode.isNodeLike(transformedXml)) {\n        // If, after processing, `transformedNode` is a string, we can't do anymore transforms on it\n        const transform = this.findCanonicalizationAlgorithm(transformName);\n        transformedXml = transform.process(transformedXml, options);\n      }\n      //TODO: currently transform.process may return either Node or String value (enveloped transformation returns Node, exclusive-canonicalization returns String).\n      //This either needs to be more explicit in the API, or all should return the same.\n      //exclusive-canonicalization returns String since it builds the Xml by hand. If it had used xmldom it would incorrectly minimize empty tags\n      //to <x/> instead of <x></x> and also incorrectly handle some delicate line break issues.\n      //enveloped transformation returns Node since if it would return String consider this case:\n      //<x xmlns:p='ns'><p:y/></x>\n      //if only y is the node to sign then a string would be <p:y/> without the definition of the p namespace. probably xmldom toString() should have added it.\n    });\n\n    return transformedXml.toString();\n  }\n\n  /**\n   * Ensure an element has Id attribute. If not create it with unique value.\n   * Work with both normal and wssecurity Id flavour\n   */\n  private ensureHasId(node) {\n    let attr;\n\n    if (this.idMode === \"wssecurity\") {\n      attr = utils.findAttr(\n        node,\n        \"Id\",\n        \"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\",\n      );\n    } else {\n      this.idAttributes.some((idAttribute) => {\n        attr = utils.findAttr(node, idAttribute);\n        return !!attr; // This will break the loop as soon as a truthy attr is found.\n      });\n    }\n\n    if (attr) {\n      return attr.value;\n    }\n\n    //add the attribute\n    const id = `_${this.id++}`;\n\n    if (this.idMode === \"wssecurity\") {\n      node.setAttributeNS(\n        \"http://www.w3.org/2000/xmlns/\",\n        \"xmlns:wsu\",\n        \"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\",\n      );\n      node.setAttributeNS(\n        \"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\",\n        \"wsu:Id\",\n        id,\n      );\n    } else {\n      node.setAttribute(\"Id\", id);\n    }\n\n    return id;\n  }\n\n  /**\n   * Create the SignedInfo element\n   *\n   */\n  private createSignedInfo(doc, prefix) {\n    if (typeof this.canonicalizationAlgorithm !== \"string\") {\n      throw new Error(\n        \"Missing canonicalizationAlgorithm when trying to create signed info for XML\",\n      );\n    }\n    const transform = this.findCanonicalizationAlgorithm(this.canonicalizationAlgorithm);\n    const algo = this.findSignatureAlgorithm(this.signatureAlgorithm);\n    let currentPrefix;\n\n    currentPrefix = prefix || \"\";\n    currentPrefix = currentPrefix ? `${currentPrefix}:` : currentPrefix;\n\n    let res = `<${currentPrefix}SignedInfo>`;\n    res += `<${currentPrefix}CanonicalizationMethod Algorithm=\"${transform.getAlgorithmName()}\"`;\n    if (utils.isArrayHasLength(this.inclusiveNamespacesPrefixList)) {\n      res += \">\";\n      res += `<InclusiveNamespaces PrefixList=\"${this.inclusiveNamespacesPrefixList.join(\n        \" \",\n      )}\" xmlns=\"${transform.getAlgorithmName()}\"/>`;\n      res += `</${currentPrefix}CanonicalizationMethod>`;\n    } else {\n      res += \" />\";\n    }\n    res += `<${currentPrefix}SignatureMethod Algorithm=\"${algo.getAlgorithmName()}\" />`;\n\n    res += this.createReferences(doc, prefix);\n    res += `</${currentPrefix}SignedInfo>`;\n    return res;\n  }\n\n  /**\n   * Create the Signature element\n   *\n   */\n  private createSignature(prefix?: string) {\n    let xmlNsAttr = \"xmlns\";\n\n    if (prefix) {\n      xmlNsAttr += `:${prefix}`;\n      prefix += \":\";\n    } else {\n      prefix = \"\";\n    }\n\n    const signatureValueXml = `<${prefix}SignatureValue>${this.signatureValue}</${prefix}SignatureValue>`;\n    //the canonicalization requires to get a valid xml node.\n    //we need to wrap the info in a dummy signature since it contains the default namespace.\n    const dummySignatureWrapper = `<${prefix}Signature ${xmlNsAttr}=\"http://www.w3.org/2000/09/xmldsig#\">${signatureValueXml}</${prefix}Signature>`;\n\n    const doc = new xmldom.DOMParser().parseFromString(dummySignatureWrapper);\n\n    // Because we are using a dummy wrapper hack described above, we know there will be a `firstChild`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return doc.documentElement.firstChild!;\n  }\n\n  /**\n   * Returns just the signature part, must be called only after {@link computeSignature}\n   *\n   * @returns The signature XML.\n   */\n  getSignatureXml(): string {\n    return this.signatureXml;\n  }\n\n  /**\n   * Returns the original xml with Id attributes added on relevant elements (required for validation), must be called only after {@link computeSignature}\n   *\n   * @returns The original XML with IDs.\n   */\n  getOriginalXmlWithIds(): string {\n    return this.originalXmlWithIds;\n  }\n\n  /**\n   * Returns the original xml document with the signature in it, must be called only after {@link computeSignature}\n   *\n   * @returns The signed XML.\n   */\n  getSignedXml(): string {\n    return this.signedXml;\n  }\n}\n", "export { C14nCanonicalization, C14nCanonicalizationWithComments } from \"./c14n-canonicalization\";\nexport {\n  ExclusiveCanonicalization,\n  ExclusiveCanonicalizationWithComments,\n} from \"./exclusive-canonicalization\";\nexport { SignedXml } from \"./signed-xml\";\nexport * from \"./types\";\nexport * from \"./utils\";\n", "import libDefault from 'path';\nmodule.exports = libDefault;", "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n", "var escapehtml = require('escape-html');\n\nmodule.exports = ({ contentEncryptionMethod, keyInfo, encryptedContent }) => `\n<xenc:EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\">\n  <xenc:EncryptionMethod Algorithm=\"${escapehtml(contentEncryptionMethod)}\" />\n  ${keyInfo}\n  <xenc:CipherData>\n    <xenc:CipherValue>${escapehtml(encryptedContent)}</xenc:CipherValue>\n  </xenc:CipherData>\n</xenc:EncryptedData>\n`;\n\n", "var escapehtml = require('escape-html');\n\nmodule.exports = ({ encryptionPublicCert, encryptedKey, keyEncryptionMethod }) => `\n<KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n  <e:EncryptedKey xmlns:e=\"http://www.w3.org/2001/04/xmlenc#\">\n    <e:EncryptionMethod Algorithm=\"${escapehtml(keyEncryptionMethod)}\">\n      <DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\" />\n    </e:EncryptionMethod>\n    <KeyInfo>\n      ${encryptionPublicCert}\n    </KeyInfo>\n    <e:CipherData>\n      <e:CipherValue>${escapehtml(encryptedKey)}</e:CipherValue>\n    </e:CipherData>\n  </e:EncryptedKey>\n</KeyInfo>\n`;\n\n", "var path = require('path'),\n    fs = require('fs');\n\nvar templates = {\n  'encrypted-key': require('./templates/encrypted-key.tpl.xml'),\n  'keyinfo': require('./templates/keyinfo.tpl.xml'),\n};\n\nfunction renderTemplate(file, data) {\n  return templates[file](data);\n}\n\nfunction pemToCert(pem) {\n  var cert = /-----BEGIN CERTIFICATE-----([^-]*)-----END CERTIFICATE-----/g.exec(pem);\n  if (cert.length > 0) {\n    return cert[1].replace(/[\\n|\\r\\n]/g, '');\n  }\n\n  return null;\n};\n\nfunction warnInsecureAlgorithm(algorithm, enabled = true) {\n  if (enabled) {\n    console.warn(algorithm + \" is no longer recommended due to security reasons. Please deprecate its use as soon as possible.\")\n  }\n}\n\nmodule.exports = {\n  renderTemplate: renderTemplate,\n  pemToCert: pemToCert,\n  warnInsecureAlgorithm: warnInsecureAlgorithm\n};\n", "var crypto  = require('crypto');\nvar xmldom  = require('@xmldom/xmldom');\nvar xpath   = require('xpath');\nvar utils   = require('./utils');\n\nconst insecureAlgorithms = [\n  //https://www.w3.org/TR/xmlenc-core1/#rsav15note\n  'http://www.w3.org/2001/04/xmlenc#rsa-1_5',\n  //https://csrc.nist.gov/News/2017/Update-to-Current-Use-and-Deprecation-of-TDEA\n  'http://www.w3.org/2001/04/xmlenc#tripledes-cbc'];\n\nfunction encryptKeyInfoWithScheme(symmetricKey, options, scheme, callback) {\n  const padding = scheme === 'RSA-OAEP' ? crypto.constants.RSA_PKCS1_OAEP_PADDING : crypto.constants.RSA_PKCS1_PADDING;\n  const symmetricKeyBuffer = Buffer.isBuffer(symmetricKey) ? symmetricKey : Buffer.from(symmetricKey, 'utf-8');\n\n  try {\n    var encrypted = crypto.publicEncrypt({\n      key: options.rsa_pub,\n      padding: padding\n    }, symmetricKeyBuffer);\n    var base64EncodedEncryptedKey = encrypted.toString('base64');\n\n    var params = {\n      encryptedKey:  base64EncodedEncryptedKey,\n      encryptionPublicCert: '<X509Data><X509Certificate>' + utils.pemToCert(options.pem.toString()) + '</X509Certificate></X509Data>',\n      keyEncryptionMethod: options.keyEncryptionAlgorithm\n    };\n\n    var result = utils.renderTemplate('keyinfo', params);\n    callback(null, result);\n  } catch (e) {\n    callback(e);\n  }\n}\n\nfunction encryptKeyInfo(symmetricKey, options, callback) {\n  if (!options)\n    return callback(new Error('must provide options'));\n  if (!options.rsa_pub)\n    return callback(new Error('must provide options.rsa_pub with public key RSA'));\n  if (!options.pem)\n    return callback(new Error('must provide options.pem with certificate'));\n\n  if (!options.keyEncryptionAlgorithm)\n    return callback(new Error('encryption without encrypted key is not supported yet'));\n  if (options.disallowEncryptionWithInsecureAlgorithm\n    && insecureAlgorithms.indexOf(options.keyEncryptionAlgorithm) >= 0) {\n    return callback(new Error('encryption algorithm ' + options.keyEncryptionAlgorithm + 'is not secure'));\n  }\n  switch (options.keyEncryptionAlgorithm) {\n    case 'http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p':\n      return encryptKeyInfoWithScheme(symmetricKey, options, 'RSA-OAEP', callback);\n\n    case 'http://www.w3.org/2001/04/xmlenc#rsa-1_5':\n      utils.warnInsecureAlgorithm(options.keyEncryptionAlgorithm, options.warnInsecureAlgorithm);\n      return encryptKeyInfoWithScheme(symmetricKey, options, 'RSAES-PKCS1-V1_5', callback);\n\n    default:\n      return callback(new Error('encryption key algorithm not supported'));\n  }\n}\n\nfunction encrypt(content, options, callback) {\n  if (!options)\n    return callback(new Error('must provide options'));\n  if (!content)\n    return callback(new Error('must provide content to encrypt'));\n  if (!options.rsa_pub)\n    return callback(new Error('rsa_pub option is mandatory and you should provide a valid RSA public key'));\n  if (!options.pem)\n    return callback(new Error('pem option is mandatory and you should provide a valid x509 certificate encoded as PEM'));\n  if (options.disallowEncryptionWithInsecureAlgorithm\n    && (insecureAlgorithms.indexOf(options.keyEncryptionAlgorithm) >= 0\n      || insecureAlgorithms.indexOf(options.encryptionAlgorithm) >= 0)) {\n    return callback(new Error('encryption algorithm ' + options.keyEncryptionAlgorithm + ' is not secure'));\n  }\n  options.input_encoding = options.input_encoding || 'utf8';\n\n  function generate_symmetric_key(cb) {\n    switch (options.encryptionAlgorithm) {\n      case 'http://www.w3.org/2001/04/xmlenc#aes128-cbc':\n        crypto.randomBytes(16, cb); // generate a symmetric random key 16 bytes length\n        break;\n      case 'http://www.w3.org/2001/04/xmlenc#aes256-cbc':\n        crypto.randomBytes(32, cb); // generate a symmetric random key 32 bytes length\n        break;\n      case 'http://www.w3.org/2009/xmlenc11#aes128-gcm':\n        crypto.randomBytes(16, cb); // generate a symmetric random key 16 bytes length\n        break;\n      case 'http://www.w3.org/2009/xmlenc11#aes256-gcm':\n        crypto.randomBytes(32, cb); // generate a symmetric random key 32 bytes length\n        break;\n      case 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc':\n        utils.warnInsecureAlgorithm(options.encryptionAlgorithm, options.warnInsecureAlgorithm);\n        crypto.randomBytes(24, cb); // generate a symmetric random key 24 bytes (192 bits) length\n        break;\n      default:\n        crypto.randomBytes(32, cb); // generate a symmetric random key 32 bytes length\n    }\n  }\n\n  function encrypt_content(symmetricKey, cb) {\n    switch (options.encryptionAlgorithm) {\n      case 'http://www.w3.org/2001/04/xmlenc#aes128-cbc':\n        encryptWithAlgorithm('aes-128-cbc', symmetricKey, 16, content, options.input_encoding, function (err, encryptedContent) {\n          if (err) return cb(err);\n          cb(null, encryptedContent);\n        });\n        break;\n      case 'http://www.w3.org/2001/04/xmlenc#aes256-cbc':\n        encryptWithAlgorithm('aes-256-cbc', symmetricKey, 16, content, options.input_encoding, function (err, encryptedContent) {\n          if (err) return cb(err);\n          cb(null, encryptedContent);\n        });\n        break;\n      case 'http://www.w3.org/2009/xmlenc11#aes128-gcm':\n        encryptWithAlgorithm('aes-128-gcm', symmetricKey, 12, content, options.input_encoding, function (err, encryptedContent) {\n          if (err) return cb(err);\n          cb(null, encryptedContent);\n        });\n        break;\n      case 'http://www.w3.org/2009/xmlenc11#aes256-gcm':\n        encryptWithAlgorithm('aes-256-gcm', symmetricKey, 12, content, options.input_encoding, function (err, encryptedContent) {\n          if (err) return cb(err);\n          cb(null, encryptedContent);\n        });\n        break;\n      case 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc':\n        utils.warnInsecureAlgorithm(options.encryptionAlgorithm, options.warnInsecureAlgorithm);\n        encryptWithAlgorithm('des-ede3-cbc', symmetricKey, 8, content, options.input_encoding, function (err, encryptedContent) {\n          if (err) return cb(err);\n          cb(null, encryptedContent);\n        });\n        break;\n      default:\n        cb(new Error('encryption algorithm not supported'));\n    }\n  }\n\n  function encrypt_key(symmetricKey, encryptedContent, cb) {\n    encryptKeyInfo(symmetricKey, options, function(err, keyInfo) {\n      if (err) return cb(err);\n      var result = utils.renderTemplate('encrypted-key', {\n        encryptedContent: encryptedContent.toString('base64'),\n        keyInfo: keyInfo,\n        contentEncryptionMethod: options.encryptionAlgorithm\n      });\n\n      cb(null, result);\n    });\n  }\n\n\n  generate_symmetric_key(function (genKeyError, symmetricKey) {\n    if (genKeyError) {\n      return callback(genKeyError);\n    }\n\n    encrypt_content(symmetricKey, function(encryptContentError, encryptedContent) {\n      if (encryptContentError) {\n        return callback(encryptContentError);\n      }\n\n      encrypt_key(symmetricKey, encryptedContent, function (encryptKeyError, result) {\n        if (encryptKeyError) {\n          return callback(encryptKeyError);\n        }\n\n        callback(null, result);\n      });\n\n    });\n\n  });\n}\n\nfunction decrypt(xml, options, callback) {\n  if (!options)\n    return callback(new Error('must provide options'));\n  if (!xml)\n    return callback(new Error('must provide XML to encrypt'));\n  if (!options.key)\n    return callback(new Error('key option is mandatory and you should provide a valid RSA private key'));\n  try {\n    var doc = typeof xml === 'string' ? new xmldom.DOMParser().parseFromString(xml) : xml;\n\n    var symmetricKey = decryptKeyInfo(doc, options);\n    var encryptionMethod = xpath.select(\"//*[local-name(.)='EncryptedData']/*[local-name(.)='EncryptionMethod']\", doc)[0];\n    var encryptionAlgorithm = encryptionMethod.getAttribute('Algorithm');\n\n    if (options.disallowDecryptionWithInsecureAlgorithm\n      && insecureAlgorithms.indexOf(encryptionAlgorithm) >= 0) {\n      return callback(new Error('encryption algorithm ' + encryptionAlgorithm + ' is not secure, fail to decrypt'));\n    }\n    var encryptedContent = xpath.select(\"//*[local-name(.)='EncryptedData']/*[local-name(.)='CipherData']/*[local-name(.)='CipherValue']\", doc)[0];\n\n    var encrypted = Buffer.from(encryptedContent.textContent, 'base64');\n    switch (encryptionAlgorithm) {\n      case 'http://www.w3.org/2001/04/xmlenc#aes128-cbc':\n        return callback(null, decryptWithAlgorithm('aes-128-cbc', symmetricKey, 16, encrypted));\n      case 'http://www.w3.org/2001/04/xmlenc#aes256-cbc':\n        return callback(null, decryptWithAlgorithm('aes-256-cbc', symmetricKey, 16, encrypted));\n      case 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc':\n        utils.warnInsecureAlgorithm(encryptionAlgorithm, options.warnInsecureAlgorithm);\n        return callback(null, decryptWithAlgorithm('des-ede3-cbc', symmetricKey, 8, encrypted));\n      case 'http://www.w3.org/2009/xmlenc11#aes128-gcm':\n        return callback(null, decryptWithAlgorithm('aes-128-gcm', symmetricKey, 12, encrypted));\n      case 'http://www.w3.org/2009/xmlenc11#aes256-gcm':\n        return callback(null, decryptWithAlgorithm('aes-256-gcm', symmetricKey, 12, encrypted));\n      default:\n        return callback(new Error('encryption algorithm ' + encryptionAlgorithm + ' not supported'));\n    }\n  } catch (e) {\n    return callback(e);\n  }\n}\n\nfunction decryptKeyInfo(doc, options) {\n  if (typeof doc === 'string') doc = new xmldom.DOMParser().parseFromString(doc);\n\n  var keyRetrievalMethodUri;\n  var keyInfo = xpath.select(\"//*[local-name(.)='KeyInfo' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\", doc)[0];\n  var keyEncryptionMethod = xpath.select(\"//*[local-name(.)='KeyInfo']/*[local-name(.)='EncryptedKey']/*[local-name(.)='EncryptionMethod']\", doc)[0];\n\n  if (!keyEncryptionMethod) { // try with EncryptedData->KeyInfo->RetrievalMethod\n    var keyRetrievalMethod = xpath.select(\"//*[local-name(.)='EncryptedData']/*[local-name(.)='KeyInfo']/*[local-name(.)='RetrievalMethod']\", doc)[0];\n    keyRetrievalMethodUri = keyRetrievalMethod ? keyRetrievalMethod.getAttribute('URI') : null;\n    keyEncryptionMethod = keyRetrievalMethodUri ? xpath.select(\"//*[local-name(.)='EncryptedKey' and @Id='\" + keyRetrievalMethodUri.substring(1) + \"']/*[local-name(.)='EncryptionMethod']\", doc)[0] : null;\n  }\n\n  if (!keyEncryptionMethod) {\n    throw new Error('cant find encryption algorithm');\n  }\n\n  var keyEncryptionAlgorithm = keyEncryptionMethod.getAttribute('Algorithm');\n  if (options.disallowDecryptionWithInsecureAlgorithm\n    && insecureAlgorithms.indexOf(keyEncryptionAlgorithm) >= 0) {\n    throw new Error('encryption algorithm ' + keyEncryptionAlgorithm + ' is not secure, fail to decrypt');\n  }\n  var encryptedKey = keyRetrievalMethodUri ?\n    xpath.select(\"//*[local-name(.)='EncryptedKey' and @Id='\" + keyRetrievalMethodUri.substring(1) + \"']/*[local-name(.)='CipherData']/*[local-name(.)='CipherValue']\", keyInfo)[0] :\n    xpath.select(\"//*[local-name(.)='CipherValue']\", keyInfo)[0];\n\n  switch (keyEncryptionAlgorithm) {\n    case 'http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p':\n      return decryptKeyInfoWithScheme(encryptedKey, options, 'RSA-OAEP');\n    case 'http://www.w3.org/2001/04/xmlenc#rsa-1_5':\n      utils.warnInsecureAlgorithm(keyEncryptionAlgorithm, options.warnInsecureAlgorithm);\n      return decryptKeyInfoWithScheme(encryptedKey, options, 'RSAES-PKCS1-V1_5');\n    default:\n      throw new Error('key encryption algorithm ' + keyEncryptionAlgorithm + ' not supported');\n  }\n}\n\nfunction decryptKeyInfoWithScheme(encryptedKey, options, scheme) {\n  var padding = scheme === 'RSA-OAEP' ? crypto.constants.RSA_PKCS1_OAEP_PADDING : crypto.constants.RSA_PKCS1_PADDING;\n  var key = Buffer.from(encryptedKey.textContent, 'base64');\n  var decrypted = crypto.privateDecrypt({ key: options.key, padding: padding}, key);\n  return Buffer.from(decrypted, 'binary');\n}\n\nfunction encryptWithAlgorithm(algorithm, symmetricKey, ivLength, content, encoding, callback) {\n  // create a random iv for algorithm\n  crypto.randomBytes(ivLength, function(err, iv) {\n    if (err) return callback(err);\n\n    var cipher = crypto.createCipheriv(algorithm, symmetricKey, iv);\n    // encrypted content\n    var encrypted = cipher.update(content, encoding, 'binary') + cipher.final('binary');\n    var authTag = algorithm.slice(-3) === \"gcm\" ? cipher.getAuthTag() : Buffer.from(\"\");\n    //Format mentioned: https://www.w3.org/TR/xmlenc-core1/#sec-AES-GCM\n    var r = Buffer.concat([iv, Buffer.from(encrypted, 'binary'), authTag]);\n    return callback(null, r);\n  });\n}\n\nfunction decryptWithAlgorithm(algorithm, symmetricKey, ivLength, content) {\n  var decipher = crypto.createDecipheriv(algorithm, symmetricKey, content.slice(0,ivLength));\n  decipher.setAutoPadding(false);\n\n  if (algorithm.slice(-3) === \"gcm\") {\n    decipher.setAuthTag(content.slice(-16));\n    content = content.slice(0,-16);\n  }\n  var decrypted = decipher.update(content.slice(ivLength), null, 'binary') + decipher.final('binary');\n\nif (algorithm.slice(-3) !== \"gcm\") {\n  // Remove padding bytes equal to the value of the last byte of the returned data.\n  // Padding for GCM not required per: https://www.w3.org/TR/xmlenc-core1/#sec-AES-GCM\n  var padding = decrypted.charCodeAt(decrypted.length - 1);\n  if (1 <= padding && padding <= ivLength) {\n    decrypted = decrypted.substr(0, decrypted.length - padding);\n  } else {\n    callback(new Error('padding length invalid'));\n    return;\n  }\n}\n\n  return Buffer.from(decrypted, 'binary').toString('utf8');\n}\n\nexports = module.exports = {\n  decrypt: decrypt,\n  encrypt: encrypt,\n  encryptKeyInfo: encryptKeyInfo,\n  decryptKeyInfo: decryptKeyInfo\n};\n", "exports = module.exports = require('./xmlenc');", "\n\nvar escape = module.exports = function escape(string, ignore) {\n  var pattern;\n\n  if (string === null || string === undefined) return;\n\n  ignore = (ignore || '').replace(/[^&\"<>\\']/g, '');\n  pattern = '([&\"<>\\'])'.replace(new RegExp('[' + ignore + ']', 'g'), '');\n\n  return string.replace(new RegExp(pattern, 'g'), function(str, item) {\n            return escape.map[item];\n          })\n}\n\nvar map = escape.map = {\n    '>': '&gt;'\n  , '<': '&lt;'\n  , \"'\": '&apos;'\n  , '\"': '&quot;'\n  , '&': '&amp;'\n}", "/**\n* @file SamlLib.js\n* @author tngan\n* @desc  A simple library including some common functions\n*/\n\nimport utility, { flattenDeep, isString } from './utility';\nimport { algorithms, wording, namespace } from './urn';\nimport { select } from 'xpath';\nimport { MetadataInterface } from './metadata';\nimport nrsa, { SigningSchemeHash } from 'node-rsa';\nimport { SignedXml } from 'xml-crypto';\nimport * as xmlenc from '@authenio/xml-encryption';\nimport { extract } from './extractor';\nimport camelCase from 'camelcase';\nimport { getContext } from './api';\nimport xmlEscape from 'xml-escape';\nimport * as fs from 'fs';\nimport {DOMParser} from '@xmldom/xmldom';\n\nconst signatureAlgorithms = algorithms.signature;\nconst digestAlgorithms = algorithms.digest;\nconst certUse = wording.certUse;\nconst urlParams = wording.urlParams;\n\nexport interface SignatureConstructor {\n  rawSamlMessage: string;\n  referenceTagXPath?: string;\n  privateKey: string;\n  privateKeyPass?: string;\n  signatureAlgorithm: string;\n  signingCert: string | Buffer;\n  isBase64Output?: boolean;\n  signatureConfig?: any;\n  isMessageSigned?: boolean;\n  transformationAlgorithms?: string[];\n}\n\nexport interface SignatureVerifierOptions {\n  metadata?: MetadataInterface;\n  keyFile?: string;\n  signatureAlgorithm?: string;\n}\n\nexport interface ExtractorResult {\n  [key: string]: any;\n  signature?: string | string[];\n  issuer?: string | string[];\n  nameID?: string;\n  notexist?: boolean;\n}\n\nexport interface LoginResponseAttribute {\n  name: string;\n  nameFormat: string; //\n  valueXsiType: string; //\n  valueTag: string;\n  valueXmlnsXs?: string;\n  valueXmlnsXsi?: string;\n}\n\nexport interface LoginResponseAdditionalTemplates {\n  attributeStatementTemplate?: AttributeStatementTemplate;\n  attributeTemplate?: AttributeTemplate;\n}\n\nexport interface BaseSamlTemplate {\n  context: string;\n}\n\nexport interface LoginResponseTemplate extends BaseSamlTemplate {\n  attributes?: LoginResponseAttribute[];\n  additionalTemplates?: LoginResponseAdditionalTemplates;\n}\nexport interface AttributeStatementTemplate extends BaseSamlTemplate { }\n\nexport interface AttributeTemplate extends BaseSamlTemplate { }\n\nexport interface LoginRequestTemplate extends BaseSamlTemplate { }\n\nexport interface LogoutRequestTemplate extends BaseSamlTemplate { }\n\nexport interface LogoutResponseTemplate extends BaseSamlTemplate { }\n\nexport type KeyUse = 'signing' | 'encryption';\n\nexport interface KeyComponent {\n  [key: string]: any;\n}\n\nexport interface LibSamlInterface {\n  getQueryParamByType: (type: string) => string;\n  createXPath: (local, isExtractAll?: boolean) => string;\n  replaceTagsByValue: (rawXML: string, tagValues: any) => string;\n  attributeStatementBuilder: (attributes: LoginResponseAttribute[], attributeTemplate: AttributeTemplate, attributeStatementTemplate: AttributeStatementTemplate) => string;\n  constructSAMLSignature: (opts: SignatureConstructor) => string;\n  verifySignature: (xml: string, opts: SignatureVerifierOptions) => [boolean, any];\n  createKeySection: (use: KeyUse, cert: string | Buffer) => {};\n  constructMessageSignature: (octetString: string, key: string, passphrase?: string, isBase64?: boolean, signingAlgorithm?: string) => string;\n\n  verifyMessageSignature: (metadata, octetString: string, signature: string | Buffer, verifyAlgorithm?: string) => boolean;\n  getKeyInfo: (x509Certificate: string, signatureConfig?: any) => void;\n  encryptAssertion: (sourceEntity, targetEntity, entireXML: string) => Promise<string>;\n  decryptAssertion: (here, entireXML: string) => Promise<[string, any]>;\n\n  getSigningScheme: (sigAlg: string) => string | null;\n  getDigestMethod: (sigAlg: string) => string | null;\n\n  nrsaAliasMapping: any;\n  defaultLoginRequestTemplate: LoginRequestTemplate;\n  defaultLoginResponseTemplate: LoginResponseTemplate;\n  defaultAttributeStatementTemplate: AttributeStatementTemplate;\n  defaultAttributeTemplate: AttributeTemplate;\n  defaultLogoutRequestTemplate: LogoutRequestTemplate;\n  defaultLogoutResponseTemplate: LogoutResponseTemplate;\n}\n\nconst libSaml = () => {\n\n  /**\n  * @desc helper function to get back the query param for redirect binding for SLO/SSO\n  * @type {string}\n  */\n  function getQueryParamByType(type: string) {\n    if ([urlParams.logoutRequest, urlParams.samlRequest].indexOf(type) !== -1) {\n      return 'SAMLRequest';\n    }\n    if ([urlParams.logoutResponse, urlParams.samlResponse].indexOf(type) !== -1) {\n      return 'SAMLResponse';\n    }\n    throw new Error('ERR_UNDEFINED_QUERY_PARAMS');\n  }\n  /**\n   *\n   */\n  const nrsaAliasMapping = {\n    'http://www.w3.org/2000/09/xmldsig#rsa-sha1': 'pkcs1-sha1',\n    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256': 'pkcs1-sha256',\n    'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512': 'pkcs1-sha512',\n  };\n  /**\n  * @desc Default login request template\n  * @type {LoginRequestTemplate}\n  */\n  const defaultLoginRequestTemplate = {\n    context: '<samlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"{ID}\" Version=\"2.0\" IssueInstant=\"{IssueInstant}\" Destination=\"{Destination}\" ProtocolBinding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" AssertionConsumerServiceURL=\"{AssertionConsumerServiceURL}\"><saml:Issuer>{Issuer}</saml:Issuer><samlp:NameIDPolicy Format=\"{NameIDFormat}\" AllowCreate=\"{AllowCreate}\"/></samlp:AuthnRequest>',\n  };\n  /**\n  * @desc Default logout request template\n  * @type {LogoutRequestTemplate}\n  */\n  const defaultLogoutRequestTemplate = {\n    context: '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"{ID}\" Version=\"2.0\" IssueInstant=\"{IssueInstant}\" Destination=\"{Destination}\"><saml:Issuer>{Issuer}</saml:Issuer><saml:NameID Format=\"{NameIDFormat}\">{NameID}</saml:NameID></samlp:LogoutRequest>',\n  };\n\n  /**\n  * @desc Default AttributeStatement template\n  * @type {AttributeStatementTemplate}\n  */\n  const defaultAttributeStatementTemplate = {\n    context: '<saml:AttributeStatement>{Attributes}</saml:AttributeStatement>',\n  };\n\n  /**\n  * @desc Default Attribute template\n  * @type {AttributeTemplate}\n  */\n  const defaultAttributeTemplate = {\n    context: '<saml:Attribute Name=\"{Name}\" NameFormat=\"{NameFormat}\"><saml:AttributeValue xmlns:xs=\"{ValueXmlnsXs}\" xmlns:xsi=\"{ValueXmlnsXsi}\" xsi:type=\"{ValueXsiType}\">{Value}</saml:AttributeValue></saml:Attribute>',\n  };\n\n  /**\n  * @desc Default login response template\n  * @type {LoginResponseTemplate}\n  */\n  const defaultLoginResponseTemplate = {\n    context: '<samlp:Response xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"{ID}\" Version=\"2.0\" IssueInstant=\"{IssueInstant}\" Destination=\"{Destination}\" InResponseTo=\"{InResponseTo}\"><saml:Issuer>{Issuer}</saml:Issuer><samlp:Status><samlp:StatusCode Value=\"{StatusCode}\"/></samlp:Status><saml:Assertion xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"{AssertionID}\" Version=\"2.0\" IssueInstant=\"{IssueInstant}\"><saml:Issuer>{Issuer}</saml:Issuer><saml:Subject><saml:NameID Format=\"{NameIDFormat}\">{NameID}</saml:NameID><saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\"><saml:SubjectConfirmationData NotOnOrAfter=\"{SubjectConfirmationDataNotOnOrAfter}\" Recipient=\"{SubjectRecipient}\" InResponseTo=\"{InResponseTo}\"/></saml:SubjectConfirmation></saml:Subject><saml:Conditions NotBefore=\"{ConditionsNotBefore}\" NotOnOrAfter=\"{ConditionsNotOnOrAfter}\"><saml:AudienceRestriction><saml:Audience>{Audience}</saml:Audience></saml:AudienceRestriction></saml:Conditions>{AuthnStatement}{AttributeStatement}</saml:Assertion></samlp:Response>',\n    attributes: [],\n    additionalTemplates: {\n      'attributeStatementTemplate': defaultAttributeStatementTemplate,\n      'attributeTemplate': defaultAttributeTemplate\n    }\n  };\n  /**\n  * @desc Default logout response template\n  * @type {LogoutResponseTemplate}\n  */\n  const defaultLogoutResponseTemplate = {\n    context: '<samlp:LogoutResponse xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"{ID}\" Version=\"2.0\" IssueInstant=\"{IssueInstant}\" Destination=\"{Destination}\" InResponseTo=\"{InResponseTo}\"><saml:Issuer>{Issuer}</saml:Issuer><samlp:Status><samlp:StatusCode Value=\"{StatusCode}\"/></samlp:Status></samlp:LogoutResponse>',\n  };\n  /**\n  * @private\n  * @desc Get the signing scheme alias by signature algorithms, used by the node-rsa module\n  * @param {string} sigAlg    signature algorithm\n  * @return {string/null} signing algorithm short-hand for the module node-rsa\n  */\n  function getSigningScheme(sigAlg?: string): SigningSchemeHash {\n    if (sigAlg) {\n      const algAlias = nrsaAliasMapping[sigAlg];\n      if (!(algAlias === undefined)) {\n        return algAlias;\n      }\n    }\n    return nrsaAliasMapping[signatureAlgorithms.RSA_SHA1];\n  }\n  /**\n  * @private\n  * @desc Get the digest algorithms by signature algorithms\n  * @param {string} sigAlg    signature algorithm\n  * @return {string/undefined} digest algorithm\n  */\n  function getDigestMethod(sigAlg: string): string | undefined {\n    return digestAlgorithms[sigAlg];\n  }\n  /**\n  * @public\n  * @desc Create XPath\n  * @param  {string/object} local     parameters to create XPath\n  * @param  {boolean} isExtractAll    define whether returns whole content according to the XPath\n  * @return {string} xpath\n  */\n  function createXPath(local, isExtractAll?: boolean): string {\n    if (isString(local)) {\n      return isExtractAll === true ? \"//*[local-name(.)='\" + local + \"']/text()\" : \"//*[local-name(.)='\" + local + \"']\";\n    }\n    return \"//*[local-name(.)='\" + local.name + \"']/@\" + local.attr;\n  }\n\n  /**\n   * @private\n   * @desc Tag normalization\n   * @param {string} prefix     prefix of the tag\n   * @param {content} content   normalize it to capitalized camel case\n   * @return {string}\n   */\n  function tagging(prefix: string, content: string): string {\n    const camelContent = camelCase(content, {locale: 'en-us'});\n    return prefix + camelContent.charAt(0).toUpperCase() + camelContent.slice(1);\n  }\n\n  function escapeTag(replacement: unknown): (...args: string[]) => string {\n    return (_match: string, quote?: string) => {\n      const text: string = (replacement === null || replacement === undefined) ? '' : String(replacement);\n\n      // not having a quote means this interpolation isn't for an attribute, and so does not need escaping\n      return quote ? `${quote}${xmlEscape(text)}` : text;\n    }\n  }\n\n  return {\n\n    createXPath,\n    getQueryParamByType,\n    defaultLoginRequestTemplate,\n    defaultLoginResponseTemplate,\n    defaultAttributeStatementTemplate,\n    defaultAttributeTemplate,\n    defaultLogoutRequestTemplate,\n    defaultLogoutResponseTemplate,\n\n    /**\n    * @desc Replace the tag (e.g. {tag}) inside the raw XML\n    * @param  {string} rawXML      raw XML string used to do keyword replacement\n    * @param  {array} tagValues    tag values\n    * @return {string}\n    */\n    replaceTagsByValue(rawXML: string, tagValues: Record<string, unknown>): string {\n      Object.keys(tagValues).forEach(t => {\n        rawXML = rawXML.replace(\n          new RegExp(`(\"?)\\\\{${t}\\\\}`, 'g'),\n          escapeTag(tagValues[t])\n        );\n      });\n      return rawXML;\n    },\n    /**\n    * @desc Helper function to build the AttributeStatement tag\n    * @param  {LoginResponseAttribute} attributes    an array of attribute configuration\n    * @param  {AttributeTemplate} attributeTemplate    the attribute tag template to be used\n    * @param  {AttributeStatementTemplate} attributeStatementTemplate    the attributeStatement tag template to be used\n    * @return {string}\n    */\n    attributeStatementBuilder(\n      attributes: LoginResponseAttribute[],\n      attributeTemplate: AttributeTemplate = defaultAttributeTemplate,\n      attributeStatementTemplate: AttributeStatementTemplate = defaultAttributeStatementTemplate\n    ): string {\n      const attr = attributes.map(({ name, nameFormat, valueTag, valueXsiType, valueXmlnsXs, valueXmlnsXsi }) => {\n        const defaultValueXmlnsXs = 'http://www.w3.org/2001/XMLSchema';\n        const defaultValueXmlnsXsi = 'http://www.w3.org/2001/XMLSchema-instance';\n        let attributeLine = attributeTemplate.context;\n        attributeLine = attributeLine.replace('{Name}', name);\n        attributeLine = attributeLine.replace('{NameFormat}', nameFormat);\n        attributeLine = attributeLine.replace('{ValueXmlnsXs}', valueXmlnsXs ? valueXmlnsXs : defaultValueXmlnsXs);\n        attributeLine = attributeLine.replace('{ValueXmlnsXsi}', valueXmlnsXsi ? valueXmlnsXsi : defaultValueXmlnsXsi);\n        attributeLine = attributeLine.replace('{ValueXsiType}', valueXsiType);\n        attributeLine = attributeLine.replace('{Value}', `{${tagging('attr', valueTag)}}`);\n        return attributeLine;\n      }).join('');\n      return attributeStatementTemplate.context.replace('{Attributes}', attr);\n    },\n\n    /**\n    * @desc Construct the XML signature for POST binding\n    * @param  {string} rawSamlMessage      request/response xml string\n    * @param  {string} referenceTagXPath    reference uri\n    * @param  {string} privateKey           declares the private key\n    * @param  {string} passphrase           passphrase of the private key [optional]\n    * @param  {string|buffer} signingCert   signing certificate\n    * @param  {string} signatureAlgorithm   signature algorithm\n    * @param  {string[]} transformationAlgorithms   canonicalization and transformation Algorithms\n    * @return {string} base64 encoded string\n    */\n    constructSAMLSignature(opts: SignatureConstructor) {\n      const {\n        rawSamlMessage,\n        referenceTagXPath,\n        privateKey,\n        privateKeyPass,\n        signatureAlgorithm = signatureAlgorithms.RSA_SHA256,\n        transformationAlgorithms = [\n          'http://www.w3.org/2000/09/xmldsig#enveloped-signature',\n          'http://www.w3.org/2001/10/xml-exc-c14n#',\n        ],\n        signingCert,\n        signatureConfig,\n        isBase64Output = true,\n        isMessageSigned = false,\n      } = opts;\n      const sig = new SignedXml();\n      // Add assertion sections as reference\n      const digestAlgorithm = getDigestMethod(signatureAlgorithm);\n      if (referenceTagXPath) {\n        sig.addReference({\n          xpath: referenceTagXPath,\n          transforms: transformationAlgorithms,\n          digestAlgorithm: digestAlgorithm\n        });\n      }\n      if (isMessageSigned) {\n        sig.addReference({\n          // reference to the root node\n          xpath: '/*',\n          transforms: transformationAlgorithms,\n          digestAlgorithm\n        });\n      }\n      sig.signatureAlgorithm = signatureAlgorithm;\n      sig.publicCert = this.getKeyInfo(signingCert, signatureConfig).getKey();\n      sig.getKeyInfoContent = this.getKeyInfo(signingCert, signatureConfig).getKeyInfo;\n      sig.privateKey = utility.readPrivateKey(privateKey, privateKeyPass, true);\n      sig.canonicalizationAlgorithm = 'http://www.w3.org/2001/10/xml-exc-c14n#';\n\n      if (signatureConfig) {\n        sig.computeSignature(rawSamlMessage, signatureConfig);\n      } else {\n        sig.computeSignature(rawSamlMessage);\n      }\n      return isBase64Output !== false ? utility.base64Encode(sig.getSignedXml()) : sig.getSignedXml();\n    },\n    /**\n    * @desc Verify the XML signature\n    * @param  {string} xml xml\n    * @param  {SignatureVerifierOptions} opts cert declares the X509 certificate\n     * @return {[boolean, string | null]} - A tuple where:\n     *   - The first element is `true` if the signature is valid, `false` otherwise.\n     *   - The second element is the cryptographically authenticated assertion node as a string, or `null` if not found.\n     */\n    verifySignature(xml: string, opts: SignatureVerifierOptions) {\n      const { dom } = getContext();\n      const doc = dom.parseFromString(xml);\n\n      const docParser = new DOMParser();\n      // In order to avoid the wrapping attack, we have changed to use absolute xpath instead of naively fetching the signature element\n      // message signature (logout response / saml response)\n      const messageSignatureXpath = \"/*[contains(local-name(), 'Response') or contains(local-name(), 'Request')]/*[local-name(.)='Signature']\";\n      // assertion signature (logout response / saml response)\n      const assertionSignatureXpath = \"/*[contains(local-name(), 'Response') or contains(local-name(), 'Request')]/*[local-name(.)='Assertion']/*[local-name(.)='Signature']\";\n      // check if there is a potential malicious wrapping signature\n      const wrappingElementsXPath = \"/*[contains(local-name(), 'Response')]/*[local-name(.)='Assertion']/*[local-name(.)='Subject']/*[local-name(.)='SubjectConfirmation']/*[local-name(.)='SubjectConfirmationData']//*[local-name(.)='Assertion' or local-name(.)='Signature']\";\n\n      // select the signature node\n      let selection: any = [];\n      const messageSignatureNode = select(messageSignatureXpath, doc);\n      const assertionSignatureNode = select(assertionSignatureXpath, doc);\n      const wrappingElementNode = select(wrappingElementsXPath, doc);\n\n      selection = selection.concat(messageSignatureNode);\n      selection = selection.concat(assertionSignatureNode);\n\n      // try to catch potential wrapping attack\n      if (wrappingElementNode.length !== 0) {\n        throw new Error('ERR_POTENTIAL_WRAPPING_ATTACK');\n      }\n\n      // guarantee to have a signature in saml response\n      if (selection.length === 0) {\n        throw new Error('ERR_ZERO_SIGNATURE');\n      }\n\n\n      // need to refactor later on\n      for (const signatureNode of selection){\n        const sig = new SignedXml();\n        let verified = false;\n\n        sig.signatureAlgorithm = opts.signatureAlgorithm!;\n\n        if (!opts.keyFile && !opts.metadata) {\n          throw new Error('ERR_UNDEFINED_SIGNATURE_VERIFIER_OPTIONS');\n        }\n\n        if (opts.keyFile) {\n          sig.publicCert = fs.readFileSync(opts.keyFile)\n        }\n\n        if (opts.metadata) {\n\n          const certificateNode = select(\".//*[local-name(.)='X509Certificate']\", signatureNode) as any;\n          // certificate in metadata\n          let metadataCert: any = opts.metadata.getX509Certificate(certUse.signing);\n          // flattens the nested array of Certificates from each KeyDescriptor\n          if (Array.isArray(metadataCert)) {\n            metadataCert = flattenDeep(metadataCert);\n          } else if (typeof metadataCert === 'string') {\n            metadataCert = [metadataCert];\n          }\n          // normalise the certificate string\n          metadataCert = metadataCert.map(utility.normalizeCerString);\n\n          // no certificate in node  response nor metadata\n          if (certificateNode.length === 0 && metadataCert.length === 0) {\n            throw new Error('NO_SELECTED_CERTIFICATE');\n          }\n\n          // certificate node in response\n          if (certificateNode.length !== 0) {\n            const x509CertificateData = certificateNode[0].firstChild.data;\n            const x509Certificate = utility.normalizeCerString(x509CertificateData);\n\n            if (\n              metadataCert.length >= 1 &&\n              !metadataCert.find(cert => cert.trim() === x509Certificate.trim())\n            ) {\n              // keep this restriction for rolling certificate usage\n              // to make sure the response certificate is one of those specified in metadata\n              throw new Error('ERROR_UNMATCH_CERTIFICATE_DECLARATION_IN_METADATA');\n            }\n\n            sig.publicCert = this.getKeyInfo(x509Certificate).getKey();\n\n          } else {\n            // Select first one from metadata\n            sig.publicCert = this.getKeyInfo(metadataCert[0]).getKey();\n          }\n        }\n\n        sig.loadSignature(signatureNode);\n\n        doc.removeChild(signatureNode);\n\n        verified = sig.checkSignature(doc.toString());\n\n        // immediately throw error when any one of the signature is failed to get verified\n        if (!verified) {\n          throw new Error('ERR_FAILED_TO_VERIFY_SIGNATURE');\n        }\n        // attempt is made to get the signed Reference as a string();\n        // note, we don't have access to the actual signedReferences API unfortunately\n        // mainly a sanity check here for SAML. (Although ours would still be secure, if multiple references are used)\n        if (!(sig.getReferences().length >= 1)) {\n          throw new Error('NO_SIGNATURE_REFERENCES')\n        }\n        const signedVerifiedXML = sig.getSignedReferences()[0];\n        const rootNode = docParser.parseFromString(signedVerifiedXML, 'text/xml').documentElement;\n        // process the verified signature:\n        // case 1, rootSignedDoc is a response:\n        if (rootNode.localName === 'Response') {\n\n          // try getting the Xml from the first assertion\n          const assertions = select(\n            \"./*[local-name()='Assertion']\",\n            rootNode\n          );\n          // now we can process the assertion as an assertion\n          if (assertions.length === 1) {\n            return [true, assertions[0].toString()];\n          }\n        } else if (rootNode.localName === 'Assertion') {\n          return [true, rootNode.toString()];\n        } else {\n          return [true, null]; // signature is valid. But there is no assertion node here. It could be metadata node, hence return null\n        }\n      };\n\n      // something has gone seriously wrong if we are still here\n      throw new Error('ERR_ZERO_SIGNATURE');\n\n      /*\n      // response must be signed, either entire document or assertion\n      // default we will take the assertion section under root\n      if (messageSignatureNode.length === 1) {\n        const node = select(\"/*[contains(local-name(), 'Response') or contains(local-name(), 'Request')]/*[local-name(.)='Assertion']\", doc);\n        if (node.length === 1) {\n          assertionNode = node[0].toString();\n        }\n      }\n\n      if (assertionSignatureNode.length === 1) {\n        const verifiedAssertionInfo = extract(assertionSignatureNode[0].toString(), [{\n          key: 'refURI',\n          localPath: ['Signature', 'SignedInfo', 'Reference'],\n          attributes: ['URI']\n        }]);\n        // get the assertion supposed to be the one should be verified\n        const desiredAssertionInfo = extract(doc.toString(), [{\n          key: 'id',\n          localPath: ['~Response', 'Assertion'],\n          attributes: ['ID']\n        }]);\n        // 5.4.2 References\n        // SAML assertions and protocol messages MUST supply a value for the ID attribute on the root element of\n        // the assertion or protocol message being signed. The assertion\u2019s or protocol message's root element may\n        // or may not be the root element of the actual XML document containing the signed assertion or protocol\n        // message (e.g., it might be contained within a SOAP envelope).\n        // Signatures MUST contain a single <ds:Reference> containing a same-document reference to the ID\n        // attribute value of the root element of the assertion or protocol message being signed. For example, if the\n        // ID attribute value is \"foo\", then the URI attribute in the <ds:Reference> element MUST be \"#foo\".\n        if (verifiedAssertionInfo.refURI !== `#${desiredAssertionInfo.id}`) {\n          throw new Error('ERR_POTENTIAL_WRAPPING_ATTACK');\n        }\n        const verifiedDoc = extract(doc.toString(), [{\n          key: 'assertion',\n          localPath: ['~Response', 'Assertion'],\n          attributes: [],\n          context: true\n        }]);\n        assertionNode = verifiedDoc.assertion.toString();\n      }\n\n      return [verified, assertionNode];*/\n    },\n    /**\n    * @desc Helper function to create the key section in metadata (abstraction for signing and encrypt use)\n    * @param  {string} use          type of certificate (e.g. signing, encrypt)\n    * @param  {string} certString    declares the certificate String\n    * @return {object} object used in xml module\n    */\n    createKeySection(use: KeyUse, certString: string | Buffer): KeyComponent {\n      return {\n        ['KeyDescriptor']: [\n          {\n            _attr: { use },\n          },\n          {\n            ['ds:KeyInfo']: [\n              {\n                _attr: {\n                  'xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n                },\n              },\n              {\n                ['ds:X509Data']: [{\n                  'ds:X509Certificate': utility.normalizeCerString(certString),\n                }],\n              },\n            ],\n          }],\n      };\n    },\n    /**\n    * @desc Constructs SAML message\n    * @param  {string} octetString               see \"Bindings for the OASIS Security Assertion Markup Language (SAML V2.0)\" P.17/46\n    * @param  {string} key                       declares the pem-formatted private key\n    * @param  {string} passphrase                passphrase of private key [optional]\n    * @param  {string} signingAlgorithm          signing algorithm\n    * @return {string} message signature\n    */\n    constructMessageSignature(\n      octetString: string,\n      key: string,\n      passphrase?: string,\n      isBase64?: boolean,\n      signingAlgorithm?: string\n    ) {\n      // Default returning base64 encoded signature\n      // Embed with node-rsa module\n      const decryptedKey = new nrsa(\n        utility.readPrivateKey(key, passphrase),\n        undefined,\n        {\n          signingScheme: getSigningScheme(signingAlgorithm),\n        }\n      );\n      const signature = decryptedKey.sign(octetString);\n      // Use private key to sign data\n      return isBase64 !== false ? signature.toString('base64') : signature;\n    },\n    /**\n    * @desc Verifies message signature\n    * @param  {Metadata} metadata                 metadata object of identity provider or service provider\n    * @param  {string} octetString                see \"Bindings for the OASIS Security Assertion Markup Language (SAML V2.0)\" P.17/46\n    * @param  {string} signature                  context of XML signature\n    * @param  {string} verifyAlgorithm            algorithm used to verify\n    * @return {boolean} verification result\n    */\n    verifyMessageSignature(\n      metadata,\n      octetString: string,\n      signature: string | Buffer,\n      verifyAlgorithm?: string\n    ) {\n      const signCert = metadata.getX509Certificate(certUse.signing);\n      const signingScheme = getSigningScheme(verifyAlgorithm);\n      const key = new nrsa(utility.getPublicKeyPemFromCertificate(signCert), 'public', { signingScheme });\n      return key.verify(Buffer.from(octetString), Buffer.from(signature));\n    },\n    /**\n    * @desc Get the public key in string format\n    * @param  {string} x509Certificate certificate\n    * @return {string} public key\n    */\n    getKeyInfo(x509Certificate: string, signatureConfig: any = {}) {\n      const prefix = signatureConfig.prefix ? `${signatureConfig.prefix}:` : '';\n      return {\n        getKeyInfo: () => {\n          return `<${prefix}X509Data><${prefix}X509Certificate>${x509Certificate}</${prefix}X509Certificate></${prefix}X509Data>`;\n        },\n        getKey: () => {\n          return utility.getPublicKeyPemFromCertificate(x509Certificate).toString();\n        },\n      };\n    },\n    /**\n    * @desc Encrypt the assertion section in Response\n    * @param  {Entity} sourceEntity             source entity\n    * @param  {Entity} targetEntity             target entity\n    * @param  {string} xml                      response in xml string format\n    * @return {Promise} a promise to resolve the finalized xml\n    */\n    encryptAssertion(sourceEntity, targetEntity, xml?: string) {\n      // Implement encryption after signature if it has\n      return new Promise<string>((resolve, reject) => {\n\n        if (!xml) {\n          return reject(new Error('ERR_UNDEFINED_ASSERTION'));\n        }\n\n        const sourceEntitySetting = sourceEntity.entitySetting;\n        const targetEntityMetadata = targetEntity.entityMeta;\n        const { dom } = getContext();\n        const doc = dom.parseFromString(xml);\n        const assertions = select(\"//*[local-name(.)='Assertion']\", doc) as Node[];\n        if (!Array.isArray(assertions) || assertions.length === 0) {\n          throw new Error('ERR_NO_ASSERTION');\n        }\n        if (assertions.length > 1) {\n          throw new Error('ERR_MULTIPLE_ASSERTION');\n        }\n        const rawAssertionNode = assertions[0];\n\n        // Perform encryption depends on the setting, default is false\n        if (sourceEntitySetting.isAssertionEncrypted) {\n\n          const publicKeyPem = utility.getPublicKeyPemFromCertificate(targetEntityMetadata.getX509Certificate(certUse.encrypt));\n\n          xmlenc.encrypt(rawAssertionNode.toString(), {\n            // use xml-encryption module\n            rsa_pub: Buffer.from(publicKeyPem), // public key from certificate\n            pem: Buffer.from(`-----BEGIN CERTIFICATE-----${targetEntityMetadata.getX509Certificate(certUse.encrypt)}-----END CERTIFICATE-----`),\n            encryptionAlgorithm: sourceEntitySetting.dataEncryptionAlgorithm,\n            keyEncryptionAlgorithm: sourceEntitySetting.keyEncryptionAlgorithm,\n          }, (err, res) => {\n            if (err) {\n              console.error(err);\n              return reject(new Error('ERR_EXCEPTION_OF_ASSERTION_ENCRYPTION'));\n            }\n            if (!res) {\n              return reject(new Error('ERR_UNDEFINED_ENCRYPTED_ASSERTION'));\n            }\n            const { encryptedAssertion: encAssertionPrefix } = sourceEntitySetting.tagPrefix;\n            const encryptAssertionDoc = dom.parseFromString(`<${encAssertionPrefix}:EncryptedAssertion xmlns:${encAssertionPrefix}=\"${namespace.names.assertion}\">${res}</${encAssertionPrefix}:EncryptedAssertion>`);\n            doc.documentElement.replaceChild(encryptAssertionDoc.documentElement, rawAssertionNode);\n            return resolve(utility.base64Encode(doc.toString()));\n          });\n        } else {\n          return resolve(utility.base64Encode(xml)); // No need to do encryption\n        }\n      });\n    },\n    /**\n    * @desc Decrypt the assertion section in Response\n    * @param  {string} type             only accept SAMLResponse to proceed decryption\n    * @param  {Entity} here             this entity\n    * @param  {Entity} from             from the entity where the message is sent\n    * @param {string} entireXML         response in xml string format\n    * @return {function} a promise to get back the entire xml with decrypted assertion\n    */\n    decryptAssertion(here, entireXML: string) {\n      return new Promise<[string, any]>((resolve, reject) => {\n        // Implement decryption first then check the signature\n        if (!entireXML) {\n          return reject(new Error('ERR_UNDEFINED_ASSERTION'));\n        }\n        // Perform encryption depends on the setting of where the message is sent, default is false\n        const hereSetting = here.entitySetting;\n        const { dom  } = getContext();\n        const doc = dom.parseFromString(entireXML);\n        const encryptedAssertions = select(\"/*[contains(local-name(), 'Response')]/*[local-name(.)='EncryptedAssertion']\", doc) as Node[];\n        if (!Array.isArray(encryptedAssertions) || encryptedAssertions.length === 0) {\n          throw new Error('ERR_UNDEFINED_ENCRYPTED_ASSERTION');\n        }\n        if (encryptedAssertions.length > 1) {\n          throw new Error('ERR_MULTIPLE_ASSERTION');\n        }\n        const encAssertionNode = encryptedAssertions[0];\n\n        return xmlenc.decrypt(encAssertionNode.toString(), {\n          key: utility.readPrivateKey(hereSetting.encPrivateKey, hereSetting.encPrivateKeyPass),\n        }, (err, res) => {\n          if (err) {\n            console.error(err);\n            return reject(new Error('ERR_EXCEPTION_OF_ASSERTION_DECRYPTION'));\n          }\n          if (!res) {\n            return reject(new Error('ERR_UNDEFINED_ENCRYPTED_ASSERTION'));\n          }\n          const rawAssertionDoc = dom.parseFromString(res);\n          doc.documentElement.replaceChild(rawAssertionDoc.documentElement, encAssertionNode);\n          return resolve([doc.toString(), res]);\n        });\n      });\n    },\n    /**\n     * @desc Check if the xml string is valid and bounded\n     */\n    async isValidXml(input: string) {\n\n      // check if global api contains the validate function\n      const { validate } = getContext();\n\n      /**\n       * user can write a validate function that always returns\n       * a resolved promise and skip the validator even in\n       * production, user will take the responsibility if\n       * they intend to skip the validation\n       */\n      if (!validate) {\n\n        // otherwise, an error will be thrown\n        return Promise.reject('Your application is potentially vulnerable because no validation function found. Please read the documentation on how to setup the validator. (https://github.com/tngan/samlify#installation)');\n\n      }\n\n      try {\n        return await validate(input);\n      } catch (e) {\n        throw e;\n      }\n\n    },\n  };\n};\n\nexport default libSaml();\n", "\nvar XML_CHARACTER_MAP = {\n    '&': '&amp;',\n    '\"': '&quot;',\n    \"'\": '&apos;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\n\nfunction escapeForXML(string) {\n    return string && string.replace\n        ? string.replace(/([&\"<>'])/g, function(str, item) {\n            return XML_CHARACTER_MAP[item];\n          })\n        : string;\n}\n\nmodule.exports = escapeForXML;\n", "var escapeForXML = require('./escapeForXML');\nvar Stream = require('stream').Stream;\n\nvar DEFAULT_INDENT = '    ';\n\nfunction xml(input, options) {\n\n    if (typeof options !== 'object') {\n        options = {\n            indent: options\n        };\n    }\n\n    var stream      = options.stream ? new Stream() : null,\n        output      = \"\",\n        interrupted = false,\n        indent      = !options.indent ? ''\n                        : options.indent === true ? DEFAULT_INDENT\n                            : options.indent,\n        instant     = true;\n\n\n    function delay (func) {\n        if (!instant) {\n            func();\n        } else {\n            process.nextTick(func);\n        }\n    }\n\n    function append (interrupt, out) {\n        if (out !== undefined) {\n            output += out;\n        }\n        if (interrupt && !interrupted) {\n            stream = stream || new Stream();\n            interrupted = true;\n        }\n        if (interrupt && interrupted) {\n            var data = output;\n            delay(function () { stream.emit('data', data) });\n            output = \"\";\n        }\n    }\n\n    function add (value, last) {\n        format(append, resolve(value, indent, indent ? 1 : 0), last);\n    }\n\n    function end() {\n        if (stream) {\n            var data = output;\n            delay(function () {\n              stream.emit('data', data);\n              stream.emit('end');\n              stream.readable = false;\n              stream.emit('close');\n            });\n        }\n    }\n\n    function addXmlDeclaration(declaration) {\n        var encoding = declaration.encoding || 'UTF-8',\n            attr =  { version: '1.0', encoding: encoding };\n\n        if (declaration.standalone) {\n            attr.standalone = declaration.standalone\n        }\n\n        add({'?xml': { _attr: attr } });\n        output = output.replace('/>', '?>');\n    }\n\n    // disable delay delayed\n    delay(function () { instant = false });\n\n    if (options.declaration) {\n        addXmlDeclaration(options.declaration);\n    }\n\n    if (input && input.forEach) {\n        input.forEach(function (value, i) {\n            var last;\n            if (i + 1 === input.length)\n                last = end;\n            add(value, last);\n        });\n    } else {\n        add(input, end);\n    }\n\n    if (stream) {\n        stream.readable = true;\n        return stream;\n    }\n    return output;\n}\n\nfunction element (/*input, \u2026*/) {\n    var input = Array.prototype.slice.call(arguments),\n        self = {\n            _elem:  resolve(input)\n        };\n\n    self.push = function (input) {\n        if (!this.append) {\n            throw new Error(\"not assigned to a parent!\");\n        }\n        var that = this;\n        var indent = this._elem.indent;\n        format(this.append, resolve(\n            input, indent, this._elem.icount + (indent ? 1 : 0)),\n            function () { that.append(true) });\n    };\n\n    self.close = function (input) {\n        if (input !== undefined) {\n            this.push(input);\n        }\n        if (this.end) {\n            this.end();\n        }\n    };\n\n    return self;\n}\n\nfunction create_indent(character, count) {\n    return (new Array(count || 0).join(character || ''))\n}\n\nfunction resolve(data, indent, indent_count) {\n    indent_count = indent_count || 0;\n    var indent_spaces = create_indent(indent, indent_count);\n    var name;\n    var values = data;\n    var interrupt = false;\n\n    if (typeof data === 'object') {\n        var keys = Object.keys(data);\n        name = keys[0];\n        values = data[name];\n\n        if (values && values._elem) {\n            values._elem.name = name;\n            values._elem.icount = indent_count;\n            values._elem.indent = indent;\n            values._elem.indents = indent_spaces;\n            values._elem.interrupt = values;\n            return values._elem;\n        }\n    }\n\n    var attributes = [],\n        content = [];\n\n    var isStringContent;\n\n    function get_attributes(obj){\n        var keys = Object.keys(obj);\n        keys.forEach(function(key){\n            attributes.push(attribute(key, obj[key]));\n        });\n    }\n\n    switch(typeof values) {\n        case 'object':\n            if (values === null) break;\n\n            if (values._attr) {\n                get_attributes(values._attr);\n            }\n\n            if (values._cdata) {\n                content.push(\n                    ('<![CDATA[' + values._cdata).replace(/\\]\\]>/g, ']]]]><![CDATA[>') + ']]>'\n                );\n            }\n\n            if (values.forEach) {\n                isStringContent = false;\n                content.push('');\n                values.forEach(function(value) {\n                    if (typeof value == 'object') {\n                        var _name = Object.keys(value)[0];\n\n                        if (_name == '_attr') {\n                            get_attributes(value._attr);\n                        } else {\n                            content.push(resolve(\n                                value, indent, indent_count + 1));\n                        }\n                    } else {\n                        //string\n                        content.pop();\n                        isStringContent=true;\n                        content.push(escapeForXML(value));\n                    }\n\n                });\n                if (!isStringContent) {\n                    content.push('');\n                }\n            }\n        break;\n\n        default:\n            //string\n            content.push(escapeForXML(values));\n\n    }\n\n    return {\n        name:       name,\n        interrupt:  interrupt,\n        attributes: attributes,\n        content:    content,\n        icount:     indent_count,\n        indents:    indent_spaces,\n        indent:     indent\n    };\n}\n\nfunction format(append, elem, end) {\n\n    if (typeof elem != 'object') {\n        return append(false, elem);\n    }\n\n    var len = elem.interrupt ? 1 : elem.content.length;\n\n    function proceed () {\n        while (elem.content.length) {\n            var value = elem.content.shift();\n\n            if (value === undefined) continue;\n            if (interrupt(value)) return;\n\n            format(append, value);\n        }\n\n        append(false, (len > 1 ? elem.indents : '')\n            + (elem.name ? '</' + elem.name + '>' : '')\n            + (elem.indent && !end ? '\\n' : ''));\n\n        if (end) {\n            end();\n        }\n    }\n\n    function interrupt(value) {\n       if (value.interrupt) {\n           value.interrupt.append = append;\n           value.interrupt.end = proceed;\n           value.interrupt = false;\n           append(true);\n           return true;\n       }\n       return false;\n    }\n\n    append(false, elem.indents\n        + (elem.name ? '<' + elem.name : '')\n        + (elem.attributes.length ? ' ' + elem.attributes.join(' ') : '')\n        + (len ? (elem.name ? '>' : '') : (elem.name ? '/>' : ''))\n        + (elem.indent && len > 1 ? '\\n' : ''));\n\n    if (!len) {\n        return append(false, elem.indent ? '\\n' : '');\n    }\n\n    if (!interrupt(elem)) {\n        proceed();\n    }\n}\n\nfunction attribute(key, value) {\n    return key + '=' + '\"' + escapeForXML(value) + '\"';\n}\n\nmodule.exports = xml;\nmodule.exports.element = module.exports.Element = element;\n", "/**\n* @file metadata-idp.ts\n* @author tngan\n* @desc  Metadata of identity provider\n*/\nimport Metadata, { MetadataInterface } from './metadata';\nimport { MetadataIdpOptions, MetadataIdpConstructor } from './types';\nimport { namespace } from './urn';\nimport libsaml from './libsaml';\nimport { castArrayOpt, isNonEmptyArray, isString } from './utility';\nimport xml from 'xml';\n\nexport interface IdpMetadataInterface extends MetadataInterface {\n\n}\n\n/*\n * @desc interface function\n */\nexport default function(meta: MetadataIdpConstructor) {\n  return new IdpMetadata(meta);\n}\n\nexport class IdpMetadata extends Metadata {\n\n  constructor(meta: MetadataIdpConstructor) {\n\n    const isFile = isString(meta) || meta instanceof Buffer;\n\n    if (!isFile) {\n\n      const {\n        entityID,\n        signingCert,\n        encryptCert,\n        wantAuthnRequestsSigned = false,\n        nameIDFormat = [],\n        singleSignOnService = [],\n        singleLogoutService = [],\n      } = meta as MetadataIdpOptions;\n\n      const IDPSSODescriptor: any[] = [{\n        _attr: {\n          WantAuthnRequestsSigned: String(wantAuthnRequestsSigned),\n          protocolSupportEnumeration: namespace.names.protocol,\n        },\n      }];\n\n      for(const cert of castArrayOpt(signingCert)) {\n        IDPSSODescriptor.push(libsaml.createKeySection('signing', cert));\n      }\n\n      for(const cert of castArrayOpt(encryptCert)) {\n        IDPSSODescriptor.push(libsaml.createKeySection('encryption', cert));\n      }\n\n      if (isNonEmptyArray(nameIDFormat)) {\n        nameIDFormat.forEach(f => IDPSSODescriptor.push({ NameIDFormat: f }));\n      }\n\n      if (isNonEmptyArray(singleSignOnService)) {\n        singleSignOnService.forEach((a, indexCount) => {\n          const attr: any = {\n            Binding: a.Binding,\n            Location: a.Location,\n          };\n          if (a.isDefault) {\n            attr.isDefault = true;\n          }\n          IDPSSODescriptor.push({ SingleSignOnService: [{ _attr: attr }] });\n        });\n      } else {\n        throw new Error('ERR_IDP_METADATA_MISSING_SINGLE_SIGN_ON_SERVICE');\n      }\n\n      if (isNonEmptyArray(singleLogoutService)) {\n        singleLogoutService.forEach((a, indexCount) => {\n          const attr: any = {};\n          if (a.isDefault) {\n            attr.isDefault = true;\n          }\n          attr.Binding = a.Binding;\n          attr.Location = a.Location;\n          IDPSSODescriptor.push({ SingleLogoutService: [{ _attr: attr }] });\n        });\n      } else {\n        console.warn('Construct identity  provider - missing endpoint of SingleLogoutService');\n      }\n      // Create a new metadata by setting\n      meta = xml([{\n        EntityDescriptor: [{\n          _attr: {\n            'xmlns': namespace.names.metadata,\n            'xmlns:assertion': namespace.names.assertion,\n            'xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n            entityID,\n          },\n        }, { IDPSSODescriptor }],\n      }]);\n    }\n\n    super(meta as string | Buffer, [\n      {\n        key: 'wantAuthnRequestsSigned',\n        localPath: ['EntityDescriptor', 'IDPSSODescriptor'],\n        attributes: ['WantAuthnRequestsSigned'],\n      },\n      {\n        key: 'singleSignOnService',\n        localPath: ['EntityDescriptor', 'IDPSSODescriptor', 'SingleSignOnService'],\n        index: ['Binding'],\n        attributePath: [],\n        attributes: ['Location']\n      },\n    ]);\n\n  }\n\n  /**\n  * @desc Get the preference whether it wants a signed request\n  * @return {boolean} WantAuthnRequestsSigned\n  */\n  isWantAuthnRequestsSigned(): boolean {\n    const was = this.meta.wantAuthnRequestsSigned;\n    if (was === undefined) {\n      return false;\n    }\n    return String(was) === 'true';\n  }\n\n  /**\n  * @desc Get the entity endpoint for single sign on service\n  * @param  {string} binding      protocol binding (e.g. redirect, post)\n  * @return {string/object} location\n  */\n  getSingleSignOnService(binding: string): string | object {\n    if (isString(binding)) {\n      const bindName = namespace.binding[binding];\n      const service = this.meta.singleSignOnService[bindName];\n      if (service) {\n        return service;\n      }\n    }\n    return this.meta.singleSignOnService;\n  }\n}\n", "/**\n* @file metadata-sp.ts\n* @author tngan\n* @desc  Metadata of service provider\n*/\nimport Metadata, { MetadataInterface } from './metadata';\nimport { MetadataSpConstructor, MetadataSpOptions } from './types';\nimport { namespace, elementsOrder as order } from './urn';\nimport libsaml from './libsaml';\nimport { castArrayOpt, isNonEmptyArray, isString } from './utility';\nimport xml from 'xml';\n\nexport interface SpMetadataInterface extends MetadataInterface {\n\n}\n\n// https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf (P.16, 18)\ninterface MetaElement {\n  KeyDescriptor?: any[];\n  NameIDFormat?: any[];\n  SingleLogoutService?: any[];\n  AssertionConsumerService?: any[];\n  AttributeConsumingService?: any[];\n}\n\n/*\n * @desc interface function\n */\nexport default function(meta: MetadataSpConstructor) {\n  return new SpMetadata(meta);\n}\n\n/**\n* @desc SP Metadata is for creating Service Provider, provides a set of API to manage the actions in SP.\n*/\nexport class SpMetadata extends Metadata {\n\n  /**\n  * @param  {object/string} meta (either xml string or configuration in object)\n  * @return {object} prototypes including public functions\n  */\n  constructor(meta: MetadataSpConstructor) {\n\n    const isFile = isString(meta) || meta instanceof Buffer;\n\n    // use object configuration instead of importing metadata file directly\n    if (!isFile) {\n\n      const {\n        elementsOrder = order.default,\n        entityID,\n        signingCert,\n        encryptCert,\n        authnRequestsSigned = false,\n        wantAssertionsSigned = false,\n        wantMessageSigned = false,\n        signatureConfig,\n        nameIDFormat = [],\n        singleLogoutService = [],\n        assertionConsumerService = [],\n      } = meta as MetadataSpOptions;\n\n      const descriptors: MetaElement = {\n        KeyDescriptor: [],\n        NameIDFormat: [],\n        SingleLogoutService: [],\n        AssertionConsumerService: [],\n        AttributeConsumingService: [],\n      };\n\n      const SPSSODescriptor: any[] = [{\n        _attr: {\n          AuthnRequestsSigned: String(authnRequestsSigned),\n          WantAssertionsSigned: String(wantAssertionsSigned),\n          protocolSupportEnumeration: namespace.names.protocol,\n        },\n      }];\n\n      if (wantMessageSigned && signatureConfig === undefined) {\n        console.warn('Construct service provider - missing signatureConfig');\n      }\n\n      for(const cert of castArrayOpt(signingCert)) {\n        descriptors.KeyDescriptor!.push(libsaml.createKeySection('signing', cert).KeyDescriptor);\n      }\n\n      for(const cert of castArrayOpt(encryptCert)) {\n        descriptors.KeyDescriptor!.push(libsaml.createKeySection('encryption', cert).KeyDescriptor);\n      }\n\n      if (isNonEmptyArray(nameIDFormat)) {\n        nameIDFormat.forEach(f => descriptors.NameIDFormat!.push(f));\n      } else {\n        // default value\n        descriptors.NameIDFormat!.push(namespace.format.emailAddress);\n      }\n\n      if (isNonEmptyArray(singleLogoutService)) {\n        singleLogoutService.forEach(a => {\n          const attr: any = {\n            Binding: a.Binding,\n            Location: a.Location,\n          };\n          if (a.isDefault) {\n            attr.isDefault = true;\n          }\n          descriptors.SingleLogoutService!.push([{ _attr: attr }]);\n        });\n      }\n\n      if (isNonEmptyArray(assertionConsumerService)) {\n        let indexCount = 0;\n        assertionConsumerService.forEach(a => {\n          const attr: any = {\n            index: String(indexCount++),\n            Binding: a.Binding,\n            Location: a.Location,\n          };\n          if (a.isDefault) {\n            attr.isDefault = true;\n          }\n          descriptors.AssertionConsumerService!.push([{ _attr: attr }]);\n        });\n      } else {\n        // console.warn('Missing endpoint of AssertionConsumerService');\n      }\n\n      // handle element order\n      const existedElements = elementsOrder.filter(name => isNonEmptyArray(descriptors[name]));\n      existedElements.forEach(name => {\n        descriptors[name].forEach(e => SPSSODescriptor.push({ [name]: e }));\n      });\n\n      // Re-assign the meta reference as a XML string|Buffer for use with the parent constructor\n      meta = xml([{\n        EntityDescriptor: [{\n          _attr: {\n            entityID,\n            'xmlns': namespace.names.metadata,\n            'xmlns:assertion': namespace.names.assertion,\n            'xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n          },\n        }, { SPSSODescriptor }],\n      }]);\n\n    }\n\n    // Use the re-assigned meta object reference here\n    super(meta as string | Buffer, [\n      {\n        key: 'spSSODescriptor',\n        localPath: ['EntityDescriptor', 'SPSSODescriptor'],\n        attributes: ['WantAssertionsSigned', 'AuthnRequestsSigned'],\n      },\n      {\n        key: 'assertionConsumerService',\n        localPath: ['EntityDescriptor', 'SPSSODescriptor', 'AssertionConsumerService'],\n        attributes: ['Binding', 'Location', 'isDefault', 'index'],\n      }\n    ]);\n\n  }\n\n  /**\n  * @desc Get the preference whether it wants a signed assertion response\n  * @return {boolean} Wantassertionssigned\n  */\n  public isWantAssertionsSigned(): boolean {\n    return this.meta.spSSODescriptor.wantAssertionsSigned === 'true';\n  }\n  /**\n  * @desc Get the preference whether it signs request\n  * @return {boolean} Authnrequestssigned\n  */\n  public isAuthnRequestSigned(): boolean {\n    return this.meta.spSSODescriptor.authnRequestsSigned === 'true';\n  }\n  /**\n  * @desc Get the entity endpoint for assertion consumer service\n  * @param  {string} binding         protocol binding (e.g. redirect, post)\n  * @return {string/[string]} URL of endpoint(s)\n  */\n  public getAssertionConsumerService(binding: string): string | string[] {\n    if (isString(binding)) {\n      let location;\n      const bindName = namespace.binding[binding];\n      if (isNonEmptyArray(this.meta.assertionConsumerService)) {\n        this.meta.assertionConsumerService.forEach(obj => {\n          if (obj.binding === bindName) {\n            location = obj.location;\n            return;\n          }\n        });\n      } else {\n        if (this.meta.assertionConsumerService.binding === bindName) {\n          location = this.meta.assertionConsumerService.location;\n        }\n      }\n      return location;\n    }\n    return this.meta.assertionConsumerService;\n  }\n}\n", "import libDefault from 'url';\nmodule.exports = libDefault;", "/**\n* @file binding-redirect.ts\n* @author tngan\n* @desc Binding-level API, declare the functions using Redirect binding\n*/\nimport utility, { get } from './utility';\nimport libsaml from './libsaml';\nimport { BindingContext } from './entity';\nimport { IdentityProvider as Idp } from './entity-idp';\nimport { ServiceProvider as Sp } from './entity-sp';\nimport * as url from 'url';\nimport { wording, namespace } from './urn';\n\nconst binding = wording.binding;\nconst urlParams = wording.urlParams;\n\nexport interface BuildRedirectConfig {\n  baseUrl: string;\n  type: string;\n  isSigned: boolean;\n  context: string;\n  entitySetting: any;\n  relayState?: string;\n}\n\n/**\n* @private\n* @desc Helper of generating URL param/value pair\n* @param  {string} param     key\n* @param  {string} value     value of key\n* @param  {boolean} first    determine whether the param is the starting one in order to add query header '?'\n* @return {string}\n*/\nfunction pvPair(param: string, value: string, first?: boolean): string {\n  return (first === true ? '?' : '&') + param + '=' + value;\n}\n/**\n* @private\n* @desc Refractored part of URL generation for login/logout request\n* @param  {string} type\n* @param  {boolean} isSigned\n* @param  {string} rawSamlRequest\n* @param  {object} entitySetting\n* @return {string}\n*/\nfunction buildRedirectURL(opts: BuildRedirectConfig) {\n  const {\n    baseUrl,\n    type,\n    isSigned,\n    context,\n    entitySetting,\n  } = opts;\n  let { relayState = '' } = opts;\n  const noParams = (url.parse(baseUrl).query || []).length === 0;\n  const queryParam = libsaml.getQueryParamByType(type);\n  // In general, this xmlstring is required to do deflate -> base64 -> urlencode\n  const samlRequest = encodeURIComponent(utility.base64Encode(utility.deflateString(context)));\n  if (relayState !== '') {\n    relayState = pvPair(urlParams.relayState, encodeURIComponent(relayState));\n  }\n  if (isSigned) {\n    const sigAlg = pvPair(urlParams.sigAlg, encodeURIComponent(entitySetting.requestSignatureAlgorithm));\n    const octetString = samlRequest + relayState + sigAlg;\n    return baseUrl\n      + pvPair(queryParam, octetString, noParams)\n      + pvPair(urlParams.signature, encodeURIComponent(\n        libsaml.constructMessageSignature(\n          queryParam + '=' + octetString,\n          entitySetting.privateKey,\n          entitySetting.privateKeyPass,\n          undefined,\n          entitySetting.requestSignatureAlgorithm\n        ).toString()\n      )\n      );\n  }\n  return baseUrl + pvPair(queryParam, samlRequest + relayState, noParams);\n}\n/**\n* @desc Redirect URL for login request\n* @param  {object} entity                       object includes both idp and sp\n* @param  {function} customTagReplacement      used when developers have their own login response template\n* @return {string} redirect URL\n*/\nfunction loginRequestRedirectURL(entity: { idp: Idp, sp: Sp }, customTagReplacement?: (template: string) => BindingContext): BindingContext {\n\n  const metadata: any = { idp: entity.idp.entityMeta, sp: entity.sp.entityMeta };\n  const spSetting: any = entity.sp.entitySetting;\n  let id: string = '';\n\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.idp.getSingleSignOnService(binding.redirect);\n    let rawSamlRequest: string;\n    if (spSetting.loginRequestTemplate && customTagReplacement) {\n      const info = customTagReplacement(spSetting.loginRequestTemplate);\n      id = get(info, 'id', null);\n      rawSamlRequest = get(info, 'context', null);\n    } else {\n      const nameIDFormat = spSetting.nameIDFormat;\n      const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n      id = spSetting.generateID();\n      rawSamlRequest = libsaml.replaceTagsByValue(libsaml.defaultLoginRequestTemplate.context, {\n        ID: id,\n        Destination: base,\n        Issuer: metadata.sp.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        NameIDFormat: selectedNameIDFormat,\n        AssertionConsumerServiceURL: metadata.sp.getAssertionConsumerService(binding.post),\n        EntityID: metadata.sp.getEntityID(),\n        AllowCreate: spSetting.allowCreate,\n      } as any);\n    }\n    return {\n      id,\n      context: buildRedirectURL({\n        context: rawSamlRequest,\n        type: urlParams.samlRequest,\n        isSigned: metadata.sp.isAuthnRequestSigned(),\n        entitySetting: spSetting,\n        baseUrl: base,\n        relayState: spSetting.relayState,\n      }),\n    };\n  }\n  throw new Error('ERR_GENERATE_REDIRECT_LOGIN_REQUEST_MISSING_METADATA');\n}\n\n/**\n* @desc Redirect URL for login response\n* @param  {object} requestInfo             corresponding request, used to obtain the id\n* @param  {object} entity                      object includes both idp and sp\n* @param  {object} user                         current logged user (e.g. req.user)\n* @param  {String} relayState                the relaystate sent by sp corresponding request\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nfunction loginResponseRedirectURL(requestInfo: any, entity: any, user: any = {}, relayState?: string, customTagReplacement?: (template: string) => BindingContext): BindingContext {\n  const idpSetting = entity.idp.entitySetting;\n  const spSetting = entity.sp.entitySetting;\n  const metadata = {\n    idp: entity.idp.entityMeta,\n    sp: entity.sp.entityMeta,\n  };\n\n  let id: string = idpSetting.generateID();\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.sp.getAssertionConsumerService(binding.redirect);\n    let rawSamlResponse: string;\n    //\n    const nameIDFormat = idpSetting.nameIDFormat;\n    const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n    const nowTime = new Date();\n    // Five minutes later : nowtime  + 5 * 60 * 1000 (in milliseconds)\n    const fiveMinutesLaterTime = new Date(nowTime.getTime() + 300_000);\n    const tvalue: any = {\n      ID: id,\n      AssertionID: idpSetting.generateID(),\n      Destination: base,\n      SubjectRecipient: base,\n      Issuer: metadata.idp.getEntityID(),\n      Audience: metadata.sp.getEntityID(),\n      EntityID: metadata.sp.getEntityID(),\n      IssueInstant: nowTime.toISOString(),\n      AssertionConsumerServiceURL: base,\n      StatusCode: namespace.statusCode.success,\n      // can be customized\n      ConditionsNotBefore: nowTime.toISOString(),\n      ConditionsNotOnOrAfter: fiveMinutesLaterTime.toISOString(),\n      SubjectConfirmationDataNotOnOrAfter: fiveMinutesLaterTime.toISOString(),\n      NameIDFormat: selectedNameIDFormat,\n      NameID: user.email || '',\n      InResponseTo: get(requestInfo, 'extract.request.id', ''),\n      AuthnStatement: '',\n      AttributeStatement: '',\n    };\n\n    if (idpSetting.loginResponseTemplate && customTagReplacement) {\n      const template = customTagReplacement(idpSetting.loginResponseTemplate.context);\n      id = get(template, 'id', null);\n      rawSamlResponse = get(template, 'context', null);\n    } else {\n\n      if (requestInfo !== null) {\n        tvalue.InResponseTo = requestInfo.extract.request.id;\n      }\n      rawSamlResponse = libsaml.replaceTagsByValue(libsaml.defaultLoginResponseTemplate.context, tvalue);\n    }\n\n    const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm } = idpSetting;\n    const config = {\n      privateKey,\n      privateKeyPass,\n      signatureAlgorithm,\n      signingCert: metadata.idp.getX509Certificate('signing'),\n      isBase64Output: false,\n    };\n    // step: sign assertion ? -> encrypted ? -> sign message ?\n    if (metadata.sp.isWantAssertionsSigned()) {\n      rawSamlResponse = libsaml.constructSAMLSignature({\n        ...config,\n        rawSamlMessage: rawSamlResponse,\n        transformationAlgorithms: spSetting.transformationAlgorithms,\n        referenceTagXPath: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']\",\n        signatureConfig: {\n          prefix: 'ds',\n          location: { reference: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']/*[local-name(.)='Issuer']\", action: 'after' },\n        },\n      });\n    }\n\n    // Like in post binding, SAML response is always signed\n    return {\n      id,\n      context: buildRedirectURL({\n        baseUrl: base,\n        type: urlParams.samlResponse,\n        isSigned: true,\n        context: rawSamlResponse,\n        entitySetting: idpSetting,\n        relayState,\n      }),\n    };\n  }\n  throw new Error('ERR_GENERATE_REDIRECT_LOGIN_RESPONSE_MISSING_METADATA');\n}\n\n/**\n* @desc Redirect URL for logout request\n* @param  {object} user                        current logged user (e.g. req.user)\n* @param  {object} entity                      object includes both idp and sp\n* @param  {function} customTagReplacement     used when developers have their own login response template\n* @return {string} redirect URL\n*/\nfunction logoutRequestRedirectURL(user, entity, relayState?: string, customTagReplacement?: (template: string, tags: object) => BindingContext): BindingContext {\n  const metadata = { init: entity.init.entityMeta, target: entity.target.entityMeta };\n  const initSetting = entity.init.entitySetting;\n  let id: string = initSetting.generateID();\n  const nameIDFormat = initSetting.nameIDFormat;\n  const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n\n  if (metadata && metadata.init && metadata.target) {\n    const base = metadata.target.getSingleLogoutService(binding.redirect);\n    let rawSamlRequest: string = '';\n    const requiredTags = {\n      ID: id,\n      Destination: base,\n      EntityID: metadata.init.getEntityID(),\n      Issuer: metadata.init.getEntityID(),\n      IssueInstant: new Date().toISOString(),\n      NameIDFormat: selectedNameIDFormat,\n      NameID: user.logoutNameID,\n      SessionIndex: user.sessionIndex,\n    };\n    if (initSetting.logoutRequestTemplate && customTagReplacement) {\n      const info = customTagReplacement(initSetting.logoutRequestTemplate, requiredTags);\n      id = get(info, 'id', null);\n      rawSamlRequest = get(info, 'context', null);\n    } else {\n      rawSamlRequest = libsaml.replaceTagsByValue(libsaml.defaultLogoutRequestTemplate.context, requiredTags as any);\n    }\n    return {\n      id,\n      context: buildRedirectURL({\n        context: rawSamlRequest,\n        relayState,\n        type: urlParams.logoutRequest,\n        isSigned: entity.target.entitySetting.wantLogoutRequestSigned,\n        entitySetting: initSetting,\n        baseUrl: base,\n      }),\n    };\n  }\n  throw new Error('ERR_GENERATE_REDIRECT_LOGOUT_REQUEST_MISSING_METADATA');\n}\n/**\n* @desc Redirect URL for logout response\n* @param  {object} requescorresponding request, used to obtain the id\n* @param  {object} entity                      object includes both idp and sp\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nfunction logoutResponseRedirectURL(requestInfo: any, entity: any, relayState?: string, customTagReplacement?: (template: string) => BindingContext): BindingContext {\n  const metadata = {\n    init: entity.init.entityMeta,\n    target: entity.target.entityMeta,\n  };\n  const initSetting = entity.init.entitySetting;\n  let id: string = initSetting.generateID();\n  if (metadata && metadata.init && metadata.target) {\n    const base = metadata.target.getSingleLogoutService(binding.redirect);\n    let rawSamlResponse: string;\n    if (initSetting.logoutResponseTemplate && customTagReplacement) {\n      const template = customTagReplacement(initSetting.logoutResponseTemplate);\n      id = get(template, 'id', null);\n      rawSamlResponse = get(template, 'context', null);\n    } else {\n      const tvalue: any = {\n        ID: id,\n        Destination: base,\n        Issuer: metadata.init.getEntityID(),\n        EntityID: metadata.init.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        StatusCode: namespace.statusCode.success,\n      };\n      if (requestInfo && requestInfo.extract && requestInfo.extract.request) {\n        tvalue.InResponseTo = requestInfo.extract.request.id;\n      }\n      rawSamlResponse = libsaml.replaceTagsByValue(libsaml.defaultLogoutResponseTemplate.context, tvalue);\n    }\n    return {\n      id,\n      context: buildRedirectURL({\n        baseUrl: base,\n        type: urlParams.logoutResponse,\n        isSigned: entity.target.entitySetting.wantLogoutResponseSigned,\n        context: rawSamlResponse,\n        entitySetting: initSetting,\n        relayState,\n      }),\n    };\n  }\n  throw new Error('ERR_GENERATE_REDIRECT_LOGOUT_RESPONSE_MISSING_METADATA');\n}\n\nconst redirectBinding = {\n  loginRequestRedirectURL,\n  loginResponseRedirectURL,\n  logoutRequestRedirectURL,\n  logoutResponseRedirectURL,\n};\n\nexport default redirectBinding;\n", "/**\n* @file binding-post.ts\n* @author tngan\n* @desc Binding-level API, declare the functions using POST binding\n*/\n\nimport { wording, namespace, StatusCode } from './urn';\nimport { BindingContext } from './entity';\nimport libsaml from './libsaml';\nimport utility, { get } from './utility';\n\nconst binding = wording.binding;\n\n/**\n* @desc Generate a base64 encoded login request\n* @param  {string} referenceTagXPath           reference uri\n* @param  {object} entity                      object includes both idp and sp\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nfunction base64LoginRequest(referenceTagXPath: string, entity: any, customTagReplacement?: (template: string) => BindingContext): BindingContext {\n  const metadata = { idp: entity.idp.entityMeta, sp: entity.sp.entityMeta };\n  const spSetting = entity.sp.entitySetting;\n  let id: string = '';\n\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.idp.getSingleSignOnService(binding.post);\n    let rawSamlRequest: string;\n    if (spSetting.loginRequestTemplate && customTagReplacement) {\n      const info = customTagReplacement(spSetting.loginRequestTemplate.context);\n      id = get(info, 'id', null);\n      rawSamlRequest = get(info, 'context', null);\n    } else {\n      const nameIDFormat = spSetting.nameIDFormat;\n      const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n      id = spSetting.generateID();\n      rawSamlRequest = libsaml.replaceTagsByValue(libsaml.defaultLoginRequestTemplate.context, {\n        ID: id,\n        Destination: base,\n        Issuer: metadata.sp.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        AssertionConsumerServiceURL: metadata.sp.getAssertionConsumerService(binding.post),\n        EntityID: metadata.sp.getEntityID(),\n        AllowCreate: spSetting.allowCreate,\n        NameIDFormat: selectedNameIDFormat\n      } as any);\n    }\n    if (metadata.idp.isWantAuthnRequestsSigned()) {\n      const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm, transformationAlgorithms } = spSetting;\n      return {\n        id,\n        context: libsaml.constructSAMLSignature({\n          referenceTagXPath,\n          privateKey,\n          privateKeyPass,\n          signatureAlgorithm,\n          transformationAlgorithms,\n          rawSamlMessage: rawSamlRequest,\n          signingCert: metadata.sp.getX509Certificate('signing'),\n          signatureConfig: spSetting.signatureConfig || {\n            prefix: 'ds',\n            location: { reference: \"/*[local-name(.)='AuthnRequest']/*[local-name(.)='Issuer']\", action: 'after' },\n          }\n        }),\n      };\n    }\n    // No need to embeded XML signature\n    return {\n      id,\n      context: utility.base64Encode(rawSamlRequest),\n    };\n  }\n  throw new Error('ERR_GENERATE_POST_LOGIN_REQUEST_MISSING_METADATA');\n}\n/**\n* @desc Generate a base64 encoded login response\n* @param  {object} requestInfo                 corresponding request, used to obtain the id\n* @param  {object} entity                      object includes both idp and sp\n* @param  {object} user                        current logged user (e.g. req.user)\n* @param  {function} customTagReplacement     used when developers have their own login response template\n* @param  {boolean}  encryptThenSign           whether or not to encrypt then sign first (if signing). Defaults to sign-then-encrypt\n*/\nasync function base64LoginResponse(requestInfo: any = {}, entity: any, user: any = {}, customTagReplacement?: (template: string) => BindingContext, encryptThenSign: boolean = false): Promise<BindingContext> {\n  const idpSetting = entity.idp.entitySetting;\n  const spSetting = entity.sp.entitySetting;\n  const id = idpSetting.generateID();\n  const metadata = {\n    idp: entity.idp.entityMeta,\n    sp: entity.sp.entityMeta,\n  };\n  const nameIDFormat = idpSetting.nameIDFormat;\n  const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.sp.getAssertionConsumerService(binding.post);\n    let rawSamlResponse: string;\n    const nowTime = new Date();\n    const spEntityID = metadata.sp.getEntityID();\n    const fiveMinutesLaterTime = new Date(nowTime.getTime());\n    fiveMinutesLaterTime.setMinutes(fiveMinutesLaterTime.getMinutes() + 5);\n    const fiveMinutesLater = fiveMinutesLaterTime.toISOString();\n    const now = nowTime.toISOString();\n    const acl = metadata.sp.getAssertionConsumerService(binding.post);\n    const tvalue: any = {\n      ID: id,\n      AssertionID: idpSetting.generateID(),\n      Destination: base,\n      Audience: spEntityID,\n      EntityID: spEntityID,\n      SubjectRecipient: acl,\n      Issuer: metadata.idp.getEntityID(),\n      IssueInstant: now,\n      AssertionConsumerServiceURL: acl,\n      StatusCode: StatusCode.Success,\n      // can be customized\n      ConditionsNotBefore: now,\n      ConditionsNotOnOrAfter: fiveMinutesLater,\n      SubjectConfirmationDataNotOnOrAfter: fiveMinutesLater,\n      NameIDFormat: selectedNameIDFormat,\n      NameID: user.email || '',\n      InResponseTo: get(requestInfo, 'extract.request.id', ''),\n      AuthnStatement: '',\n      AttributeStatement: '',\n    };\n    if (idpSetting.loginResponseTemplate && customTagReplacement) {\n      const template = customTagReplacement(idpSetting.loginResponseTemplate.context);\n      rawSamlResponse = get(template, 'context', null);\n    } else {\n      if (requestInfo !== null) {\n        tvalue.InResponseTo = requestInfo.extract.request.id;\n      }\n      rawSamlResponse = libsaml.replaceTagsByValue(libsaml.defaultLoginResponseTemplate.context, tvalue);\n    }\n    const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm } = idpSetting;\n    const config = {\n      privateKey,\n      privateKeyPass,\n      signatureAlgorithm,\n      signingCert: metadata.idp.getX509Certificate('signing'),\n      isBase64Output: false,\n    };\n    // step: sign assertion ? -> encrypted ? -> sign message ?\n    if (metadata.sp.isWantAssertionsSigned()) {\n      // console.debug('sp wants assertion signed');\n      rawSamlResponse = libsaml.constructSAMLSignature({\n        ...config,\n        rawSamlMessage: rawSamlResponse,\n        transformationAlgorithms: spSetting.transformationAlgorithms,\n        referenceTagXPath: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']\",\n        signatureConfig: {\n          prefix: 'ds',\n          location: { reference: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']/*[local-name(.)='Issuer']\", action: 'after' },\n        },\n      });\n    }\n\n    // console.debug('after assertion signed', rawSamlResponse);\n\n    // SAML response must be signed sign message first, then encrypt\n    if (!encryptThenSign && (spSetting.wantMessageSigned || !metadata.sp.isWantAssertionsSigned())) {\n      // console.debug('sign then encrypt and sign entire message');\n      rawSamlResponse = libsaml.constructSAMLSignature({\n        ...config,\n        rawSamlMessage: rawSamlResponse,\n        isMessageSigned: true,\n        transformationAlgorithms: spSetting.transformationAlgorithms,\n        signatureConfig: spSetting.signatureConfig || {\n          prefix: 'ds',\n          location: { reference: \"/*[local-name(.)='Response']/*[local-name(.)='Issuer']\", action: 'after' },\n        },\n      });\n    }\n\n    // console.debug('after message signed', rawSamlResponse);\n\n    if (idpSetting.isAssertionEncrypted) {\n      // console.debug('idp is configured to do encryption');\n      const context = await libsaml.encryptAssertion(entity.idp, entity.sp, rawSamlResponse);\n      if (encryptThenSign) {\n        //need to decode it\n        rawSamlResponse = utility.base64Decode(context) as string;\n      } else {\n        return Promise.resolve({ id, context });\n      }\n    }\n\n    //sign after encrypting\n    if (encryptThenSign && (spSetting.wantMessageSigned || !metadata.sp.isWantAssertionsSigned())) {\n      rawSamlResponse = libsaml.constructSAMLSignature({\n        ...config,\n        rawSamlMessage: rawSamlResponse,\n        isMessageSigned: true,\n        transformationAlgorithms: spSetting.transformationAlgorithms,\n        signatureConfig: spSetting.signatureConfig || {\n          prefix: 'ds',\n          location: { reference: \"/*[local-name(.)='Response']/*[local-name(.)='Issuer']\", action: 'after' },\n        },\n      });\n    }\n\n    return Promise.resolve({\n      id,\n      context: utility.base64Encode(rawSamlResponse),\n    });\n\n  }\n  throw new Error('ERR_GENERATE_POST_LOGIN_RESPONSE_MISSING_METADATA');\n}\n/**\n* @desc Generate a base64 encoded logout request\n* @param  {object} user                         current logged user (e.g. req.user)\n* @param  {string} referenceTagXPath            reference uri\n* @param  {object} entity                       object includes both idp and sp\n* @param  {function} customTagReplacement      used when developers have their own login response template\n* @return {string} base64 encoded request\n*/\nfunction base64LogoutRequest(user, referenceTagXPath, entity, customTagReplacement?: (template: string) => BindingContext): BindingContext {\n  const metadata = { init: entity.init.entityMeta, target: entity.target.entityMeta };\n  const initSetting = entity.init.entitySetting;\n  const nameIDFormat = initSetting.nameIDFormat;\n  const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;  let id: string = '';\n  if (metadata && metadata.init && metadata.target) {\n    let rawSamlRequest: string;\n    if (initSetting.logoutRequestTemplate && customTagReplacement) {\n      const template = customTagReplacement(initSetting.logoutRequestTemplate.context);\n      id = get(template, 'id', null);\n      rawSamlRequest = get(template, 'context', null);\n    } else {\n      id = initSetting.generateID();\n      const tvalue: any = {\n        ID: id,\n        Destination: metadata.target.getSingleLogoutService(binding.post),\n        Issuer: metadata.init.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        EntityID: metadata.init.getEntityID(),\n        NameIDFormat: selectedNameIDFormat,\n        NameID: user.logoutNameID,\n      };\n      rawSamlRequest = libsaml.replaceTagsByValue(libsaml.defaultLogoutRequestTemplate.context, tvalue);\n    }\n    if (entity.target.entitySetting.wantLogoutRequestSigned) {\n      // Need to embeded XML signature\n      const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm, transformationAlgorithms  } = initSetting;\n      return {\n        id,\n        context: libsaml.constructSAMLSignature({\n          referenceTagXPath,\n          privateKey,\n          privateKeyPass,\n          signatureAlgorithm,\n          transformationAlgorithms,\n          rawSamlMessage: rawSamlRequest,\n          signingCert: metadata.init.getX509Certificate('signing'),\n          signatureConfig: initSetting.signatureConfig || {\n            prefix: 'ds',\n            location: { reference: \"/*[local-name(.)='LogoutRequest']/*[local-name(.)='Issuer']\", action: 'after' },\n          }\n        }),\n      };\n    }\n    return {\n      id,\n      context: utility.base64Encode(rawSamlRequest),\n    };\n  }\n  throw new Error('ERR_GENERATE_POST_LOGOUT_REQUEST_MISSING_METADATA');\n}\n/**\n* @desc Generate a base64 encoded logout response\n* @param  {object} requestInfo                 corresponding request, used to obtain the id\n* @param  {string} referenceTagXPath           reference uri\n* @param  {object} entity                      object includes both idp and sp\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nfunction base64LogoutResponse(requestInfo: any, entity: any, customTagReplacement: (template: string) => BindingContext): BindingContext {\n  const metadata = {\n    init: entity.init.entityMeta,\n    target: entity.target.entityMeta,\n  };\n  let id: string = '';\n  const initSetting = entity.init.entitySetting;\n  if (metadata && metadata.init && metadata.target) {\n    let rawSamlResponse;\n    if (initSetting.logoutResponseTemplate) {\n      const template = customTagReplacement(initSetting.logoutResponseTemplate.context);\n      id = template.id;\n      rawSamlResponse = template.context;\n    } else {\n      id = initSetting.generateID();\n      const tvalue: any = {\n        ID: id,\n        Destination: metadata.target.getSingleLogoutService(binding.post),\n        EntityID: metadata.init.getEntityID(),\n        Issuer: metadata.init.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        StatusCode: StatusCode.Success,\n        InResponseTo: get(requestInfo, 'extract.request.id', null)\n      };\n      rawSamlResponse = libsaml.replaceTagsByValue(libsaml.defaultLogoutResponseTemplate.context, tvalue);\n    }\n    if (entity.target.entitySetting.wantLogoutResponseSigned) {\n      const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm, transformationAlgorithms } = initSetting;\n      return {\n        id,\n        context: libsaml.constructSAMLSignature({\n          isMessageSigned: true,\n          transformationAlgorithms: transformationAlgorithms,\n          privateKey,\n          privateKeyPass,\n          signatureAlgorithm,\n          rawSamlMessage: rawSamlResponse,\n          signingCert: metadata.init.getX509Certificate('signing'),\n          signatureConfig: {\n            prefix: 'ds',\n            location: {\n              reference: \"/*[local-name(.)='LogoutResponse']/*[local-name(.)='Issuer']\",\n              action: 'after'\n            }\n          }\n        }),\n      };\n    }\n    return {\n      id,\n      context: utility.base64Encode(rawSamlResponse),\n    };\n  }\n  throw new Error('ERR_GENERATE_POST_LOGOUT_RESPONSE_MISSING_METADATA');\n}\n\nconst postBinding = {\n  base64LoginRequest,\n  base64LoginResponse,\n  base64LogoutRequest,\n  base64LogoutResponse,\n};\n\nexport default postBinding;\n", "// unit is ms\ntype DriftTolerance = [number, number];\n\nfunction verifyTime(\n  utcNotBefore: string | undefined,\n  utcNotOnOrAfter: string | undefined,\n  drift: DriftTolerance = [0, 0]\n): boolean {\n\n  const now = new Date();\n\n  if (!utcNotBefore && !utcNotOnOrAfter) {\n    // show warning because user intends to have time check but the document doesn't include corresponding information\n    console.warn('You intend to have time validation however the document doesn\\'t include the valid range.');\n    return true; \n  }\n\n  let notBeforeLocal: Date | null = null;\n  let notOnOrAfterLocal: Date | null = null;\n\n  const [notBeforeDrift, notOnOrAfterDrift] = drift;\n\n  if (utcNotBefore && !utcNotOnOrAfter) {\n    notBeforeLocal = new Date(utcNotBefore);\n    return +notBeforeLocal + notBeforeDrift <= +now;\n  }\n  if (!utcNotBefore && utcNotOnOrAfter) {\n    notOnOrAfterLocal = new Date(utcNotOnOrAfter);\n    return +now < +notOnOrAfterLocal + notOnOrAfterDrift;\n  }\n\n  notBeforeLocal = new Date(utcNotBefore!);\n  notOnOrAfterLocal = new Date(utcNotOnOrAfter!);\n\n  return (\n    +notBeforeLocal + notBeforeDrift <= +now &&\n    +now < +notOnOrAfterLocal + notOnOrAfterDrift\n  );\n\n}\n\nexport {\n  verifyTime\n};", "import { inflateString, base64Decode } from './utility';\nimport { verifyTime } from './validator';\nimport libsaml from './libsaml';\nimport {\n  extract,\n  loginRequestFields,\n  loginResponseFields,\n  logoutRequestFields,\n  logoutResponseFields,\n  ExtractorFields,\n  logoutResponseStatusFields,\n  loginResponseStatusFields\n} from './extractor';\n\nimport {\n  BindingNamespace,\n  ParserType,\n  wording,\n  MessageSignatureOrder,\n  StatusCode\n} from './urn';\n\nconst bindDict = wording.binding;\nconst urlParams = wording.urlParams;\n\nexport interface FlowResult {\n  samlContent: string;\n  extract: any;\n  sigAlg?: string|null ;\n}\n\n// get the default extractor fields based on the parserType\nfunction getDefaultExtractorFields(parserType: ParserType, assertion?: any): ExtractorFields {\n  switch (parserType) {\n    case ParserType.SAMLRequest:\n      return loginRequestFields;\n    case ParserType.SAMLResponse:\n      if (!assertion) {\n        // unexpected hit\n        throw new Error('ERR_EMPTY_ASSERTION');\n      }\n      return loginResponseFields(assertion);\n    case ParserType.LogoutRequest:\n      return logoutRequestFields;\n    case ParserType.LogoutResponse:\n      return logoutResponseFields;\n    default:\n      throw new Error('ERR_UNDEFINED_PARSERTYPE');\n  }\n}\n\n// proceed the redirect binding flow\nasync function redirectFlow(options): Promise<FlowResult>  {\n\n  const { request, parserType, self, checkSignature = true, from } = options;\n  const { query, octetString } = request;\n  const { SigAlg: sigAlg, Signature: signature } = query;\n\n  const targetEntityMetadata = from.entityMeta;\n\n  // ?SAMLRequest= or ?SAMLResponse=\n  const direction = libsaml.getQueryParamByType(parserType);\n  const content = query[direction];\n\n  // query must contain the saml content\n  if (content === undefined) {\n    return Promise.reject('ERR_REDIRECT_FLOW_BAD_ARGS');\n  }\n\n  const xmlString = inflateString(decodeURIComponent(content));\n\n  // validate the xml\n  try {\n    await libsaml.isValidXml(xmlString);\n  } catch (e) {\n    return Promise.reject('ERR_INVALID_XML');\n  }\n\n  // check status based on different scenarios\n  await checkStatus(xmlString, parserType);\n\n  let assertion: string = '';\n\n  if (parserType === urlParams.samlResponse){\n    // Extract assertion shortcut\n    const verifiedDoc = extract(xmlString, [{\n      key: 'assertion',\n      localPath: ['~Response', 'Assertion'],\n      attributes: [],\n      context: true\n    }]);\n    if (verifiedDoc && verifiedDoc.assertion){\n      assertion = verifiedDoc.assertion as string;\n    }\n  }\n\n  const extractorFields = getDefaultExtractorFields(parserType, assertion.length > 0 ? assertion : null);\n\n  const parseResult: { samlContent: string, extract: any, sigAlg: (string | null) } = {\n    samlContent: xmlString,\n    sigAlg: null,\n    extract: extract(xmlString, extractorFields),\n  };\n\n  // see if signature check is required\n  // only verify message signature is enough\n  if (checkSignature) {\n    if (!signature || !sigAlg) {\n      return Promise.reject('ERR_MISSING_SIG_ALG');\n    }\n\n    // put the below two assignments into verifyMessageSignature function\n    const base64Signature = Buffer.from(decodeURIComponent(signature), 'base64');\n    const decodeSigAlg = decodeURIComponent(sigAlg);\n\n    const verified = libsaml.verifyMessageSignature(targetEntityMetadata, octetString, base64Signature, sigAlg);\n\n    if (!verified) {\n      // Fail to verify message signature\n      return Promise.reject('ERR_FAILED_MESSAGE_SIGNATURE_VERIFICATION');\n    }\n\n    parseResult.sigAlg = decodeSigAlg;\n  }\n\n  /**\n   *  Validation part: validate the context of response after signature is verified and decrypted (optional)\n   */\n  const issuer = targetEntityMetadata.getEntityID();\n  const extractedProperties = parseResult.extract;\n\n  // unmatched issuer\n  if (\n    (parserType === 'LogoutResponse' || parserType === 'SAMLResponse')\n    && extractedProperties\n    && extractedProperties.issuer !== issuer\n  ) {\n    return Promise.reject('ERR_UNMATCH_ISSUER');\n  }\n\n  // invalid session time\n  // only run the verifyTime when `SessionNotOnOrAfter` exists\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.sessionIndex.sessionNotOnOrAfter\n    && !verifyTime(\n      undefined,\n      extractedProperties.sessionIndex.sessionNotOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_EXPIRED_SESSION');\n  }\n\n  // invalid time\n  // 2.4.1.2 https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.conditions\n    && !verifyTime(\n      extractedProperties.conditions.notBefore,\n      extractedProperties.conditions.notOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_SUBJECT_UNCONFIRMED');\n  }\n\n  return Promise.resolve(parseResult);\n}\n\n// proceed the post flow\nasync function postFlow(options): Promise<FlowResult> {\n\n  const {\n    request,\n    from,\n    self,\n    parserType,\n    checkSignature = true\n  } = options;\n\n  const { body } = request;\n\n  const direction = libsaml.getQueryParamByType(parserType);\n  const encodedRequest = body[direction];\n\n  let samlContent = String(base64Decode(encodedRequest));\n\n  const verificationOptions = {\n    metadata: from.entityMeta,\n    signatureAlgorithm: from.entitySetting.requestSignatureAlgorithm,\n  };\n\n  const decryptRequired = from.entitySetting.isAssertionEncrypted;\n\n  let extractorFields: ExtractorFields = [];\n\n  // validate the xml first\n  await libsaml.isValidXml(samlContent);\n\n  if (parserType !== urlParams.samlResponse) {\n    extractorFields = getDefaultExtractorFields(parserType, null);\n  }\n\n  // check status based on different scenarios\n  await checkStatus(samlContent, parserType);\n\n  // verify the signatures (the response is encrypted then signed, then verify first then decrypt)\n  if (\n    checkSignature &&\n    from.entitySetting.messageSigningOrder === MessageSignatureOrder.ETS\n  ) {\n    const [verified, verifiedAssertionNode] = libsaml.verifySignature(samlContent, verificationOptions);\n    if (!verified) {\n      return Promise.reject('ERR_FAIL_TO_VERIFY_ETS_SIGNATURE');\n    }\n    if (!decryptRequired) {\n      extractorFields = getDefaultExtractorFields(parserType, verifiedAssertionNode);\n    }\n  }\n\n  if (parserType === 'SAMLResponse' && decryptRequired) {\n    const result = await libsaml.decryptAssertion(self, samlContent);\n    samlContent = result[0];\n    extractorFields = getDefaultExtractorFields(parserType, result[1]);\n  }\n\n  // verify the signatures (the response is signed then encrypted, then decrypt first then verify)\n  if (\n    checkSignature &&\n    from.entitySetting.messageSigningOrder === MessageSignatureOrder.STE\n  ) {\n    const [verified, verifiedAssertionNode] = libsaml.verifySignature(samlContent, verificationOptions);\n    if (verified) {\n      extractorFields = getDefaultExtractorFields(parserType, verifiedAssertionNode);\n    } else {\n      return Promise.reject('ERR_FAIL_TO_VERIFY_STE_SIGNATURE');\n    }\n  }\n\n  const parseResult = {\n    samlContent: samlContent,\n    extract: extract(samlContent, extractorFields),\n  };\n\n  /**\n   *  Validation part: validate the context of response after signature is verified and decrypted (optional)\n   */\n  const targetEntityMetadata = from.entityMeta;\n  const issuer = targetEntityMetadata.getEntityID();\n  const extractedProperties = parseResult.extract;\n\n  // unmatched issuer\n  if (\n    (parserType === 'LogoutResponse' || parserType === 'SAMLResponse')\n    && extractedProperties\n    && extractedProperties.issuer !== issuer\n  ) {\n    return Promise.reject('ERR_UNMATCH_ISSUER');\n  }\n\n  // invalid session time\n  // only run the verifyTime when `SessionNotOnOrAfter` exists\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.sessionIndex.sessionNotOnOrAfter\n    && !verifyTime(\n      undefined,\n      extractedProperties.sessionIndex.sessionNotOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_EXPIRED_SESSION');\n  }\n\n  // invalid time\n  // 2.4.1.2 https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.conditions\n    && !verifyTime(\n      extractedProperties.conditions.notBefore,\n      extractedProperties.conditions.notOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_SUBJECT_UNCONFIRMED');\n  }\n\n  return Promise.resolve(parseResult);\n}\n\n\n// proceed the post simple sign binding flow\nasync function postSimpleSignFlow(options): Promise<FlowResult> {\n\n  const { request, parserType, self, checkSignature = true, from } = options;\n\n  const { body, octetString } = request;\n\n  const targetEntityMetadata = from.entityMeta;\n\n  // ?SAMLRequest= or ?SAMLResponse=\n  const direction = libsaml.getQueryParamByType(parserType);\n  const encodedRequest: string = body[direction];\n  const sigAlg: string = body['SigAlg'];\n  const signature: string = body['Signature'];\n\n  // query must contain the saml content\n  if (encodedRequest === undefined) {\n    return Promise.reject('ERR_SIMPLESIGN_FLOW_BAD_ARGS');\n  }\n\n  const xmlString = String(base64Decode(encodedRequest));\n\n  // validate the xml\n  try {\n    await libsaml.isValidXml(xmlString);\n  } catch (e) {\n    return Promise.reject('ERR_INVALID_XML');\n  }\n\n  // check status based on different scenarios\n  await checkStatus(xmlString, parserType);\n\n  let assertion: string = '';\n\n  if (parserType === urlParams.samlResponse){\n    // Extract assertion shortcut\n    const verifiedDoc = extract(xmlString, [{\n      key: 'assertion',\n      localPath: ['~Response', 'Assertion'],\n      attributes: [],\n      context: true\n    }]);\n    if (verifiedDoc && verifiedDoc.assertion){\n      assertion = verifiedDoc.assertion as string;\n    }\n  }\n\n  const extractorFields = getDefaultExtractorFields(parserType, assertion.length > 0 ? assertion : null);\n\n  const parseResult: { samlContent: string, extract: any, sigAlg: (string | null) } = {\n    samlContent: xmlString,\n    sigAlg: null,\n    extract: extract(xmlString, extractorFields),\n  };\n\n  // see if signature check is required\n  // only verify message signature is enough\n  if (checkSignature) {\n    if (!signature || !sigAlg) {\n      return Promise.reject('ERR_MISSING_SIG_ALG');\n    }\n\n    // put the below two assignments into verifyMessageSignature function\n    const base64Signature = Buffer.from(signature, 'base64');\n\n    const verified = libsaml.verifyMessageSignature(targetEntityMetadata, octetString, base64Signature, sigAlg);\n\n    if (!verified) {\n      // Fail to verify message signature\n      return Promise.reject('ERR_FAILED_MESSAGE_SIGNATURE_VERIFICATION');\n    }\n\n    parseResult.sigAlg = sigAlg;\n  }\n\n  /**\n   *  Validation part: validate the context of response after signature is verified and decrypted (optional)\n   */\n  const issuer = targetEntityMetadata.getEntityID();\n  const extractedProperties = parseResult.extract;\n\n  // unmatched issuer\n  if (\n    (parserType === 'LogoutResponse' || parserType === 'SAMLResponse')\n    && extractedProperties\n    && extractedProperties.issuer !== issuer\n  ) {\n    return Promise.reject('ERR_UNMATCH_ISSUER');\n  }\n\n  // invalid session time\n  // only run the verifyTime when `SessionNotOnOrAfter` exists\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.sessionIndex.sessionNotOnOrAfter\n    && !verifyTime(\n      undefined,\n      extractedProperties.sessionIndex.sessionNotOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_EXPIRED_SESSION');\n  }\n\n  // invalid time\n  // 2.4.1.2 https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf\n  if (\n    parserType === 'SAMLResponse'\n    && extractedProperties.conditions\n    && !verifyTime(\n      extractedProperties.conditions.notBefore,\n      extractedProperties.conditions.notOnOrAfter,\n      self.entitySetting.clockDrifts\n    )\n  ) {\n    return Promise.reject('ERR_SUBJECT_UNCONFIRMED');\n  }\n\n  return Promise.resolve(parseResult);\n}\n\n\nfunction checkStatus(content: string, parserType: string): Promise<string> {\n\n  // only check response parser\n  if (parserType !== urlParams.samlResponse && parserType !== urlParams.logoutResponse) {\n    return Promise.resolve('SKIPPED');\n  }\n\n  const fields = parserType === urlParams.samlResponse\n    ? loginResponseStatusFields\n    : logoutResponseStatusFields;\n\n  const {top, second} = extract(content, fields);\n\n  // only resolve when top-tier status code is success\n  if (top === StatusCode.Success) {\n    return Promise.resolve('OK');\n  }\n\n  if (!top) {\n    throw new Error('ERR_UNDEFINED_STATUS');\n  }\n\n  // returns a detailed error for two-tier error code\n  throw new Error(`ERR_FAILED_STATUS with top tier code: ${top}, second tier code: ${second}`);\n}\n\nexport function flow(options): Promise<FlowResult> {\n\n  const binding = options.binding;\n  const parserType = options.parserType;\n\n  options.supportBindings = [BindingNamespace.Redirect, BindingNamespace.Post, BindingNamespace.SimpleSign];\n  // saml response  allows POST, REDIRECT\n  if (parserType === ParserType.SAMLResponse) {\n    options.supportBindings = [BindingNamespace.Post, BindingNamespace.Redirect, BindingNamespace.SimpleSign];\n  }\n\n  if (binding === bindDict.post) {\n    return postFlow(options);\n  }\n\n  if (binding === bindDict.redirect) {\n    return redirectFlow(options);\n  }\n\n  if (binding === bindDict.simpleSign) {\n    return postSimpleSignFlow(options);\n  }\n\n  return Promise.reject('ERR_UNEXPECTED_FLOW');\n\n}\n", "/**\n* @file entity.ts\n* @author tngan\n* @desc  An abstraction for identity provider and service provider.\n*/\nimport { isString, isNonEmptyArray } from './utility';\nimport { namespace, wording, algorithms, messageConfigurations } from './urn';\nimport * as uuid from 'uuid';\nimport IdpMetadata, { IdpMetadata as IdpMetadataConstructor } from './metadata-idp';\nimport SpMetadata, { SpMetadata as SpMetadataConstructor } from './metadata-sp';\nimport redirectBinding from './binding-redirect';\nimport postBinding from './binding-post';\nimport { MetadataIdpConstructor, MetadataSpConstructor, EntitySetting } from './types';\nimport { flow, FlowResult } from './flow';\n\nconst dataEncryptionAlgorithm = algorithms.encryption.data;\nconst keyEncryptionAlgorithm = algorithms.encryption.key;\nconst signatureAlgorithms = algorithms.signature;\nconst messageSigningOrders = messageConfigurations.signingOrder;\n\nconst defaultEntitySetting = {\n  wantLogoutResponseSigned: false,\n  messageSigningOrder: messageSigningOrders.SIGN_THEN_ENCRYPT,\n  wantLogoutRequestSigned: false,\n  allowCreate: false,\n  isAssertionEncrypted: false,\n  requestSignatureAlgorithm: signatureAlgorithms.RSA_SHA256,\n  dataEncryptionAlgorithm: dataEncryptionAlgorithm.AES_256,\n  keyEncryptionAlgorithm: keyEncryptionAlgorithm.RSA_OAEP_MGF1P,\n  generateID: (): string => ('_' + uuid.v4()),\n  relayState: '',\n};\n\nexport interface ESamlHttpRequest {\n  query?: any;\n  body?: any;\n  octetString?: string;\n}\n\nexport interface BindingContext {\n  context: string;\n  id: string;\n}\n\nexport interface PostBindingContext extends BindingContext {\n  relayState?: string;\n  entityEndpoint: string;\n  type: string;\n}\n\nexport interface SimpleSignBindingContext extends PostBindingContext {\n  sigAlg?: string;\n  signature?: string;\n  keyInfo?: string;\n}\n\nexport interface SimpleSignComputedContext extends BindingContext {\n  sigAlg?: string;\n  signature?: string;\n}\n\nexport interface ParseResult {\n  samlContent: string;\n  extract: any;\n  sigAlg: string;\n}\n\nexport type EntityConstructor = (MetadataIdpConstructor | MetadataSpConstructor)\n  & { metadata?: string | Buffer };\n\nexport default class Entity {\n  entitySetting: EntitySetting;\n  entityType: string;\n  entityMeta: IdpMetadataConstructor | SpMetadataConstructor;\n\n  /**\n  * @param entitySetting\n  * @param entityMeta is the entity metadata, deprecated after 2.0\n  */\n  constructor(entitySetting: EntityConstructor, entityType: 'idp' | 'sp') {\n    this.entitySetting = Object.assign({}, defaultEntitySetting, entitySetting);\n    const metadata = entitySetting.metadata || entitySetting;\n    switch (entityType) {\n      case 'idp':\n        this.entityMeta = IdpMetadata(metadata);\n        // setting with metadata has higher precedence \n        this.entitySetting.wantAuthnRequestsSigned = this.entityMeta.isWantAuthnRequestsSigned();\n        this.entitySetting.nameIDFormat = this.entityMeta.getNameIDFormat() || this.entitySetting.nameIDFormat;\n        break;\n      case 'sp':\n        this.entityMeta = SpMetadata(metadata);\n        // setting with metadata has higher precedence \n        this.entitySetting.authnRequestsSigned = this.entityMeta.isAuthnRequestSigned();\n        this.entitySetting.wantAssertionsSigned = this.entityMeta.isWantAssertionsSigned();\n        this.entitySetting.nameIDFormat = this.entityMeta.getNameIDFormat() || this.entitySetting.nameIDFormat;\n        break;\n      default:\n        throw new Error('ERR_UNDEFINED_ENTITY_TYPE');\n    }\n  }\n\n  /**\n  * @desc  Returns the setting of entity\n  * @return {object}\n  */\n  getEntitySetting() {\n    return this.entitySetting;\n  }\n  /**\n  * @desc  Returns the xml string of entity metadata\n  * @return {string}\n  */\n  getMetadata(): string {\n    return this.entityMeta.getMetadata();\n  }\n\n  /**\n  * @desc  Exports the entity metadata into specified folder\n  * @param  {string} exportFile indicates the file name\n  */\n  exportMetadata(exportFile: string) {\n    return this.entityMeta.exportMetadata(exportFile);\n  }\n\n  /** * @desc  Verify fields with the one specified in metadata\n  * @param  {string/[string]} field is a string or an array of string indicating the field value in SAML message\n  * @param  {string} metaField is a string indicating the same field specified in metadata\n  * @return {boolean} True/False\n  */\n  verifyFields(field: string | string[], metaField: string): boolean {\n    if (isString(field)) {\n      return field === metaField;\n    }\n    if (isNonEmptyArray(field)) {\n      let res = true;\n      (field as string[]).forEach(f => {\n        if (f !== metaField) {\n          res = false;\n          return;\n        }\n      });\n      return res;\n    }\n    return false;\n  }\n  /** @desc   Generates the logout request for developers to design their own method\n  * @param  {ServiceProvider} sp     object of service provider\n  * @param  {string}   binding       protocol binding\n  * @param  {object}   user          current logged user (e.g. user)\n  * @param  {string} relayState      the URL to which to redirect the user when logout is complete\n  * @param  {function} customTagReplacement     used when developers have their own login response template\n  */\n  createLogoutRequest(targetEntity, binding, user, relayState = '', customTagReplacement?): BindingContext | PostBindingContext {\n    if (binding === wording.binding.redirect) {\n      return redirectBinding.logoutRequestRedirectURL(user, {\n        init: this,\n        target: targetEntity,\n      }, relayState, customTagReplacement);\n    }\n    if (binding === wording.binding.post) {\n      const entityEndpoint = targetEntity.entityMeta.getSingleLogoutService(binding);\n      const context = postBinding.base64LogoutRequest(user, \"/*[local-name(.)='LogoutRequest']\", { init: this, target: targetEntity }, customTagReplacement);\n      return {\n        ...context,\n        relayState,\n        entityEndpoint,\n        type: 'SAMLRequest',\n      };\n    }\n    // Will support artifact in the next release\n    throw new Error('ERR_UNDEFINED_BINDING');\n  }\n\n  /**\n  * @desc  Generates the logout response for developers to design their own method\n  * @param  {IdentityProvider} idp               object of identity provider\n  * @param  {object} requestInfo                 corresponding request, used to obtain the id\n  * @param  {string} relayState                  the URL to which to redirect the user when logout is complete.\n  * @param  {string} binding                     protocol binding\n  * @param  {function} customTagReplacement                 used when developers have their own login response template\n  */\n  createLogoutResponse(target, requestInfo, binding, relayState = '', customTagReplacement?): BindingContext | PostBindingContext {\n    const protocol = namespace.binding[binding];\n    if (protocol === namespace.binding.redirect) {\n      return redirectBinding.logoutResponseRedirectURL(requestInfo, {\n        init: this,\n        target,\n      }, relayState, customTagReplacement);\n    }\n    if (protocol === namespace.binding.post) {\n      const context = postBinding.base64LogoutResponse(requestInfo, {\n        init: this,\n        target,\n      }, customTagReplacement);\n      return {\n        ...context,\n        relayState,\n        entityEndpoint: target.entityMeta.getSingleLogoutService(binding),\n        type: 'SAMLResponse',\n      };\n    }\n    throw new Error('ERR_CREATE_LOGOUT_RESPONSE_UNDEFINED_BINDING');\n  }\n\n  /**\n  * @desc   Validation of the parsed the URL parameters\n  * @param  {IdentityProvider}   idp             object of identity provider\n  * @param  {string}   binding                   protocol binding\n  * @param  {request}   req                      request\n  * @return {Promise}\n  */\n  parseLogoutRequest(from, binding, request: ESamlHttpRequest) {\n    const self = this;\n    return flow({\n      from: from,\n      self: self,\n      type: 'logout',\n      parserType: 'LogoutRequest',\n      checkSignature: this.entitySetting.wantLogoutRequestSigned,\n      binding: binding,\n      request: request,\n    });\n  }\n  /**\n  * @desc   Validation of the parsed the URL parameters\n  * @param  {object} config                      config for the parser\n  * @param  {string}   binding                   protocol binding\n  * @param  {request}   req                      request\n  * @return {Promise}\n  */\n  parseLogoutResponse(from, binding, request: ESamlHttpRequest) {\n    const self = this;\n    return flow({\n      from: from,\n      self: self,\n      type: 'logout',\n      parserType: 'LogoutResponse',\n      checkSignature: self.entitySetting.wantLogoutResponseSigned,\n      binding: binding,\n      request: request\n    });\n  }\n}\n", "/**\n* @file binding-simplesign.ts\n* @author Orange\n* @desc Binding-level API, declare the functions using POST SimpleSign binding\n*/\n\nimport { wording, StatusCode } from './urn';\nimport { BindingContext, SimpleSignComputedContext } from './entity';\nimport libsaml from './libsaml';\nimport utility, { get } from './utility';\n\nconst binding = wording.binding;\nconst urlParams = wording.urlParams;\n\nexport interface BuildSimpleSignConfig {\n  type: string;\n  context: string;\n  entitySetting: any;\n  relayState?: string;\n}\n\nexport interface BindingSimpleSignContext {\n  id: string;\n  context: string;\n  signature: any;\n  sigAlg: string;\n}\n\n/**\n* @private\n* @desc Helper of generating URL param/value pair\n* @param  {string} param     key\n* @param  {string} value     value of key\n* @param  {boolean} first    determine whether the param is the starting one in order to add query header '?'\n* @return {string}\n*/\nfunction pvPair(param: string, value: string, first?: boolean): string {\n  return (first === true ? '?' : '&') + param + '=' + value;\n}\n/**\n* @private\n* @desc Refactored part of simple signature generation for login/logout request\n* @param  {string} type\n* @param  {string} rawSamlRequest\n* @param  {object} entitySetting\n* @return {string}\n*/\nfunction buildSimpleSignature(opts: BuildSimpleSignConfig) : string {\n  const {\n    type,\n    context,\n    entitySetting,\n  } = opts;\n  let { relayState = '' } = opts;\n  const queryParam = libsaml.getQueryParamByType(type);\n\n  if (relayState !== '') {\n    relayState = pvPair(urlParams.relayState, relayState);\n  }\n\n  const sigAlg = pvPair(urlParams.sigAlg, entitySetting.requestSignatureAlgorithm);\n  const octetString = context + relayState + sigAlg;\n  return libsaml.constructMessageSignature(\n    queryParam + '=' + octetString,\n    entitySetting.privateKey,\n    entitySetting.privateKeyPass,\n    undefined,\n    entitySetting.requestSignatureAlgorithm\n  ).toString();\n}\n\n/**\n* @desc Generate a base64 encoded login request\n* @param  {string} referenceTagXPath           reference uri\n* @param  {object} entity                      object includes both idp and sp\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nfunction base64LoginRequest(entity: any, customTagReplacement?: (template: string) => BindingContext): SimpleSignComputedContext {\n  const metadata = { idp: entity.idp.entityMeta, sp: entity.sp.entityMeta };\n  const spSetting = entity.sp.entitySetting;\n  let id: string = '';\n\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.idp.getSingleSignOnService(binding.simpleSign);\n    let rawSamlRequest: string;\n    if (spSetting.loginRequestTemplate && customTagReplacement) {\n      const info = customTagReplacement(spSetting.loginRequestTemplate.context);\n      id = get(info, 'id', null);\n      rawSamlRequest = get(info, 'context', null);\n    } else {\n      const nameIDFormat = spSetting.nameIDFormat;\n      const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n      id = spSetting.generateID();\n      rawSamlRequest = libsaml.replaceTagsByValue(libsaml.defaultLoginRequestTemplate.context, {\n        ID: id,\n        Destination: base,\n        Issuer: metadata.sp.getEntityID(),\n        IssueInstant: new Date().toISOString(),\n        AssertionConsumerServiceURL: metadata.sp.getAssertionConsumerService(binding.simpleSign),\n        EntityID: metadata.sp.getEntityID(),\n        AllowCreate: spSetting.allowCreate,\n        NameIDFormat: selectedNameIDFormat\n      } as any);\n    }\n\n    let simpleSignatureContext : any = null;\n    if (metadata.idp.isWantAuthnRequestsSigned()) {\n        const simpleSignature = buildSimpleSignature({\n            type: urlParams.samlRequest,\n            context: rawSamlRequest,\n            entitySetting: spSetting,\n            relayState: spSetting.relayState,\n        });\n\n        simpleSignatureContext = {\n          signature: simpleSignature,\n          sigAlg: spSetting.requestSignatureAlgorithm,\n        };\n    }\n    // No need to embeded XML signature\n    return {\n      id,\n      context: utility.base64Encode(rawSamlRequest),\n      ...simpleSignatureContext,\n    };\n  }\n  throw new Error('ERR_GENERATE_POST_SIMPLESIGN_LOGIN_REQUEST_MISSING_METADATA');\n}\n/**\n* @desc Generate a base64 encoded login response\n* @param  {object} requestInfo                 corresponding request, used to obtain the id\n* @param  {object} entity                      object includes both idp and sp\n* @param  {object} user                        current logged user (e.g. req.user)\n* @param  {string}  relayState               the relay state\n* @param  {function} customTagReplacement     used when developers have their own login response template\n*/\nasync function base64LoginResponse(requestInfo: any = {}, entity: any, user: any = {}, relayState?: string, customTagReplacement?: (template: string) => BindingContext): Promise<BindingSimpleSignContext> {\n  const idpSetting = entity.idp.entitySetting;\n  const spSetting = entity.sp.entitySetting;\n  const id = idpSetting.generateID();\n  const metadata = {\n    idp: entity.idp.entityMeta,\n    sp: entity.sp.entityMeta,\n  };\n  const nameIDFormat = idpSetting.nameIDFormat;\n  const selectedNameIDFormat = Array.isArray(nameIDFormat) ? nameIDFormat[0] : nameIDFormat;\n  if (metadata && metadata.idp && metadata.sp) {\n    const base = metadata.sp.getAssertionConsumerService(binding.simpleSign);\n    let rawSamlResponse: string;\n    const nowTime = new Date();\n    // Five minutes later : nowtime  + 5 * 60 * 1000 (in milliseconds)\n    const fiveMinutesLaterTime = new Date(nowTime.getTime() + 300_000 );\n    const tvalue: any = {\n      ID: id,\n      AssertionID: idpSetting.generateID(),\n      Destination: base,\n      Audience: metadata.sp.getEntityID(),\n      EntityID: metadata.sp.getEntityID(),\n      SubjectRecipient: base,\n      Issuer: metadata.idp.getEntityID(),\n      IssueInstant: nowTime.toISOString(),\n      AssertionConsumerServiceURL: base,\n      StatusCode: StatusCode.Success,\n      // can be customized\n      ConditionsNotBefore: nowTime.toISOString(),\n      ConditionsNotOnOrAfter: fiveMinutesLaterTime.toISOString(),\n      SubjectConfirmationDataNotOnOrAfter: fiveMinutesLaterTime.toISOString(),\n      NameIDFormat: selectedNameIDFormat,\n      NameID: user.email || '',\n      InResponseTo: get(requestInfo, 'extract.request.id', ''),\n      AuthnStatement: '',\n      AttributeStatement: '',\n    };\n    if (idpSetting.loginResponseTemplate && customTagReplacement) {\n      const template = customTagReplacement(idpSetting.loginResponseTemplate.context);\n      rawSamlResponse = get(template, 'context', null);\n    } else {\n      if (requestInfo !== null) {\n        tvalue.InResponseTo = requestInfo.extract.request.id;\n      }\n      rawSamlResponse = libsaml.replaceTagsByValue(libsaml.defaultLoginResponseTemplate.context, tvalue);\n    }\n    const { privateKey, privateKeyPass, requestSignatureAlgorithm: signatureAlgorithm } = idpSetting;\n    const config = {\n      privateKey,\n      privateKeyPass,\n      signatureAlgorithm,\n      signingCert: metadata.idp.getX509Certificate('signing'),\n      isBase64Output: false,\n    };\n    // step: sign assertion ? -> encrypted ? -> sign message ?\n    if (metadata.sp.isWantAssertionsSigned()) {\n      rawSamlResponse = libsaml.constructSAMLSignature({\n        ...config,\n        rawSamlMessage: rawSamlResponse,\n        transformationAlgorithms: spSetting.transformationAlgorithms,\n        referenceTagXPath: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']\",\n        signatureConfig: {\n          prefix: 'ds',\n          location: { reference: \"/*[local-name(.)='Response']/*[local-name(.)='Assertion']/*[local-name(.)='Issuer']\", action: 'after' },\n        },\n      });\n    }\n\n    // SAML response must be signed sign message first, then encrypt\n    let simpleSignature: string = '';\n    // like in post and redirect bindings, login response is always signed.\n    simpleSignature = buildSimpleSignature({\n        type: urlParams.samlResponse,\n        context: rawSamlResponse,\n        entitySetting: idpSetting,\n        relayState: relayState,\n    } );\n\n    return Promise.resolve({\n      id,\n      context: utility.base64Encode(rawSamlResponse),\n      signature: simpleSignature,\n      sigAlg: idpSetting.requestSignatureAlgorithm,\n    });\n\n  }\n  throw new Error('ERR_GENERATE_POST_SIMPLESIGN_LOGIN_RESPONSE_MISSING_METADATA');\n}\n\nconst simpleSignBinding = {\n    base64LoginRequest,\n    base64LoginResponse,\n  };\n\nexport default simpleSignBinding;\n", "/**\n* @file entity-idp.ts\n* @author tngan\n* @desc  Declares the actions taken by identity provider\n*/\nimport Entity, { ESamlHttpRequest } from './entity';\nimport {\n  ServiceProviderConstructor as ServiceProvider,\n  ServiceProviderMetadata,\n  IdentityProviderMetadata,\n  IdentityProviderSettings,\n} from './types';\nimport libsaml from './libsaml';\nimport { namespace } from './urn';\nimport postBinding from './binding-post';\nimport redirectBinding from './binding-redirect';\nimport simpleSignBinding from './binding-simplesign';\nimport { flow, FlowResult } from './flow';\nimport { isString } from './utility';\nimport { BindingContext } from './entity';\n\n/**\n * Identity provider can be configured using either metadata importing or idpSetting\n */\nexport default function(props: IdentityProviderSettings) {\n  return new IdentityProvider(props);\n}\n\n/**\n * Identity provider can be configured using either metadata importing or idpSetting\n */\nexport class IdentityProvider extends Entity {\n\n  entityMeta: IdentityProviderMetadata;\n\n  constructor(idpSetting: IdentityProviderSettings) {\n    const defaultIdpEntitySetting = {\n      wantAuthnRequestsSigned: false,\n      tagPrefix: {\n        encryptedAssertion: 'saml',\n      },\n    };\n    const entitySetting = Object.assign(defaultIdpEntitySetting, idpSetting);\n    // build attribute part\n    if (idpSetting.loginResponseTemplate) {\n      if (isString(idpSetting.loginResponseTemplate.context) && Array.isArray(idpSetting.loginResponseTemplate.attributes)) {\n        let attributeStatementTemplate;\n        let attributeTemplate;\n        if (!idpSetting.loginResponseTemplate.additionalTemplates || !idpSetting.loginResponseTemplate.additionalTemplates!.attributeStatementTemplate) {\n          attributeStatementTemplate = libsaml.defaultAttributeStatementTemplate;\n        } else {\n          attributeStatementTemplate = idpSetting.loginResponseTemplate.additionalTemplates!.attributeStatementTemplate!;\n        }\n        if (!idpSetting.loginResponseTemplate.additionalTemplates || !idpSetting.loginResponseTemplate.additionalTemplates!.attributeTemplate) {\n          attributeTemplate = libsaml.defaultAttributeTemplate;\n        } else {\n          attributeTemplate = idpSetting.loginResponseTemplate.additionalTemplates!.attributeTemplate!;\n        }\n        const replacement = {\n          AttributeStatement: libsaml.attributeStatementBuilder(idpSetting.loginResponseTemplate.attributes, attributeTemplate, attributeStatementTemplate),\n        };\n        entitySetting.loginResponseTemplate = {\n          ...entitySetting.loginResponseTemplate,\n          context: libsaml.replaceTagsByValue(entitySetting.loginResponseTemplate!.context, replacement),\n        };\n      } else {\n        console.warn('Invalid login response template');\n      }\n    }\n    super(entitySetting, 'idp');\n  }\n\n  /**\n  * @desc  Generates the login response for developers to design their own method\n  * @param  sp                        object of service provider\n  * @param  requestInfo               corresponding request, used to obtain the id\n  * @param  binding                   protocol binding\n  * @param  user                      current logged user (e.g. req.user)\n  * @param  customTagReplacement      used when developers have their own login response template\n  * @param  encryptThenSign           whether or not to encrypt then sign first (if signing)\n  * @param  relayState             the relayState from corresponding request\n  */\n  public async createLoginResponse(\n    sp: ServiceProvider,\n    requestInfo: { [key: string]: any },\n    binding: string,\n    user: { [key: string]: any },\n    customTagReplacement?: (template: string) => BindingContext,\n    encryptThenSign?: boolean,\n    relayState?: string,\n  ) {\n    const protocol = namespace.binding[binding];\n    // can support post, redirect and post simple sign bindings for login response\n    let context: any = null;\n    switch (protocol) {\n      case namespace.binding.post:\n        context = await postBinding.base64LoginResponse(requestInfo, {\n          idp: this,\n          sp,\n        }, user, customTagReplacement, encryptThenSign);\n        break;\n\n      case namespace.binding.simpleSign:\n        context = await simpleSignBinding.base64LoginResponse( requestInfo, {\n          idp: this, sp,\n        }, user, relayState, customTagReplacement);\n        break;\n\n      case namespace.binding.redirect:\n        return redirectBinding.loginResponseRedirectURL(requestInfo, {\n          idp: this,\n          sp,\n        }, user, relayState, customTagReplacement);\n\n      default:\n        throw new Error('ERR_CREATE_RESPONSE_UNDEFINED_BINDING');\n    }\n\n    return {\n      ...context,\n      relayState,\n      entityEndpoint: (sp.entityMeta as ServiceProviderMetadata).getAssertionConsumerService(binding) as string,\n      type: 'SAMLResponse'\n    };\n  }\n\n  /**\n   * Validation of the parsed URL parameters\n   * @param sp ServiceProvider instance\n   * @param binding Protocol binding\n   * @param req RequesmessageSigningOrderst\n   */\n  parseLoginRequest(sp: ServiceProvider, binding: string, req: ESamlHttpRequest) {\n    const self = this;\n    return flow({\n      from: sp,\n      self: self,\n      checkSignature: self.entityMeta.isWantAuthnRequestsSigned(),\n      parserType: 'SAMLRequest',\n      type: 'login',\n      binding: binding,\n      request: req\n    });\n  }\n}\n", "/**\n* @file entity-sp.ts\n* @author tngan\n* @desc  Declares the actions taken by service provider\n*/\nimport Entity, {\n  BindingContext,\n  PostBindingContext,\n  ESamlHttpRequest,\n  SimpleSignBindingContext,\n} from './entity';\nimport {\n  IdentityProviderConstructor as IdentityProvider,\n  ServiceProviderMetadata,\n  ServiceProviderSettings,\n} from './types';\nimport { namespace } from './urn';\nimport redirectBinding from './binding-redirect';\nimport postBinding from './binding-post';\nimport simpleSignBinding from './binding-simplesign';\nimport { flow, FlowResult } from './flow';\n\n/*\n * @desc interface function\n */\nexport default function(props: ServiceProviderSettings) {\n  return new ServiceProvider(props);\n}\n\n/**\n* @desc Service provider can be configured using either metadata importing or spSetting\n* @param  {object} spSettingimport { FlowResult } from '../types/src/flow.d';\n\n*/\nexport class ServiceProvider extends Entity {\n  entityMeta: ServiceProviderMetadata;\n\n  /**\n  * @desc  Inherited from Entity\n  * @param {object} spSetting    setting of service provider\n  */\n  constructor(spSetting: ServiceProviderSettings) {\n    const entitySetting = Object.assign({\n      authnRequestsSigned: false,\n      wantAssertionsSigned: false,\n      wantMessageSigned: false,\n    }, spSetting);\n    super(entitySetting, 'sp');\n  }\n\n  /**\n  * @desc  Generates the login request for developers to design their own method\n  * @param  {IdentityProvider} idp               object of identity provider\n  * @param  {string}   binding                   protocol binding\n  * @param  {function} customTagReplacement     used when developers have their own login response template\n  */\n  public createLoginRequest(\n    idp: IdentityProvider,\n    binding = 'redirect',\n    customTagReplacement?: (template: string) => BindingContext,\n  ): BindingContext | PostBindingContext| SimpleSignBindingContext  {\n    const nsBinding = namespace.binding;\n    const protocol = nsBinding[binding];\n    if (this.entityMeta.isAuthnRequestSigned() !== idp.entityMeta.isWantAuthnRequestsSigned()) {\n      throw new Error('ERR_METADATA_CONFLICT_REQUEST_SIGNED_FLAG');\n    }\n\n    let context: any = null;\n    switch (protocol) {\n      case nsBinding.redirect:\n        return redirectBinding.loginRequestRedirectURL({ idp, sp: this }, customTagReplacement);\n\n      case nsBinding.post:\n        context = postBinding.base64LoginRequest(\"/*[local-name(.)='AuthnRequest']\", { idp, sp: this }, customTagReplacement);\n        break;\n\n      case nsBinding.simpleSign:\n        // Object context = {id, context, signature, sigAlg}\n        context = simpleSignBinding.base64LoginRequest( { idp, sp: this }, customTagReplacement);\n        break;\n\n      default:\n        // Will support artifact in the next release\n        throw new Error('ERR_SP_LOGIN_REQUEST_UNDEFINED_BINDING');\n    } \n\n    return {\n      ...context,\n      relayState: this.entitySetting.relayState,\n      entityEndpoint: idp.entityMeta.getSingleSignOnService(binding) as string,\n      type: 'SAMLRequest',\n    };\n  }\n\n  /**\n  * @desc   Validation of the parsed the URL parameters\n  * @param  {IdentityProvider}   idp             object of identity provider\n  * @param  {string}   binding                   protocol binding\n  * @param  {request}   req                      request\n  */\n  public parseLoginResponse(idp, binding, request: ESamlHttpRequest) {\n    const self = this;\n    return flow({\n      from: idp,\n      self: self,\n      checkSignature: true, // saml response must have signature\n      parserType: 'SAMLResponse',\n      type: 'login',\n      binding: binding,\n      request: request\n    });\n  }\n\n}\n", "// version <= 1.25\nimport IdentityProvider, { IdentityProvider as IdentityProviderInstance } from './src/entity-idp';\nimport ServiceProvider, { ServiceProvider as ServiceProviderInstance } from './src/entity-sp';\n\nexport { default as IdPMetadata } from './src/metadata-idp';\nexport { default as SPMetadata } from './src/metadata-sp';\nexport { default as Utility } from './src/utility';\nexport { default as SamlLib } from './src/libsaml';\n// roadmap\n// new name convention in version >= 3.0\nimport * as Constants from './src/urn';\nimport * as Extractor from './src/extractor';\n\n// exposed methods for customizing samlify\nimport { setSchemaValidator, setDOMParserOptions } from './src/api';\n\nexport {\n  Constants,\n  Extractor,\n  // temp: resolve the conflict after version >= 3.0\n  IdentityProvider,\n  IdentityProviderInstance,\n  ServiceProvider,\n  ServiceProviderInstance,\n  // set context\n  setSchemaValidator,\n  setDOMParserOptions\n};", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"d:\\\\Project\\\\sso\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-6kWoPr\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\Program Files\\\\nodejs\\\\node_cache\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"d:\\\\Project\\\\sso\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-6kWoPr\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"d:\\\\Project\\\\sso\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-6kWoPr\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"d:\\\\Project\\\\sso\\\\worker\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Program Files\\\\nodejs\\\\node_cache\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Program Files\\\\nodejs\\\\node_cache\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"d:\\\\Project\\\\sso\\\\worker\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Router } from 'itty-router';\nimport { handleAuth } from './handlers/auth';\nimport { handleUsers } from './handlers/users';\nimport { handleApplications } from './handlers/applications';\nimport { handleSaml } from './handlers/saml';\nimport { handleOidc } from './handlers/oidc';\nimport { corsHeaders } from './utils/cors';\nimport { ExtendedRequest } from './types';\n\n// \u521B\u5EFA\u8DEF\u7531\u5668\u5B9E\u4F8B\nconst router = Router<ExtendedRequest>();\n\n// \u4E2D\u95F4\u4EF6: \u5904\u7406CORS\u9884\u68C0\u8BF7\u6C42\nrouter.options('*', request => {\n  return new Response(null, {\n    headers: corsHeaders\n  });\n});\n\n// \u8BA4\u8BC1\u76F8\u5173\u8DEF\u7531\nrouter.post('/api/auth/login', handleAuth.login);\nrouter.post('/api/auth/logout', handleAuth.logout);\nrouter.get('/api/auth/user', handleAuth.getCurrentUser);\nrouter.post('/api/auth/refresh', handleAuth.refreshToken);\n\n// SAML \u76F8\u5173\u8DEF\u7531\nrouter.get('/api/auth/saml/metadata/:appId', handleSaml.metadata);\nrouter.post('/api/auth/saml/login/:appId', handleSaml.login);\nrouter.post('/api/auth/saml/callback', handleSaml.callback);\nrouter.post('/api/auth/saml/logout', handleSaml.logout);\n\n// OIDC \u76F8\u5173\u8DEF\u7531\nrouter.get('/api/auth/oidc/authorize', handleOidc.authorize);\nrouter.post('/api/auth/oidc/token', handleOidc.token);\nrouter.get('/api/auth/oidc/userinfo', handleOidc.userInfo);\nrouter.post('/api/auth/oidc/callback', handleOidc.callback);\n\n// \u7528\u6237\u7BA1\u7406\u8DEF\u7531\nrouter.get('/api/users', handleUsers.list);\nrouter.post('/api/users', handleUsers.create);\nrouter.get('/api/users/:id', handleUsers.get);\nrouter.put('/api/users/:id', handleUsers.update);\nrouter.delete('/api/users/:id', handleUsers.delete);\n\n// \u5E94\u7528\u7BA1\u7406\u8DEF\u7531\nrouter.get('/api/applications', handleApplications.list);\nrouter.post('/api/applications', handleApplications.create);\nrouter.get('/api/applications/:id', handleApplications.get);\nrouter.put('/api/applications/:id', handleApplications.update);\nrouter.delete('/api/applications/:id', handleApplications.delete);\n\n// 404\u5904\u7406\u7A0B\u5E8F\nrouter.all('*', () => new Response('404 - \u627E\u4E0D\u5230\u8D44\u6E90', { status: 404 }));\n\n// \u4ECE\u7C7B\u578B\u5B9A\u4E49\u6587\u4EF6\u5BFC\u5165\u73AF\u5883\u53D8\u91CF\u63A5\u53E3\nimport type { Env } from './types';\n\n// \u4E3B\u4E8B\u4EF6\u76D1\u542C\u5668\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    try {\n      // \u5C06\u73AF\u5883\u53D8\u91CF\u6DFB\u52A0\u5230\u8BF7\u6C42\u4E2D\u4EE5\u4FBF\u5728\u5904\u7406\u7A0B\u5E8F\u4E2D\u8BBF\u95EE\n      const extendedRequest = request as unknown as ExtendedRequest;\n      extendedRequest.env = env;\n      \n      // \u5904\u7406\u8BF7\u6C42\n      const response = await router.handle(extendedRequest);\n      \n      // \u6DFB\u52A0CORS\u5934\n      if (request.method !== 'OPTIONS') {\n        const headers = new Headers(response.headers);\n        Object.entries(corsHeaders).forEach(([key, value]) => {\n          headers.set(key, value);\n        });\n        return new Response(response.body, {\n          status: response.status,\n          statusText: response.statusText,\n          headers\n        });\n      }\n      \n      return response;\n    } catch (error) {\n      console.error('\u5904\u7406\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF:', error);\n      \n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n  }\n};\n", "const e=({base:e=\"\",routes:r=[]}={})=>({__proto__:new Proxy({},{get:(a,o,t)=>(a,...p)=>r.push([o.toUpperCase(),RegExp(`^${(e+a).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/(\\/$)|((?<=\\/)\\/)/,\"\").replace(/(:(\\w+)\\+)/,\"(?<$2>.*)\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),p])&&t}),routes:r,async handle(e,...a){let o,t,p=new URL(e.url),l=e.query={};for(let[e,r]of p.searchParams)l[e]=void 0===l[e]?r:[l[e],r].flat();for(let[l,s,c]of r)if((l===e.method||\"ALL\"===l)&&(t=p.pathname.match(s))){e.params=t.groups||{};for(let r of c)if(void 0!==(o=await r(e.proxy||e,...a)))return o}}});export{e as Router};\n", "import { sign } from 'jsonwebtoken';\nimport { hashPassword, comparePassword } from '../utils/password';\nimport { setCookie, getCookie, clearCookie } from '../utils/cookies';\nimport { ExtendedRequest, AuthResult, JwtPayload } from '../types';\nimport { verifyToken, verifyJwt } from '../utils/auth';\n\n// \u5904\u7406\u8BA4\u8BC1\u76F8\u5173\u7684\u8BF7\u6C42\nexport const handleAuth = {\n  // \u7528\u6237\u767B\u5F55\n  async login(request: ExtendedRequest): Promise<Response> {\n    try {\n      const { email, password } = await request.json() as { email: string, password: string };\n      \n      if (!email || !password) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u90AE\u7BB1\u548C\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u7528\u6237\u4FE1\u606F\n      const userJson = await request.env.USERS.get(`user:${email}`);\n      \n      if (!userJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728\u6216\u5BC6\u7801\u9519\u8BEF'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const user = JSON.parse(userJson);\n      \n      // \u9A8C\u8BC1\u5BC6\u7801\n      const isPasswordValid = await comparePassword(password, user.password);\n      \n      if (!isPasswordValid) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728\u6216\u5BC6\u7801\u9519\u8BEF'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u521B\u5EFA\u8BBF\u95EE\u4EE4\u724C\u548C\u5237\u65B0\u4EE4\u724C\n      const accessToken = sign(\n        { \n          sub: user.id,\n          email: user.email,\n          name: user.name,\n          role: user.role\n        },\n        request.env.JWT_SECRET,\n        { expiresIn: '1h' }\n      );\n      \n      const refreshToken = sign(\n        { sub: user.id, email: user.email },\n        request.env.JWT_SECRET,\n        { expiresIn: '7d' }\n      );\n      \n      // \u5B58\u50A8\u5237\u65B0\u4EE4\u724C\u5230\u4F1A\u8BDD\u5B58\u50A8\n      const sessionId = crypto.randomUUID();\n      await request.env.SESSIONS.put(`session:${sessionId}`, JSON.stringify({\n        userId: user.id,\n        email: user.email,\n        refreshToken,\n        createdAt: new Date().toISOString()\n      }), { expirationTtl: 60 * 60 * 24 * 7 }) // 7\u5929\u8FC7\u671F\n      \n      // \u521B\u5EFA\u54CD\u5E94\n      const response = new Response(JSON.stringify({\n        success: true,\n        message: '\u767B\u5F55\u6210\u529F',\n        user: {\n          id: user.id,\n          email: user.email,\n          name: user.name,\n          role: user.role\n        },\n        accessToken\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      // \u8BBE\u7F6ECookie\n      setCookie(response, 'refreshToken', sessionId, {\n        httpOnly: true,\n        secure: true,\n        sameSite: 'strict',\n        path: '/',\n        maxAge: 60 * 60 * 24 * 7 // 7\u5929\n      });\n      \n      return response;\n    } catch (error) {\n      console.error('\u767B\u5F55\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u767B\u5F55\u8FC7\u7A0B\u4E2D\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u7528\u6237\u767B\u51FA\n  async logout(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u4ECECookie\u4E2D\u83B7\u53D6\u4F1A\u8BDDID\n      const sessionId = getCookie(request, 'refreshToken');\n      \n      if (sessionId) {\n        // \u4ECEKV\u5B58\u50A8\u4E2D\u5220\u9664\u4F1A\u8BDD\n        await request.env.SESSIONS.delete(`session:${sessionId}`);\n      }\n      \n      // \u521B\u5EFA\u54CD\u5E94\n      const response = new Response(JSON.stringify({\n        success: true,\n        message: '\u767B\u51FA\u6210\u529F'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      // \u6E05\u9664Cookie\n      clearCookie(response, 'refreshToken', {\n        httpOnly: true,\n        secure: true,\n        sameSite: 'strict',\n        path: '/'\n      });\n      \n      return response;\n    } catch (error) {\n      console.error('\u767B\u51FA\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u767B\u51FA\u8FC7\u7A0B\u4E2D\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\n  async getCurrentUser(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4E0D\u9700\u8981\u5220\u9664password\uFF0C\u56E0\u4E3AJwtPayload\u4E2D\u6CA1\u6709\u8FD9\u4E2A\u5C5E\u6027\n      \n      return new Response(JSON.stringify({\n        success: true,\n        user: authResult.user\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u5237\u65B0\u8BBF\u95EE\u4EE4\u724C\n  async refreshToken(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u4ECECookie\u4E2D\u83B7\u53D6\u4F1A\u8BDDID\n      const sessionId = getCookie(request, 'refreshToken');\n      \n      if (!sessionId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u672A\u63D0\u4F9B\u5237\u65B0\u4EE4\u724C'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u4F1A\u8BDD\u4FE1\u606F\n      const sessionJson = await request.env.SESSIONS.get(`session:${sessionId}`);\n      \n      if (!sessionJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u65E0\u6548\u6216\u8FC7\u671F\u7684\u4F1A\u8BDD'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const session = JSON.parse(sessionJson);\n      \n      // \u9A8C\u8BC1\u5237\u65B0\u4EE4\u724C\n      try {\n        verifyJwt(session.refreshToken, request.env.JWT_SECRET);\n      } catch (error) {\n        // \u5220\u9664\u65E0\u6548\u4F1A\u8BDD\n        await request.env.SESSIONS.delete(`session:${sessionId}`);\n        \n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u65E0\u6548\u6216\u8FC7\u671F\u7684\u5237\u65B0\u4EE4\u724C'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u7528\u6237\u4FE1\u606F\n      const userJson = await request.env.USERS.get(`user:${session.email}`);\n      \n      if (!userJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const user = JSON.parse(userJson);\n      \n      // \u521B\u5EFA\u65B0\u7684\u8BBF\u95EE\u4EE4\u724C\n      const accessToken = sign(\n        { \n          sub: user.id,\n          email: user.email,\n          name: user.name,\n          role: user.role\n        },\n        request.env.JWT_SECRET,\n        { expiresIn: '1h' }\n      );\n      \n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u4EE4\u724C\u5DF2\u5237\u65B0',\n        accessToken\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u5237\u65B0\u4EE4\u724C\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5237\u65B0\u4EE4\u724C\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n};\n", "import * as bcrypt from 'bcryptjs';\n\n// u5bf9u5bc6u7801u8fdbu884cu54c8u5e0cu52a0u5bc6\nexport async function hashPassword(password: string): Promise<string> {\n  const salt = await bcrypt.genSalt(10);\n  return bcrypt.hash(password, salt);\n}\n\n// u6bd4u8f83u5bc6u7801u662fu5426u5339u914d\nexport async function comparePassword(password: string, hashedPassword: string): Promise<boolean> {\n  return bcrypt.compare(password, hashedPassword);\n}\n", "/*\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\n Copyright (c) 2025 Daniel Wirtz <dcode@dcode.io>\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n 3. The name of the author may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// The Node.js crypto module is used as a fallback for the Web Crypto API. When\n// building for the browser, inclusion of the crypto module should be disabled,\n// which the package hints at in its package.json for bundlers that support it.\nimport nodeCrypto from \"crypto\";\n\n/**\n * The random implementation to use as a fallback.\n * @type {?function(number):!Array.<number>}\n * @inner\n */\nvar randomFallback = null;\n\n/**\n * Generates cryptographically secure random bytes.\n * @function\n * @param {number} len Bytes length\n * @returns {!Array.<number>} Random bytes\n * @throws {Error} If no random implementation is available\n * @inner\n */\nfunction randomBytes(len) {\n  // Web Crypto API. Globally available in the browser and in Node.js >=23.\n  try {\n    return crypto.getRandomValues(new Uint8Array(len));\n  } catch {}\n  // Node.js crypto module for non-browser environments.\n  try {\n    return nodeCrypto.randomBytes(len);\n  } catch {}\n  // Custom fallback specified with `setRandomFallback`.\n  if (!randomFallback) {\n    throw Error(\n      \"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\",\n    );\n  }\n  return randomFallback(len);\n}\n\n/**\n * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\n *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\n *  is seeded properly!\n * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\n *  sole argument, returning the corresponding array of cryptographically secure random byte values.\n * @see http://nodejs.org/api/crypto.html\n * @see http://www.w3.org/TR/WebCryptoAPI/\n */\nexport function setRandomFallback(random) {\n  randomFallback = random;\n}\n\n/**\n * Synchronously generates a salt.\n * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\n * @param {number=} seed_length Not supported.\n * @returns {string} Resulting salt\n * @throws {Error} If a random fallback is required but not set\n */\nexport function genSaltSync(rounds, seed_length) {\n  rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\n  if (typeof rounds !== \"number\")\n    throw Error(\n      \"Illegal arguments: \" + typeof rounds + \", \" + typeof seed_length,\n    );\n  if (rounds < 4) rounds = 4;\n  else if (rounds > 31) rounds = 31;\n  var salt = [];\n  salt.push(\"$2b$\");\n  if (rounds < 10) salt.push(\"0\");\n  salt.push(rounds.toString());\n  salt.push(\"$\");\n  salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\n  return salt.join(\"\");\n}\n\n/**\n * Asynchronously generates a salt.\n * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\n * @param {(number|function(Error, string=))=} seed_length Not supported.\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function genSalt(rounds, seed_length, callback) {\n  if (typeof seed_length === \"function\")\n    (callback = seed_length), (seed_length = undefined); // Not supported.\n  if (typeof rounds === \"function\") (callback = rounds), (rounds = undefined);\n  if (typeof rounds === \"undefined\") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\n  else if (typeof rounds !== \"number\")\n    throw Error(\"illegal arguments: \" + typeof rounds);\n\n  function _async(callback) {\n    nextTick(function () {\n      // Pretty thin, but salting is fast enough\n      try {\n        callback(null, genSaltSync(rounds));\n      } catch (err) {\n        callback(err);\n      }\n    });\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Synchronously generates a hash for the given password.\n * @param {string} password Password to hash\n * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\n * @returns {string} Resulting hash\n */\nexport function hashSync(password, salt) {\n  if (typeof salt === \"undefined\") salt = GENSALT_DEFAULT_LOG2_ROUNDS;\n  if (typeof salt === \"number\") salt = genSaltSync(salt);\n  if (typeof password !== \"string\" || typeof salt !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt);\n  return _hash(password, salt);\n}\n\n/**\n * Asynchronously generates a hash for the given password.\n * @param {string} password Password to hash\n * @param {number|string} salt Salt length to generate or salt to use\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function hash(password, salt, callback, progressCallback) {\n  function _async(callback) {\n    if (typeof password === \"string\" && typeof salt === \"number\")\n      genSalt(salt, function (err, salt) {\n        _hash(password, salt, callback, progressCallback);\n      });\n    else if (typeof password === \"string\" && typeof salt === \"string\")\n      _hash(password, salt, callback, progressCallback);\n    else\n      nextTick(\n        callback.bind(\n          this,\n          Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt),\n        ),\n      );\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Compares two strings of the same length in constant time.\n * @param {string} known Must be of the correct length\n * @param {string} unknown Must be the same length as `known`\n * @returns {boolean}\n * @inner\n */\nfunction safeStringCompare(known, unknown) {\n  var diff = known.length ^ unknown.length;\n  for (var i = 0; i < known.length; ++i) {\n    diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);\n  }\n  return diff === 0;\n}\n\n/**\n * Synchronously tests a password against a hash.\n * @param {string} password Password to compare\n * @param {string} hash Hash to test against\n * @returns {boolean} true if matching, otherwise false\n * @throws {Error} If an argument is illegal\n */\nexport function compareSync(password, hash) {\n  if (typeof password !== \"string\" || typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof hash);\n  if (hash.length !== 60) return false;\n  return safeStringCompare(\n    hashSync(password, hash.substring(0, hash.length - 31)),\n    hash,\n  );\n}\n\n/**\n * Asynchronously tests a password against a hash.\n * @param {string} password Password to compare\n * @param {string} hashValue Hash to test against\n * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n * @returns {!Promise} If `callback` has been omitted\n * @throws {Error} If `callback` is present but not a function\n */\nexport function compare(password, hashValue, callback, progressCallback) {\n  function _async(callback) {\n    if (typeof password !== \"string\" || typeof hashValue !== \"string\") {\n      nextTick(\n        callback.bind(\n          this,\n          Error(\n            \"Illegal arguments: \" + typeof password + \", \" + typeof hashValue,\n          ),\n        ),\n      );\n      return;\n    }\n    if (hashValue.length !== 60) {\n      nextTick(callback.bind(this, null, false));\n      return;\n    }\n    hash(\n      password,\n      hashValue.substring(0, 29),\n      function (err, comp) {\n        if (err) callback(err);\n        else callback(null, safeStringCompare(comp, hashValue));\n      },\n      progressCallback,\n    );\n  }\n\n  if (callback) {\n    if (typeof callback !== \"function\")\n      throw Error(\"Illegal callback: \" + typeof callback);\n    _async(callback);\n  } else\n    return new Promise(function (resolve, reject) {\n      _async(function (err, res) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(res);\n      });\n    });\n}\n\n/**\n * Gets the number of rounds used to encrypt the specified hash.\n * @param {string} hash Hash to extract the used number of rounds from\n * @returns {number} Number of rounds used\n * @throws {Error} If `hash` is not a string\n */\nexport function getRounds(hash) {\n  if (typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof hash);\n  return parseInt(hash.split(\"$\")[2], 10);\n}\n\n/**\n * Gets the salt portion from a hash. Does not validate the hash.\n * @param {string} hash Hash to extract the salt from\n * @returns {string} Extracted salt part\n * @throws {Error} If `hash` is not a string or otherwise invalid\n */\nexport function getSalt(hash) {\n  if (typeof hash !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof hash);\n  if (hash.length !== 60)\n    throw Error(\"Illegal hash length: \" + hash.length + \" != 60\");\n  return hash.substring(0, 29);\n}\n\n/**\n * Tests if a password will be truncated when hashed, that is its length is\n * greater than 72 bytes when converted to UTF-8.\n * @param {string} password The password to test\n * @returns {boolean} `true` if truncated, otherwise `false`\n */\nexport function truncates(password) {\n  if (typeof password !== \"string\")\n    throw Error(\"Illegal arguments: \" + typeof password);\n  return utf8Length(password) > 72;\n}\n\n/**\n * Continues with the callback on the next tick.\n * @function\n * @param {function(...[*])} callback Callback to execute\n * @inner\n */\nvar nextTick =\n  typeof process !== \"undefined\" &&\n  process &&\n  typeof process.nextTick === \"function\"\n    ? typeof setImmediate === \"function\"\n      ? setImmediate\n      : process.nextTick\n    : setTimeout;\n\n/** Calculates the byte length of a string encoded as UTF8. */\nfunction utf8Length(string) {\n  var len = 0,\n    c = 0;\n  for (var i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128) len += 1;\n    else if (c < 2048) len += 2;\n    else if (\n      (c & 0xfc00) === 0xd800 &&\n      (string.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      ++i;\n      len += 4;\n    } else len += 3;\n  }\n  return len;\n}\n\n/** Converts a string to an array of UTF8 bytes. */\nfunction utf8Array(string) {\n  var offset = 0,\n    c1,\n    c2;\n  var buffer = new Array(utf8Length(string));\n  for (var i = 0, k = string.length; i < k; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = (c1 >> 6) | 192;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else if (\n      (c1 & 0xfc00) === 0xd800 &&\n      ((c2 = string.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n    ) {\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n      ++i;\n      buffer[offset++] = (c1 >> 18) | 240;\n      buffer[offset++] = ((c1 >> 12) & 63) | 128;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else {\n      buffer[offset++] = (c1 >> 12) | 224;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    }\n  }\n  return buffer;\n}\n\n// A base64 implementation for the bcrypt algorithm. This is partly non-standard.\n\n/**\n * bcrypt's own non-standard base64 dictionary.\n * @type {!Array.<string>}\n * @const\n * @inner\n **/\nvar BASE64_CODE =\n  \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\n\n/**\n * @type {!Array.<number>}\n * @const\n * @inner\n **/\nvar BASE64_INDEX = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28,\n  29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,\n];\n\n/**\n * Encodes a byte array to base64 with up to len bytes of input.\n * @param {!Array.<number>} b Byte array\n * @param {number} len Maximum input length\n * @returns {string}\n * @inner\n */\nfunction base64_encode(b, len) {\n  var off = 0,\n    rs = [],\n    c1,\n    c2;\n  if (len <= 0 || len > b.length) throw Error(\"Illegal len: \" + len);\n  while (off < len) {\n    c1 = b[off++] & 0xff;\n    rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\n    c1 = (c1 & 0x03) << 4;\n    if (off >= len) {\n      rs.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = b[off++] & 0xff;\n    c1 |= (c2 >> 4) & 0x0f;\n    rs.push(BASE64_CODE[c1 & 0x3f]);\n    c1 = (c2 & 0x0f) << 2;\n    if (off >= len) {\n      rs.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = b[off++] & 0xff;\n    c1 |= (c2 >> 6) & 0x03;\n    rs.push(BASE64_CODE[c1 & 0x3f]);\n    rs.push(BASE64_CODE[c2 & 0x3f]);\n  }\n  return rs.join(\"\");\n}\n\n/**\n * Decodes a base64 encoded string to up to len bytes of output.\n * @param {string} s String to decode\n * @param {number} len Maximum output length\n * @returns {!Array.<number>}\n * @inner\n */\nfunction base64_decode(s, len) {\n  var off = 0,\n    slen = s.length,\n    olen = 0,\n    rs = [],\n    c1,\n    c2,\n    c3,\n    c4,\n    o,\n    code;\n  if (len <= 0) throw Error(\"Illegal len: \" + len);\n  while (off < slen - 1 && olen < len) {\n    code = s.charCodeAt(off++);\n    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    code = s.charCodeAt(off++);\n    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    if (c1 == -1 || c2 == -1) break;\n    o = (c1 << 2) >>> 0;\n    o |= (c2 & 0x30) >> 4;\n    rs.push(String.fromCharCode(o));\n    if (++olen >= len || off >= slen) break;\n    code = s.charCodeAt(off++);\n    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    if (c3 == -1) break;\n    o = ((c2 & 0x0f) << 4) >>> 0;\n    o |= (c3 & 0x3c) >> 2;\n    rs.push(String.fromCharCode(o));\n    if (++olen >= len || off >= slen) break;\n    code = s.charCodeAt(off++);\n    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    o = ((c3 & 0x03) << 6) >>> 0;\n    o |= c4;\n    rs.push(String.fromCharCode(o));\n    ++olen;\n  }\n  var res = [];\n  for (off = 0; off < olen; off++) res.push(rs[off].charCodeAt(0));\n  return res;\n}\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar BCRYPT_SALT_LEN = 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar GENSALT_DEFAULT_LOG2_ROUNDS = 10;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar BLOWFISH_NUM_ROUNDS = 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar MAX_EXECUTION_TIME = 100;\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar P_ORIG = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\n  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,\n];\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar S_ORIG = [\n  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\n  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,\n  0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\n  0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,\n  0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,\n  0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,\n  0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,\n  0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\n  0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,\n  0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,\n  0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,\n  0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,\n  0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\n  0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,\n  0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,\n  0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,\n  0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,\n  0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\n  0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,\n  0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,\n  0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,\n  0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,\n  0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\n  0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\n  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,\n  0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,\n  0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\n  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,\n  0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,\n  0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\n  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\n  0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,\n  0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\n  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,\n  0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,\n  0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\n  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,\n  0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\n  0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\n  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,\n  0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,\n  0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\n  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,\n  0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,\n  0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\n  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\n  0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,\n  0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\n  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,\n  0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,\n  0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\n  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,\n  0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\n  0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\n  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,\n  0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,\n  0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\n  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,\n  0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,\n  0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\n  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\n  0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,\n  0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\n  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,\n  0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,\n  0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\n  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,\n  0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\n  0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\n  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,\n  0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,\n  0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\n  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,\n  0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,\n  0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\n  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\n  0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,\n  0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\n  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,\n  0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,\n  0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\n  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,\n  0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\n  0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\n  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,\n  0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,\n  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,\n  0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,\n  0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,\n  0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\n  0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,\n  0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,\n  0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,\n  0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,\n  0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\n  0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,\n  0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,\n  0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,\n  0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,\n  0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\n  0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,\n  0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,\n  0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,\n  0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,\n  0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\n  0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,\n  0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,\n  0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,\n];\n\n/**\n * @type {Array.<number>}\n * @const\n * @inner\n */\nvar C_ORIG = [\n  0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,\n];\n\n/**\n * @param {Array.<number>} lr\n * @param {number} off\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @returns {Array.<number>}\n * @inner\n */\nfunction _encipher(lr, off, P, S) {\n  // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\n  var n,\n    l = lr[off],\n    r = lr[off + 1];\n\n  l ^= P[0];\n\n  /*\n    for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\n        // Feistel substitution on left word\n        n  = S[l >>> 24],\n        n += S[0x100 | ((l >> 16) & 0xff)],\n        n ^= S[0x200 | ((l >> 8) & 0xff)],\n        n += S[0x300 | (l & 0xff)],\n        r ^= n ^ P[++i],\n        // Feistel substitution on right word\n        n  = S[r >>> 24],\n        n += S[0x100 | ((r >> 16) & 0xff)],\n        n ^= S[0x200 | ((r >> 8) & 0xff)],\n        n += S[0x300 | (r & 0xff)],\n        l ^= n ^ P[++i];\n    */\n\n  //The following is an unrolled version of the above loop.\n  //Iteration 0\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[1];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[2];\n  //Iteration 1\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[3];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[4];\n  //Iteration 2\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[5];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[6];\n  //Iteration 3\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[7];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[8];\n  //Iteration 4\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[9];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[10];\n  //Iteration 5\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[11];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[12];\n  //Iteration 6\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[13];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[14];\n  //Iteration 7\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[15];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[16];\n\n  lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\n  lr[off + 1] = l;\n  return lr;\n}\n\n/**\n * @param {Array.<number>} data\n * @param {number} offp\n * @returns {{key: number, offp: number}}\n * @inner\n */\nfunction _streamtoword(data, offp) {\n  for (var i = 0, word = 0; i < 4; ++i)\n    (word = (word << 8) | (data[offp] & 0xff)),\n      (offp = (offp + 1) % data.length);\n  return { key: word, offp: offp };\n}\n\n/**\n * @param {Array.<number>} key\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @inner\n */\nfunction _key(key, P, S) {\n  var offset = 0,\n    lr = [0, 0],\n    plen = P.length,\n    slen = S.length,\n    sw;\n  for (var i = 0; i < plen; i++)\n    (sw = _streamtoword(key, offset)),\n      (offset = sw.offp),\n      (P[i] = P[i] ^ sw.key);\n  for (i = 0; i < plen; i += 2)\n    (lr = _encipher(lr, 0, P, S)), (P[i] = lr[0]), (P[i + 1] = lr[1]);\n  for (i = 0; i < slen; i += 2)\n    (lr = _encipher(lr, 0, P, S)), (S[i] = lr[0]), (S[i + 1] = lr[1]);\n}\n\n/**\n * Expensive key schedule Blowfish.\n * @param {Array.<number>} data\n * @param {Array.<number>} key\n * @param {Array.<number>} P\n * @param {Array.<number>} S\n * @inner\n */\nfunction _ekskey(data, key, P, S) {\n  var offp = 0,\n    lr = [0, 0],\n    plen = P.length,\n    slen = S.length,\n    sw;\n  for (var i = 0; i < plen; i++)\n    (sw = _streamtoword(key, offp)), (offp = sw.offp), (P[i] = P[i] ^ sw.key);\n  offp = 0;\n  for (i = 0; i < plen; i += 2)\n    (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[0] ^= sw.key),\n      (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[1] ^= sw.key),\n      (lr = _encipher(lr, 0, P, S)),\n      (P[i] = lr[0]),\n      (P[i + 1] = lr[1]);\n  for (i = 0; i < slen; i += 2)\n    (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[0] ^= sw.key),\n      (sw = _streamtoword(data, offp)),\n      (offp = sw.offp),\n      (lr[1] ^= sw.key),\n      (lr = _encipher(lr, 0, P, S)),\n      (S[i] = lr[0]),\n      (S[i + 1] = lr[1]);\n}\n\n/**\n * Internaly crypts a string.\n * @param {Array.<number>} b Bytes to crypt\n * @param {Array.<number>} salt Salt bytes to use\n * @param {number} rounds Number of rounds\n * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\n *  omitted, the operation will be performed synchronously.\n *  @param {function(number)=} progressCallback Callback called with the current progress\n * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\n * @inner\n */\nfunction _crypt(b, salt, rounds, callback, progressCallback) {\n  var cdata = C_ORIG.slice(),\n    clen = cdata.length,\n    err;\n\n  // Validate\n  if (rounds < 4 || rounds > 31) {\n    err = Error(\"Illegal number of rounds (4-31): \" + rounds);\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  if (salt.length !== BCRYPT_SALT_LEN) {\n    err = Error(\n      \"Illegal salt length: \" + salt.length + \" != \" + BCRYPT_SALT_LEN,\n    );\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  rounds = (1 << rounds) >>> 0;\n\n  var P,\n    S,\n    i = 0,\n    j;\n\n  //Use typed arrays when available - huge speedup!\n  if (typeof Int32Array === \"function\") {\n    P = new Int32Array(P_ORIG);\n    S = new Int32Array(S_ORIG);\n  } else {\n    P = P_ORIG.slice();\n    S = S_ORIG.slice();\n  }\n\n  _ekskey(salt, b, P, S);\n\n  /**\n   * Calcualtes the next round.\n   * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\n   * @inner\n   */\n  function next() {\n    if (progressCallback) progressCallback(i / rounds);\n    if (i < rounds) {\n      var start = Date.now();\n      for (; i < rounds; ) {\n        i = i + 1;\n        _key(b, P, S);\n        _key(salt, P, S);\n        if (Date.now() - start > MAX_EXECUTION_TIME) break;\n      }\n    } else {\n      for (i = 0; i < 64; i++)\n        for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);\n      var ret = [];\n      for (i = 0; i < clen; i++)\n        ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\n          ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\n          ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\n          ret.push((cdata[i] & 0xff) >>> 0);\n      if (callback) {\n        callback(null, ret);\n        return;\n      } else return ret;\n    }\n    if (callback) nextTick(next);\n  }\n\n  // Async\n  if (typeof callback !== \"undefined\") {\n    next();\n\n    // Sync\n  } else {\n    var res;\n    while (true) if (typeof (res = next()) !== \"undefined\") return res || [];\n  }\n}\n\n/**\n * Internally hashes a password.\n * @param {string} password Password to hash\n * @param {?string} salt Salt to use, actually never null\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\n *  hashing is performed synchronously.\n *  @param {function(number)=} progressCallback Callback called with the current progress\n * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\n * @inner\n */\nfunction _hash(password, salt, callback, progressCallback) {\n  var err;\n  if (typeof password !== \"string\" || typeof salt !== \"string\") {\n    err = Error(\"Invalid string / salt: Not a string\");\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n\n  // Validate the salt\n  var minor, offset;\n  if (salt.charAt(0) !== \"$\" || salt.charAt(1) !== \"2\") {\n    err = Error(\"Invalid salt version: \" + salt.substring(0, 2));\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  if (salt.charAt(2) === \"$\") (minor = String.fromCharCode(0)), (offset = 3);\n  else {\n    minor = salt.charAt(2);\n    if (\n      (minor !== \"a\" && minor !== \"b\" && minor !== \"y\") ||\n      salt.charAt(3) !== \"$\"\n    ) {\n      err = Error(\"Invalid salt revision: \" + salt.substring(2, 4));\n      if (callback) {\n        nextTick(callback.bind(this, err));\n        return;\n      } else throw err;\n    }\n    offset = 4;\n  }\n\n  // Extract number of rounds\n  if (salt.charAt(offset + 2) > \"$\") {\n    err = Error(\"Missing salt rounds\");\n    if (callback) {\n      nextTick(callback.bind(this, err));\n      return;\n    } else throw err;\n  }\n  var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\n    r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\n    rounds = r1 + r2,\n    real_salt = salt.substring(offset + 3, offset + 25);\n  password += minor >= \"a\" ? \"\\x00\" : \"\";\n\n  var passwordb = utf8Array(password),\n    saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\n\n  /**\n   * Finishes hashing.\n   * @param {Array.<number>} bytes Byte array\n   * @returns {string}\n   * @inner\n   */\n  function finish(bytes) {\n    var res = [];\n    res.push(\"$2\");\n    if (minor >= \"a\") res.push(minor);\n    res.push(\"$\");\n    if (rounds < 10) res.push(\"0\");\n    res.push(rounds.toString());\n    res.push(\"$\");\n    res.push(base64_encode(saltb, saltb.length));\n    res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\n    return res.join(\"\");\n  }\n\n  // Sync\n  if (typeof callback == \"undefined\")\n    return finish(_crypt(passwordb, saltb, rounds));\n  // Async\n  else {\n    _crypt(\n      passwordb,\n      saltb,\n      rounds,\n      function (err, bytes) {\n        if (err) callback(err, null);\n        else callback(null, finish(bytes));\n      },\n      progressCallback,\n    );\n  }\n}\n\n/**\n * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\n * @function\n * @param {!Array.<number>} bytes Byte array\n * @param {number} length Maximum input length\n * @returns {string}\n */\nexport function encodeBase64(bytes, length) {\n  return base64_encode(bytes, length);\n}\n\n/**\n * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\n * @function\n * @param {string} string String to decode\n * @param {number} length Maximum output length\n * @returns {!Array.<number>}\n */\nexport function decodeBase64(string, length) {\n  return base64_decode(string, length);\n}\n\nexport default {\n  setRandomFallback,\n  genSaltSync,\n  genSalt,\n  hashSync,\n  hash,\n  compareSync,\n  compare,\n  getRounds,\n  getSalt,\n  truncates,\n  encodeBase64,\n  decodeBase64,\n};\n", "// Cookie\u9009\u9879\u63A5\u53E3\u5B9A\u4E49\ninterface CookieOptions {\n  httpOnly?: boolean;\n  secure?: boolean;\n  sameSite?: 'strict' | 'lax' | 'none';\n  path?: string;\n  maxAge?: number;\n}\n\n// \u8BBE\u7F6ECookie\nexport function setCookie(response: Response, name: string, value: string, options: CookieOptions = {}): void {\n  const cookieHeader = response.headers.get('Set-Cookie') || '';\n  const cookies = cookieHeader.split(', ');\n  \n  // \u6784\u5EFACookie\u5B57\u7B26\u4E32\n  let cookie = `${name}=${value}`;\n  \n  if (options.httpOnly) cookie += '; HttpOnly';\n  if (options.secure) cookie += '; Secure';\n  if (options.sameSite) cookie += `; SameSite=${options.sameSite}`;\n  if (options.path) cookie += `; Path=${options.path}`;\n  if (options.maxAge) cookie += `; Max-Age=${options.maxAge}`;\n  \n  cookies.push(cookie);\n  \n  // \u8BBE\u7F6E\u56DE\u54CD\u5E94\u5934\n  response.headers.set('Set-Cookie', cookies.join(', '));\n}\n\n// \u4ECE\u8BF7\u6C42\u4E2D\u83B7\u53D6Cookie\u503C\nexport function getCookie(request: Request, name: string): string | null {\n  const cookieHeader = request.headers.get('Cookie') || '';\n  const cookies = cookieHeader.split(';').map(c => c.trim());\n  \n  for (const cookie of cookies) {\n    const [cookieName, cookieValue] = cookie.split('=');\n    if (cookieName === name) {\n      return cookieValue;\n    }\n  }\n  \n  return null;\n}\n\n// \u6E05\u9664Cookie\nexport function clearCookie(response: Response, name: string, options: CookieOptions = {}): void {\n  // \u8BBE\u7F6E\u8FC7\u671F\u7684Cookie\n  const cookieOptions = {\n    ...options,\n    maxAge: 0 // \u7ACB\u5373\u8FC7\u671F\n  };\n  \n  setCookie(response, name, '', cookieOptions);\n}\n", "import { ExtendedRequest, AuthResult, JwtPayload } from '../types';\n\n/**\n * \u9A8C\u8BC1JWT\u4EE4\u724C\n * @param request \u8BF7\u6C42\u5BF9\u8C61\n * @returns \u9A8C\u8BC1\u7ED3\u679C\n */\nexport async function verifyToken(request: ExtendedRequest): Promise<AuthResult> {\n  try {\n    // \u4ECE\u8BF7\u6C42\u5934\u6216Cookie\u4E2D\u83B7\u53D6\u4EE4\u724C\n    const authHeader = request.headers.get('Authorization');\n    const token = authHeader ? authHeader.replace('Bearer ', '') : getCookie(request, 'token');\n    \n    if (!token) {\n      return {\n        success: false,\n        message: '\u672A\u63D0\u4F9B\u8BA4\u8BC1\u4EE4\u724C',\n        status: 401\n      };\n    }\n    \n    // \u89E3\u7801\u5E76\u9A8C\u8BC1JWT\u4EE4\u724C\n    const payload = await verifyJwt(token, request.env.JWT_SECRET);\n    \n    if (!payload) {\n      return {\n        success: false,\n        message: '\u65E0\u6548\u7684\u8BA4\u8BC1\u4EE4\u724C',\n        status: 401\n      };\n    }\n    \n    return {\n      success: true,\n      user: payload,\n      status: 200\n    };\n  } catch (error) {\n    console.error('\u4EE4\u724C\u9A8C\u8BC1\u9519\u8BEF:', error);\n    return {\n      success: false,\n      message: '\u4EE4\u724C\u9A8C\u8BC1\u5931\u8D25',\n      status: 401\n    };\n  }\n}\n\n/**\n * \u4ECE\u8BF7\u6C42\u4E2D\u83B7\u53D6Cookie\u503C\n * @param request \u8BF7\u6C42\u5BF9\u8C61\n * @param name Cookie\u540D\u79F0\n * @returns Cookie\u503C\n */\nexport function getCookie(request: Request, name: string): string | null {\n  const cookieHeader = request.headers.get('Cookie');\n  if (!cookieHeader) return null;\n  \n  const cookies = cookieHeader.split(';');\n  for (const cookie of cookies) {\n    const [cookieName, cookieValue] = cookie.trim().split('=');\n    if (cookieName === name) {\n      return cookieValue;\n    }\n  }\n  \n  return null;\n}\n\n/**\n * \u9A8C\u8BC1JWT\u4EE4\u724C\n * @param token JWT\u4EE4\u724C\n * @param secret \u5BC6\u94A5\n * @returns \u89E3\u7801\u540E\u7684\u8F7D\u8377\n */\nexport async function verifyJwt(token: string, secret: string): Promise<JwtPayload | null> {\n  try {\n    // \u5C06JWT\u5BC6\u94A5\u8F6C\u6362\u4E3A\u52A0\u5BC6\u5BC6\u94A5\n    const encoder = new TextEncoder();\n    const keyData = encoder.encode(secret);\n    const key = await crypto.subtle.importKey(\n      'raw',\n      keyData,\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n    \n    // \u89E3\u6790JWT\u4EE4\u724C\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      return null;\n    }\n    \n    const header = parts[0];\n    const payload = parts[1];\n    const signature = parts[2];\n    \n    // \u9A8C\u8BC1\u7B7E\u540D\n    const signatureData = await crypto.subtle.verify(\n      'HMAC',\n      key,\n      base64UrlDecode(signature),\n      encoder.encode(`${header}.${payload}`)\n    );\n    \n    if (!signatureData) {\n      return null;\n    }\n    \n    // \u89E3\u7801\u8F7D\u8377\n    const decodedPayload = JSON.parse(atob(payload.replace(/-/g, '+').replace(/_/g, '/')));\n    \n    // \u9A8C\u8BC1\u8FC7\u671F\u65F6\u95F4\n    if (decodedPayload.exp && decodedPayload.exp < Math.floor(Date.now() / 1000)) {\n      return null;\n    }\n    \n    return decodedPayload;\n  } catch (error) {\n    console.error('JWT\u9A8C\u8BC1\u9519\u8BEF:', error);\n    return null;\n  }\n}\n\n/**\n * Base64 URL\u89E3\u7801\n * @param str \u8981\u89E3\u7801\u7684\u5B57\u7B26\u4E32\n * @returns \u89E3\u7801\u540E\u7684ArrayBuffer\n */\nfunction base64UrlDecode(str: string): ArrayBuffer {\n  // \u5C06Base64 URL\u7F16\u7801\u8F6C\u6362\u4E3A\u6807\u51C6Base64\u7F16\u7801\n  const base64 = str.replace(/-/g, '+').replace(/_/g, '/');\n  const padding = '='.repeat((4 - (base64.length % 4)) % 4);\n  const base64Padded = base64 + padding;\n  \n  // \u89E3\u7801Base64\u5B57\u7B26\u4E32\n  const rawData = atob(base64Padded);\n  const outputArray = new Uint8Array(rawData.length);\n  \n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  \n  return outputArray.buffer;\n}\n", "import { verifyToken } from '../utils/auth';\nimport { hashPassword } from '../utils/password';\nimport { ExtendedRequest, User } from '../types';\n\n// \u5904\u7406\u7528\u6237\u7BA1\u7406\u76F8\u5173\u7684\u8BF7\u6C42\nexport const handleUsers = {\n  // \u83B7\u53D6\u7528\u6237\u5217\u8868\n  async list(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u68C0\u67E5\u662F\u5426\u4E3A\u7BA1\u7406\u5458\n      if (authResult.user && authResult.user.role !== 'admin') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u6CA1\u6709\u6743\u9650\u8BBF\u95EE'\n        }), {\n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u6240\u6709\u7528\u6237\u5217\u8868\n      const userKeys = await request.env.USERS.list({ prefix: 'user:' });\n      const users = [];\n      \n      for (const key of userKeys.keys) {\n        const userJson = await request.env.USERS.get(key.name);\n        if (userJson) {\n          const user = JSON.parse(userJson);\n          // \u4E0D\u8FD4\u56DE\u5BC6\u7801\n          delete (user as Partial<User>).password;\n          users.push(user);\n        }\n      }\n      \n      return new Response(JSON.stringify({\n        success: true,\n        users\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7528\u6237\u5217\u8868\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6\u7528\u6237\u5217\u8868\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u521B\u5EFA\u65B0\u7528\u6237\n  async create(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u68C0\u67E5\u662F\u5426\u4E3A\u7BA1\u7406\u5458\n      if (authResult.user && authResult.user.role !== 'admin') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u6CA1\u6709\u6743\u9650\u6267\u884C\u6B64\u64CD\u4F5C'\n        }), {\n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u4F53\n      const { email, name, password, role } = await request.json() as any;\n      \n      // \u9A8C\u8BC1\u5FC5\u586B\u5B57\u6BB5\n      if (!email || !name || !password) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u90AE\u7BB1\u3001\u59D3\u540D\u548C\u5BC6\u7801\u4E3A\u5FC5\u586B\u9879'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u89D2\u8272\n      if (role && !['admin', 'user'].includes(role)) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u89D2\u8272\u5FC5\u987B\u662F admin \u6216 user'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u5B58\u5728\n      const existingUser = await request.env.USERS.get(`user:${email}`);\n      if (existingUser) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C'\n        }), {\n          status: 409,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u54C8\u5E0C\u5BC6\u7801\n      const hashedPassword = await hashPassword(password);\n      \n      // \u521B\u5EFA\u65B0\u7528\u6237\n      const userId = crypto.randomUUID();\n      const newUser: User = {\n        id: userId,\n        email,\n        name,\n        password: hashedPassword,\n        role: role || 'user',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      // \u5B58\u50A8\u7528\u6237\u4FE1\u606F\u5230KV\n      await request.env.USERS.put(`user:${email}`, JSON.stringify(newUser));\n      \n      // \u4E0D\u8FD4\u56DE\u5BC6\u7801\n      const userResponse = { ...newUser } as Partial<User>;\n      delete userResponse.password;\n      \n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u7528\u6237\u521B\u5EFA\u6210\u529F',\n        user: userResponse\n      }), {\n        status: 201,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u521B\u5EFA\u7528\u6237\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u521B\u5EFA\u7528\u6237\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u83B7\u53D6\u5355\u4E2A\u7528\u6237\n  async get(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u83B7\u53D6\u7528\u6237ID\n      const userId = request.params?.id;\n      \n      if (!userId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u6240\u6709\u7528\u6237\n      const userKeys = await request.env.USERS.list({ prefix: 'user:' });\n      let targetUser = null;\n      \n      for (const key of userKeys.keys) {\n        const userJson = await request.env.USERS.get(key.name);\n        if (userJson) {\n          const user = JSON.parse(userJson);\n          if (user.id === userId) {\n            targetUser = user;\n            break;\n          }\n        }\n      }\n      \n      if (!targetUser) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u68C0\u67E5\u6743\u9650\uFF1A\u7BA1\u7406\u5458\u53EF\u4EE5\u67E5\u770B\u6240\u6709\u7528\u6237\uFF0C\u666E\u901A\u7528\u6237\u53EA\u80FD\u67E5\u770B\u81EA\u5DF1\n      if (authResult.user && authResult.user.role !== 'admin' && authResult.user.sub !== targetUser.id) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u6CA1\u6709\u6743\u9650\u8BBF\u95EE'\n        }), {\n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4E0D\u8FD4\u56DE\u5BC6\u7801\n      delete (targetUser as Partial<User>).password;\n      \n      return new Response(JSON.stringify({\n        success: true,\n        user: targetUser\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u66F4\u65B0\u7528\u6237\u4FE1\u606F\n  async update(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u83B7\u53D6\u7528\u6237ID\n      const userId = request.params?.id;\n      \n      if (!userId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u6240\u6709\u7528\u6237\n      const userKeys = await request.env.USERS.list({ prefix: 'user:' });\n      let targetUser = null;\n      let userEmail = null;\n      \n      for (const key of userKeys.keys) {\n        const userJson = await request.env.USERS.get(key.name);\n        if (userJson) {\n          const user = JSON.parse(userJson);\n          if (user.id === userId) {\n            targetUser = user;\n            userEmail = user.email;\n            break;\n          }\n        }\n      }\n      \n      if (!targetUser || !userEmail) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u68C0\u67E5\u6743\u9650\uFF1A\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u65B0\u6240\u6709\u7528\u6237\uFF0C\u666E\u901A\u7528\u6237\u53EA\u80FD\u66F4\u65B0\u81EA\u5DF1\n      if (authResult.user && authResult.user.role !== 'admin' && authResult.user.sub !== targetUser.id) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u6CA1\u6709\u6743\u9650\u6267\u884C\u6B64\u64CD\u4F5C'\n        }), {\n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u4F53\n      const { name, password, role } = await request.json() as any;\n      \n      // \u66F4\u65B0\u7528\u6237\u4FE1\u606F\n      if (name) targetUser.name = name;\n      \n      // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u6539\u89D2\u8272\n      if (role && authResult.user && authResult.user.role === 'admin') {\n        if (!['admin', 'user'].includes(role)) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u89D2\u8272\u5FC5\u987B\u662F admin \u6216 user'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        targetUser.role = role;\n      }\n      \n      // \u66F4\u65B0\u5BC6\u7801\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\n      if (password) {\n        targetUser.password = await hashPassword(password);\n      }\n      \n      targetUser.updatedAt = new Date().toISOString();\n      \n      // \u5B58\u50A8\u66F4\u65B0\u540E\u7684\u7528\u6237\u4FE1\u606F\n      await request.env.USERS.put(`user:${userEmail}`, JSON.stringify(targetUser));\n      \n      // \u4E0D\u8FD4\u56DE\u5BC6\u7801\n      const userResponse = { ...targetUser } as Partial<User>;\n      delete userResponse.password;\n      \n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u7528\u6237\u4FE1\u606F\u66F4\u65B0\u6210\u529F',\n        user: userResponse\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u66F4\u65B0\u7528\u6237\u4FE1\u606F\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u66F4\u65B0\u7528\u6237\u4FE1\u606F\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u5220\u9664\u7528\u6237\n  async delete(request: ExtendedRequest): Promise<Response> {\n    try {\n      // \u83B7\u53D6\u7528\u6237ID\n      const userId = request.params?.id;\n      \n      if (!userId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u8BF7\u6C42\u6743\u9650\n      const authResult = await verifyToken(request);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: authResult.message\n        }), {\n          status: authResult.status,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u5220\u9664\u7528\u6237\n      if (authResult.user && authResult.user.role !== 'admin') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u6CA1\u6709\u6743\u9650\u6267\u884C\u6B64\u64CD\u4F5C'\n        }), {\n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u6240\u6709\u7528\u6237\n      const userKeys = await request.env.USERS.list({ prefix: 'user:' });\n      let userKeyToDelete = null;\n      \n      for (const key of userKeys.keys) {\n        const userJson = await request.env.USERS.get(key.name);\n        if (userJson) {\n          const user = JSON.parse(userJson);\n          if (user.id === userId) {\n            userKeyToDelete = key.name;\n            break;\n          }\n        }\n      }\n      \n      if (!userKeyToDelete) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u5220\u9664\u7528\u6237\n      await request.env.USERS.delete(userKeyToDelete);\n      \n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u7528\u6237\u5220\u9664\u6210\u529F'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u5220\u9664\u7528\u6237\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5220\u9664\u7528\u6237\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n};\n", "import { verifyToken } from '../utils/auth';\nimport { ExtendedRequest, Application } from '../types';\n\n// \u5E94\u7528\u7BA1\u7406\u5904\u7406\u7A0B\u5E8F\nexport const handleApplications = {\n  /**\n   * \u83B7\u53D6\u5E94\u7528\u5217\u8868\n   */\n  async list(request: ExtendedRequest): Promise<Response> {\n    // \u9A8C\u8BC1\u7528\u6237\u4EE4\u724C\n    const authResult = await verifyToken(request);\n    if (!authResult.success) {\n      return new Response(JSON.stringify({\n        success: false,\n        message: authResult.message || '\u672A\u6388\u6743'\n      }), {\n        status: authResult.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u6240\u6709\u5E94\u7528\n      const { keys } = await request.env.APPLICATIONS.list();\n      const applications: Application[] = [];\n\n      for (const key of keys) {\n        const appData = await request.env.APPLICATIONS.get(key.name, 'json');\n        if (appData) {\n          applications.push(appData as Application);\n        }\n      }\n\n      // \u6839\u636E\u7528\u6237\u89D2\u8272\u8FC7\u6EE4\u5E94\u7528\n      let filteredApps = applications;\n      if (authResult.user && authResult.user.role !== 'admin') {\n        filteredApps = applications.filter(app => {\n          // \u5982\u679C\u5E94\u7528\u6CA1\u6709\u6307\u5B9A\u6388\u6743\u7528\u6237\uFF0C\u5219\u6240\u6709\u7528\u6237\u90FD\u53EF\u4EE5\u8BBF\u95EE\n          if (!app.authorizedUsers || app.authorizedUsers.length === 0) {\n            return true;\n          }\n          // \u5426\u5219\u68C0\u67E5\u7528\u6237\u662F\u5426\u5728\u6388\u6743\u5217\u8868\u4E2D\n          return app.authorizedUsers.includes(authResult.user!.sub);\n        });\n      }\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: filteredApps\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6\u5E94\u7528\u5217\u8868\u5931\u8D25:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6\u5E94\u7528\u5217\u8868\u5931\u8D25',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n\n  /**\n   * \u521B\u5EFA\u65B0\u5E94\u7528\n   */\n  async create(request: ExtendedRequest): Promise<Response> {\n    // \u9A8C\u8BC1\u7528\u6237\u4EE4\u724C\n    const authResult = await verifyToken(request);\n    if (!authResult.success) {\n      return new Response(JSON.stringify({\n        success: false,\n        message: authResult.message || '\u672A\u6388\u6743'\n      }), {\n        status: authResult.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u521B\u5EFA\u5E94\u7528\n    if (authResult.user && authResult.user.role !== 'admin') {\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u6743\u9650\u4E0D\u8DB3\uFF0C\u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u521B\u5EFA\u5E94\u7528'\n      }), {\n        status: 403,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      // \u83B7\u53D6\u8BF7\u6C42\u4F53\n      const data = await request.json() as any;\n      \n      // \u9A8C\u8BC1\u5FC5\u586B\u5B57\u6BB5\n      if (!data.name || !data.type) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u540D\u79F0\u548C\u7C7B\u578B\u4E3A\u5FC5\u586B\u9879'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u521B\u5EFA\u65B0\u5E94\u7528\n      const newApp: Application = {\n        id: crypto.randomUUID(),\n        name: data.name,\n        description: data.description || '',\n        type: data.type,\n        clientId: data.type === 'oidc' ? crypto.randomUUID() : undefined,\n        clientSecret: data.type === 'oidc' ? crypto.randomUUID() : undefined,\n        redirectUris: data.redirectUris || [],\n        signingCert: data.signingCert,\n        encryptCert: data.encryptCert,\n        authorizedUsers: data.authorizedUsers || [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      // \u4FDD\u5B58\u5230KV\u5B58\u50A8\n      await request.env.APPLICATIONS.put(newApp.id, JSON.stringify(newApp));\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: newApp\n      }), {\n        status: 201,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u521B\u5EFA\u5E94\u7528\u5931\u8D25:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u521B\u5EFA\u5E94\u7528\u5931\u8D25',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n\n  /**\n   * \u83B7\u53D6\u5355\u4E2A\u5E94\u7528\u8BE6\u60C5\n   */\n  async get(request: ExtendedRequest): Promise<Response> {\n    // \u9A8C\u8BC1\u7528\u6237\u4EE4\u724C\n    const authResult = await verifyToken(request);\n    if (!authResult.success) {\n      return new Response(JSON.stringify({\n        success: false,\n        message: authResult.message || '\u672A\u6388\u6743'\n      }), {\n        status: authResult.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      const appId = request.params?.id;\n      if (!appId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u5E94\u7528\n      const appData = await request.env.APPLICATIONS.get(appId, 'json') as Application | null;\n      if (!appData) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u68C0\u67E5\u7528\u6237\u662F\u5426\u6709\u6743\u9650\u8BBF\u95EE\u8BE5\u5E94\u7528\n      if (authResult.user && authResult.user.role !== 'admin') {\n        if (appData.authorizedUsers && appData.authorizedUsers.length > 0 && \n            !appData.authorizedUsers.includes(authResult.user.sub)) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u65E0\u6743\u8BBF\u95EE\u8BE5\u5E94\u7528'\n          }), {\n            status: 403,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      }\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: appData\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6\u5E94\u7528\u8BE6\u60C5\u5931\u8D25:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6\u5E94\u7528\u8BE6\u60C5\u5931\u8D25',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n\n  /**\n   * \u66F4\u65B0\u5E94\u7528\n   */\n  async update(request: ExtendedRequest): Promise<Response> {\n    // \u9A8C\u8BC1\u7528\u6237\u4EE4\u724C\n    const authResult = await verifyToken(request);\n    if (!authResult.success) {\n      return new Response(JSON.stringify({\n        success: false,\n        message: authResult.message || '\u672A\u6388\u6743'\n      }), {\n        status: authResult.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u65B0\u5E94\u7528\n    if (authResult.user && authResult.user.role !== 'admin') {\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u6743\u9650\u4E0D\u8DB3\uFF0C\u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u65B0\u5E94\u7528'\n      }), {\n        status: 403,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      const appId = request.params?.id;\n      if (!appId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u5E94\u7528\n      const existingApp = await request.env.APPLICATIONS.get(appId, 'json') as Application | null;\n      if (!existingApp) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      const data = await request.json() as any;\n      \n      // \u66F4\u65B0\u5E94\u7528\u4FE1\u606F\n      const updatedApp: Application = {\n        ...existingApp,\n        name: data.name || existingApp.name,\n        description: data.description !== undefined ? data.description : existingApp.description,\n        type: existingApp.type, // \u4E0D\u5141\u8BB8\u66F4\u6539\u5E94\u7528\u7C7B\u578B\n        redirectUris: data.redirectUris || existingApp.redirectUris,\n        signingCert: data.signingCert !== undefined ? data.signingCert : existingApp.signingCert,\n        encryptCert: data.encryptCert !== undefined ? data.encryptCert : existingApp.encryptCert,\n        authorizedUsers: data.authorizedUsers || existingApp.authorizedUsers,\n        updatedAt: new Date().toISOString()\n      };\n\n      // \u4FDD\u5B58\u5230KV\u5B58\u50A8\n      await request.env.APPLICATIONS.put(updatedApp.id, JSON.stringify(updatedApp));\n\n      return new Response(JSON.stringify({\n        success: true,\n        data: updatedApp\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u66F4\u65B0\u5E94\u7528\u5931\u8D25:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u66F4\u65B0\u5E94\u7528\u5931\u8D25',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n\n  /**\n   * \u5220\u9664\u5E94\u7528\n   */\n  async delete(request: ExtendedRequest): Promise<Response> {\n    // \u9A8C\u8BC1\u7528\u6237\u4EE4\u724C\n    const authResult = await verifyToken(request);\n    if (!authResult.success) {\n      return new Response(JSON.stringify({\n        success: false,\n        message: authResult.message || '\u672A\u6388\u6743'\n      }), {\n        status: authResult.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u5220\u9664\u5E94\u7528\n    if (authResult.user && authResult.user.role !== 'admin') {\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u6743\u9650\u4E0D\u8DB3\uFF0C\u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u5220\u9664\u5E94\u7528'\n      }), {\n        status: 403,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      const appId = request.params?.id;\n      if (!appId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u68C0\u67E5\u5E94\u7528\u662F\u5426\u5B58\u5728\n      const existingApp = await request.env.APPLICATIONS.get(appId, 'json');\n      if (!existingApp) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u4ECEKV\u5B58\u50A8\u4E2D\u5220\u9664\u5E94\u7528\n      await request.env.APPLICATIONS.delete(appId);\n\n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u5E94\u7528\u5DF2\u6210\u529F\u5220\u9664'\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('\u5220\u9664\u5E94\u7528\u5931\u8D25:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5220\u9664\u5E94\u7528\u5931\u8D25',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n};\n", "import { verifyToken } from '../utils/auth';\nimport { ServiceProvider, IdentityProvider } from 'samlify';\nimport { ExtendedRequest, SamlRequest } from '../types';\n\n// SAML\u5904\u7406\u7A0B\u5E8F\nexport const handleSaml = {\n  // \u83B7\u53D6SAML\u5143\u6570\u636E\n  async metadata(request: ExtendedRequest): Promise<Response> {\n    try {\n      const env = request.env;\n      const url = new URL(request.url);\n      const appId = url.pathname.split('/').pop();\n      \n      if (!appId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u5E94\u7528\u4FE1\u606F\n      const appJson = await env.APPLICATIONS.get(`app:${appId}`);\n      \n      if (!appJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const app = JSON.parse(appJson);\n      \n      // \u68C0\u67E5\u5E94\u7528\u7C7B\u578B\u662F\u5426\u4E3ASAML\n      if (app.type !== 'saml') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u7C7B\u578B\u4E0D\u662FSAML'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u521B\u5EFA\u8EAB\u4EFD\u63D0\u4F9B\u8005\u5B9E\u4F8B\n      const idp = IdentityProvider({\n        metadata: `\n          <EntityDescriptor entityID=\"https://${env.AUTH_DOMAIN}/api/auth/saml\">\n            <IDPSSODescriptor>\n              <KeyDescriptor use=\"signing\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.signingCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <KeyDescriptor use=\"encryption\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.encryptCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>\n              <SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/login/${app.id}\"/>\n              <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/logout\"/>\n            </IDPSSODescriptor>\n          </EntityDescriptor>\n        `\n      });\n      \n      // \u8FD4\u56DE\u5143\u6570\u636EXML\n      const metadata = idp.getMetadata();\n      \n      return new Response(metadata, {\n        status: 200,\n        headers: { 'Content-Type': 'application/xml' }\n      });\n    } catch (error) {\n      console.error('\u83B7\u53D6SAML\u5143\u6570\u636E\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u83B7\u53D6SAML\u5143\u6570\u636E\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // SAML\u767B\u5F55\u8BF7\u6C42\u5904\u7406\n  async login(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      const url = new URL(request.url);\n      const appId = url.pathname.split('/').pop();\n      \n      if (!appId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528ID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECEKV\u5B58\u50A8\u4E2D\u83B7\u53D6\u5E94\u7528\u4FE1\u606F\n      const appJson = await env.APPLICATIONS.get(`app:${appId}`);\n      \n      if (!appJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const app = JSON.parse(appJson);\n      \n      // \u68C0\u67E5\u5E94\u7528\u7C7B\u578B\u662F\u5426\u4E3ASAML\n      if (app.type !== 'saml') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u7C7B\u578B\u4E0D\u662FSAML'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u6570\u636E\n      const data = await request.json() as any;\n      const { SAMLRequest, RelayState } = data;\n      \n      // \u9A8C\u8BC1SAMLRequest\u5B58\u5728\n      if (!SAMLRequest) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'SAML\u8BF7\u6C42\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u521B\u5EFA\u670D\u52A1\u63D0\u4F9B\u8005\u5B9E\u4F8B\n      const sp = ServiceProvider({\n        entityID: app.entityID,\n        assertionConsumerService: [{\n          Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n          Location: app.acsUrl\n        }],\n        singleLogoutService: [{\n          Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n          Location: app.sloUrl || ''\n        }],\n        signingCert: app.spCert || ''\n      });\n      \n      // \u521B\u5EFA\u8EAB\u4EFD\u63D0\u4F9B\u8005\u5B9E\u4F8B\n      const idp = IdentityProvider({\n        metadata: `\n          <EntityDescriptor entityID=\"https://${env.AUTH_DOMAIN}/api/auth/saml\">\n            <IDPSSODescriptor>\n              <KeyDescriptor use=\"signing\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.signingCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <KeyDescriptor use=\"encryption\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.encryptCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>\n              <SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/login/${appId}\"/>\n               <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/logout\"/>\n             </IDPSSODescriptor>\n           </EntityDescriptor>\n        `\n      });\n      \n      // \u89E3\u6790SAML\u8BF7\u6C42\n      const { extract } = await sp.parseLogoutRequest(idp, 'redirect', { query: { SAMLRequest, RelayState } });\n      \n      // \u5B58\u50A8SAML\u8BF7\u6C42\u4FE1\u606F\u5230\u4F1A\u8BDD\u4E2D\uFF0C\u7528\u4E8E\u540E\u7EED\u56DE\u8C03\n      const sessionId = crypto.randomUUID();\n      await env.SESSIONS.put(`saml:${sessionId}`, JSON.stringify({\n        appId,\n        request: extract,\n        relayState: RelayState,\n        createdAt: Date.now()\n      }), { expirationTtl: 60 * 60 }) // 1\u5C0F\u65F6\u8FC7\u671F\n      \n      // \u8FD4\u56DE\u767B\u5F55\u4F1A\u8BDDID\n      return new Response(JSON.stringify({\n        success: true,\n        sessionId\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('SAML\u767B\u5F55\u8BF7\u6C42\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406SAML\u767B\u5F55\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // SAML\u56DE\u8C03\u5904\u7406\n  async callback(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u6570\u636E\n      const data = await request.json() as any;\n      const { samlResponse, sessionId } = data;\n      \n      // \u9A8C\u8BC1\u5FC5\u8981\u53C2\u6570\n      if (!samlResponse || !sessionId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'SAML\u54CD\u5E94\u548C\u4F1A\u8BDDID\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECE\u4F1A\u8BDD\u4E2D\u83B7\u53D6SAML\u8BF7\u6C42\u4FE1\u606F\n      const samlSessionJson = await env.SESSIONS.get(`saml:${sessionId}`);\n      \n      if (!samlSessionJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'SAML\u4F1A\u8BDD\u4E0D\u5B58\u5728\u6216\u5DF2\u8FC7\u671F'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const samlSession = JSON.parse(samlSessionJson);\n      \n      // \u83B7\u53D6\u5E94\u7528\u4FE1\u606F\n      const appJson = await env.APPLICATIONS.get(`app:${samlSession.appId}`);\n      \n      if (!appJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u4E0D\u5B58\u5728'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const app = JSON.parse(appJson);\n      \n      // \u521B\u5EFA\u670D\u52A1\u63D0\u4F9B\u8005\u5B9E\u4F8B\n      const sp = ServiceProvider({\n        entityID: app.entityID,\n        assertionConsumerService: [{\n          Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n          Location: app.acsUrl\n        }],\n        singleLogoutService: [{\n          Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n          Location: app.sloUrl || ''\n        }],\n        signingCert: app.spCert || ''\n      });\n      \n      // \u521B\u5EFA\u8EAB\u4EFD\u63D0\u4F9B\u8005\u5B9E\u4F8B\n      const idp = IdentityProvider({\n        metadata: `\n          <EntityDescriptor entityID=\"https://${env.AUTH_DOMAIN}/api/auth/saml\">\n            <IDPSSODescriptor>\n              <KeyDescriptor use=\"signing\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.signingCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <KeyDescriptor use=\"encryption\">\n                <KeyInfo>\n                  <X509Data>\n                    <X509Certificate>${app.encryptCert || ''}</X509Certificate>\n                  </X509Data>\n                </KeyInfo>\n              </KeyDescriptor>\n              <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>\n              <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>\n              <SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/login/${app.id}\"/>\n              <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://${env.AUTH_DOMAIN}/api/auth/saml/logout\"/>\n            </IDPSSODescriptor>\n          </EntityDescriptor>\n        `\n      });\n      \n      // \u751F\u6210SAML\u54CD\u5E94\n      const { extract } = await idp.parseLogoutResponse(sp, 'post', { body: { SAMLResponse: samlResponse } });\n      \n      // \u6784\u5EFASAML\u65AD\u8A00\n      const email = extract.nameID;\n      \n      // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5B58\u5728\n      let userJson = await env.USERS.get(`user:${email}`);\n      let user;\n      \n      if (!userJson) {\n        // \u5982\u679C\u7528\u6237\u4E0D\u5B58\u5728\u4E14\u5E94\u7528\u914D\u7F6E\u5141\u8BB8\u81EA\u52A8\u521B\u5EFA\u7528\u6237\uFF0C\u5219\u521B\u5EFA\u65B0\u7528\u6237\n        if (app.autoCreateUsers) {\n          // \u521B\u5EFA\u65B0\u7528\u6237\n          const userId = crypto.randomUUID();\n          user = {\n            id: userId,\n            email,\n            name: extract.attributes?.name || email.split('@')[0],\n            role: 'user',\n            createdAt: Date.now(),\n            updatedAt: Date.now()\n          };\n          \n          // \u5B58\u50A8\u7528\u6237\u4FE1\u606F\n          await env.USERS.put(`user:${email}`, JSON.stringify(user));\n          await env.USERS.put(`userId:${userId}`, email);\n        } else {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u7528\u6237\u4E0D\u5B58\u5728'\n          }), {\n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      } else {\n        user = JSON.parse(userJson);\n      }\n      \n      // \u6784\u5EFA\u5E76\u8FD4\u56DESAML\u54CD\u5E94\n      const samlAssertionResponse = idp.createLoginResponse(\n        sp,\n        samlSession.request,\n        'post',\n        {\n          samlNameID: user.email,\n          attributes: {\n            email: user.email,\n            name: user.name,\n            role: user.role\n          },\n          relayState: samlSession.relayState\n        }\n      );\n      \n      // \u5220\u9664\u4F1A\u8BDD\n      await env.SESSIONS.delete(`saml:${sessionId}`);\n      \n      return new Response(JSON.stringify({\n        success: true,\n        samlResponse: samlAssertionResponse\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('SAML\u56DE\u8C03\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406SAML\u56DE\u8C03\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // SAML\u767B\u51FA\u5904\u7406\n  async logout(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u6570\u636E\n      const data = await request.json() as any;\n      const { SAMLRequest, RelayState } = data;\n      \n      // \u9A8C\u8BC1SAMLRequest\u5B58\u5728\n      if (!SAMLRequest) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'SAML\u8BF7\u6C42\u4E0D\u80FD\u4E3A\u7A7A'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u4ECESAMLRequest\u4E2D\u63D0\u53D6\u5E94\u7528ID\n      // \u6CE8\u610F\uFF1A\u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u60C5\u51B5\u89E3\u6790SAMLRequest\u83B7\u53D6\u5E94\u7528ID\n      // \u8FD9\u4E2A\u793A\u4F8B\u4E2D\u7B80\u5316\u5904\u7406\n      const sessionId = crypto.randomUUID();\n      \n      // \u5B58\u50A8\u767B\u51FA\u8BF7\u6C42\u4FE1\u606F\n      await env.SESSIONS.put(`saml-logout:${sessionId}`, JSON.stringify({\n        request: SAMLRequest,\n        relayState: RelayState,\n        createdAt: Date.now()\n      }), { expirationTtl: 60 * 60 }) // 1\u5C0F\u65F6\u8FC7\u671F\n      \n      return new Response(JSON.stringify({\n        success: true,\n        message: '\u767B\u51FA\u4F1A\u8BDD\u5DF2\u521B\u5EFA',\n        sessionId\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('SAML\u767B\u51FA\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406SAML\u767B\u51FA\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n};\n", "import { verifyToken } from '../utils/auth';\nimport { sign, verify } from 'jsonwebtoken';\nimport { generateKeyPair } from '../utils/crypto';\nimport { ExtendedRequest, OidcAuthCode, OidcToken } from '../types';\n\n// OIDC\u5904\u7406\u7A0B\u5E8F\nexport const handleOidc = {\n  // \u6388\u6743\u7AEF\u70B9\n  async authorize(request: ExtendedRequest): Promise<Response> {\n    try {\n      const env = request.env;\n      const url = new URL(request.url);\n      const params = url.searchParams;\n      \n      // \u83B7\u53D6\u5FC5\u8981\u53C2\u6570\n      const clientId = params.get('client_id');\n      const responseType = params.get('response_type');\n      const redirectUri = params.get('redirect_uri');\n      const scope = params.get('scope');\n      const state = params.get('state');\n      const nonce = params.get('nonce');\n      \n      // \u9A8C\u8BC1\u5FC5\u8981\u53C2\u6570\n      if (!clientId || !responseType || !redirectUri) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u54CD\u5E94\u7C7B\u578B\n      if (!['code', 'token', 'id_token', 'code token', 'code id_token', 'token id_token', 'code token id_token']\n          .includes(responseType)) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u4E0D\u652F\u6301\u7684\u54CD\u5E94\u7C7B\u578B'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u5BFB\u627E\u5BF9\u5E94\u7684\u5E94\u7528\n      const appKeys = await env.APPLICATIONS.list({ prefix: 'app:' });\n      let app = null;\n      \n      for (const key of appKeys.keys) {\n        const appJson = await env.APPLICATIONS.get(key.name);\n        if (appJson) {\n          const appData = JSON.parse(appJson);\n          if (appData.clientId === clientId) {\n            app = appData;\n            break;\n          }\n        }\n      }\n      \n      if (!app) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5BA2\u6237\u7AEFID\u65E0\u6548'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u5E94\u7528\u7C7B\u578B\n      if (app.type !== 'oidc') {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5E94\u7528\u7C7B\u578B\u4E0D\u662FOIDC'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u9A8C\u8BC1\u91CD\u5B9A\u5411URI\n      if (!app.redirectUris.includes(redirectUri)) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u91CD\u5B9A\u5411URI\u672A\u6388\u6743'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u521B\u5EFA\u6388\u6743\u4F1A\u8BDD\n      const sessionId = crypto.randomUUID();\n      await env.SESSIONS.put(`oidc:${sessionId}`, JSON.stringify({\n        clientId,\n        responseType,\n        redirectUri,\n        scope: scope || 'openid profile email',\n        state,\n        nonce,\n        createdAt: Date.now()\n      }), { expirationTtl: 60 * 10 }) // 10\u5206\u949F\u8FC7\u671F\n      \n      // \u8FD4\u56DE\u4F1A\u8BDDID\uFF0C\u524D\u7AEF\u9700\u8981\u4F7F\u7528\u6B64ID\u7EE7\u7EED\u767B\u5F55\u6D41\u7A0B\n      return new Response(JSON.stringify({\n        success: true,\n        sessionId\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('OIDC\u6388\u6743\u8BF7\u6C42\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406OIDC\u6388\u6743\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u4EE4\u724C\u7AEF\u70B9\n  async token(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      \n      // \u9A8C\u8BC1\u5BA2\u6237\u7AEF\u51ED\u636E\n      const authHeader = request.headers.get('Authorization');\n      let clientId = '';\n      let clientSecret = '';\n      \n      if (authHeader && authHeader.startsWith('Basic ')) {\n        // \u4ECEBasic\u8BA4\u8BC1\u4E2D\u63D0\u53D6\u5BA2\u6237\u7AEF\u51ED\u636E\n        const base64Credentials = authHeader.split(' ')[1];\n        const credentials = atob(base64Credentials).split(':');\n        clientId = credentials[0];\n        clientSecret = credentials[1];\n      } else {\n        // \u4ECE\u8BF7\u6C42\u4F53\u4E2D\u83B7\u53D6\u5BA2\u6237\u7AEF\u51ED\u636E\n        const formData = await request.formData();\n        clientId = formData.get('client_id')?.toString() || '';\n        clientSecret = formData.get('client_secret')?.toString() || '';\n      }\n      \n      if (!clientId || !clientSecret) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7F3A\u5C11\u5BA2\u6237\u7AEF\u51ED\u636E'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u5BFB\u627E\u5BF9\u5E94\u7684\u5E94\u7528\n      const appKeys = await env.APPLICATIONS.list({ prefix: 'app:' });\n      let app = null;\n      \n      for (const key of appKeys.keys) {\n        const appJson = await env.APPLICATIONS.get(key.name);\n        if (appJson) {\n          const appData = JSON.parse(appJson);\n          if (appData.clientId === clientId) {\n            app = appData;\n            break;\n          }\n        }\n      }\n      \n      if (!app || app.clientSecret !== clientSecret) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u5BA2\u6237\u7AEF\u51ED\u636E\u65E0\u6548'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6\u53C2\u6570\n      const formData = await request.formData();\n      const grantType = formData.get('grant_type')?.toString();\n      \n      // \u6839\u636E\u6388\u6743\u7C7B\u578B\u5904\u7406\u8BF7\u6C42\n      if (grantType === 'authorization_code') {\n        const code = formData.get('code')?.toString();\n        const redirectUri = formData.get('redirect_uri')?.toString();\n        \n        if (!code || !redirectUri) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // \u9A8C\u8BC1\u91CD\u5B9A\u5411URI\n        if (!app.redirectUris.includes(redirectUri)) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u91CD\u5B9A\u5411URI\u4E0E\u6388\u6743\u8BF7\u6C42\u4E0D\u5339\u914D'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // \u83B7\u53D6\u5E76\u9A8C\u8BC1\u6388\u6743\u7801\n        const authCodeJson = await env.SESSIONS.get(`oidc-code:${code}`);\n        \n        if (!authCodeJson) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u6388\u6743\u7801\u65E0\u6548\u6216\u5DF2\u8FC7\u671F'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        const authCode = JSON.parse(authCodeJson);\n        \n        // \u9A8C\u8BC1\u5BA2\u6237\u7AEFID\u548C\u91CD\u5B9A\u5411URI\n        if (authCode.clientId !== clientId || authCode.redirectUri !== redirectUri) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u6388\u6743\u7801\u4E0E\u5BA2\u6237\u7AEF\u4E0D\u5339\u914D'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // \u6388\u6743\u7801\u53EA\u80FD\u4F7F\u7528\u4E00\u6B21\uFF0C\u7ACB\u5373\u5220\u9664\n        await env.SESSIONS.delete(`oidc-code:${code}`);\n        \n        // \u83B7\u53D6\u7528\u6237\u4FE1\u606F\n        const userEmail = await env.USERS.get(`userId:${authCode.userId}`);\n        \n        if (!userEmail) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u7528\u6237\u4E0D\u5B58\u5728'\n          }), {\n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        const userJson = await env.USERS.get(`user:${userEmail}`);\n        \n        if (!userJson) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u7528\u6237\u4E0D\u5B58\u5728'\n          }), {\n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        const user = JSON.parse(userJson);\n        \n        // \u751F\u6210\u8BBF\u95EE\u4EE4\u724C\u548CID\u4EE4\u724C\n        const accessToken = sign(\n          {\n            sub: user.id,\n            email: user.email,\n            name: user.name,\n            scope: authCode.scope\n          },\n          env.JWT_SECRET,\n          { expiresIn: '1h', audience: clientId }\n        );\n        \n        let idToken = null;\n        if (authCode.scope.includes('openid')) {\n          // \u751F\u6210ID\u4EE4\u724C\n          idToken = sign(\n            {\n              sub: user.id,\n              email: user.email,\n              name: user.name,\n              nonce: authCode.nonce\n            },\n            env.JWT_SECRET,\n            { expiresIn: '1h', audience: clientId }\n          );\n        }\n        \n        // \u751F\u6210\u5237\u65B0\u4EE4\u724C\n        const refreshToken = sign(\n          { sub: user.id },\n          env.JWT_SECRET,\n          { expiresIn: '30d', audience: clientId }\n        );\n        \n        // \u5B58\u50A8\u5237\u65B0\u4EE4\u724C\n        await env.SESSIONS.put(`oidc-refresh:${refreshToken}`, JSON.stringify({\n          userId: user.id,\n          clientId,\n          scope: authCode.scope,\n          createdAt: Date.now()\n        }), { expirationTtl: 60 * 60 * 24 * 30 }) // 30\u5929\u8FC7\u671F\n        \n        // \u6784\u5EFA\u54CD\u5E94\n        const response = {\n          access_token: accessToken,\n          token_type: 'Bearer',\n          expires_in: 3600,\n          refresh_token: refreshToken,\n          scope: authCode.scope\n        } as any;\n        \n        if (idToken) {\n          response['id_token'] = idToken;\n        }\n        \n        return new Response(JSON.stringify(response), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } else if (grantType === 'refresh_token') {\n        const refreshTokenValue = formData.get('refresh_token')?.toString();\n        \n        if (!refreshTokenValue) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u7F3A\u5C11\u5237\u65B0\u4EE4\u724C'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // \u9A8C\u8BC1\u5237\u65B0\u4EE4\u724C\n        try {\n          const decoded = verify(refreshTokenValue, env.JWT_SECRET) as { sub: string, aud: string };\n          \n          // \u9A8C\u8BC1\u5BA2\u6237\u7AEFID\n          if (decoded.aud !== clientId) {\n            return new Response(JSON.stringify({\n              success: false,\n              message: '\u5237\u65B0\u4EE4\u724C\u4E0E\u5BA2\u6237\u7AEF\u4E0D\u5339\u914D'\n            }), {\n              status: 400,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          // \u83B7\u53D6\u5237\u65B0\u4EE4\u724C\u6570\u636E\n          const refreshJson = await env.SESSIONS.get(`oidc-refresh:${refreshTokenValue}`);\n          \n          if (!refreshJson) {\n            return new Response(JSON.stringify({\n              success: false,\n              message: '\u5237\u65B0\u4EE4\u724C\u65E0\u6548\u6216\u5DF2\u8FC7\u671F'\n            }), {\n              status: 400,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          const refreshData = JSON.parse(refreshJson);\n          \n          // \u83B7\u53D6\u7528\u6237\u4FE1\u606F\n          const userEmail = await env.USERS.get(`userId:${refreshData.userId}`);\n          \n          if (!userEmail) {\n            return new Response(JSON.stringify({\n              success: false,\n              message: '\u7528\u6237\u4E0D\u5B58\u5728'\n            }), {\n              status: 404,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          const userJson = await env.USERS.get(`user:${userEmail}`);\n          \n          if (!userJson) {\n            return new Response(JSON.stringify({\n              success: false,\n              message: '\u7528\u6237\u4E0D\u5B58\u5728'\n            }), {\n              status: 404,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          const user = JSON.parse(userJson);\n          \n          // \u751F\u6210\u65B0\u7684\u8BBF\u95EE\u4EE4\u724C\n          const accessToken = sign(\n            {\n              sub: user.id,\n              email: user.email,\n              name: user.name,\n              scope: refreshData.scope\n            },\n            env.JWT_SECRET,\n            { expiresIn: '1h', audience: clientId }\n          );\n          \n          let idToken = null;\n          if (refreshData.scope.includes('openid')) {\n            // \u751F\u6210ID\u4EE4\u724C\n            idToken = sign(\n              {\n                sub: user.id,\n                email: user.email,\n                name: user.name\n              },\n              env.JWT_SECRET,\n              { expiresIn: '1h', audience: clientId }\n            );\n          }\n          \n          // \u6784\u5EFA\u54CD\u5E94\n          const response = {\n            access_token: accessToken,\n            token_type: 'Bearer',\n            expires_in: 3600,\n            scope: refreshData.scope\n          } as any;\n          \n          if (idToken) {\n            response['id_token'] = idToken;\n          }\n          \n          return new Response(JSON.stringify(response), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          // \u5220\u9664\u65E0\u6548\u7684\u5237\u65B0\u4EE4\u724C\n          await env.SESSIONS.delete(`oidc-refresh:${refreshTokenValue}`);\n          \n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u5237\u65B0\u4EE4\u724C\u65E0\u6548\u6216\u5DF2\u8FC7\u671F'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      } else if (grantType === 'client_credentials') {\n        // \u5BA2\u6237\u7AEF\u51ED\u636E\u6D41\u7A0B\uFF0C\u7528\u4E8E\u670D\u52A1\u5668\u5230\u670D\u52A1\u5668\u7684\u901A\u4FE1\n        const scope = formData.get('scope')?.toString() || '';\n        \n        // \u751F\u6210\u8BBF\u95EE\u4EE4\u724C\n        const accessToken = sign(\n          {\n            sub: clientId,\n            scope\n          },\n          env.JWT_SECRET,\n          { expiresIn: '1h', audience: clientId }\n        );\n        \n        return new Response(JSON.stringify({\n          access_token: accessToken,\n          token_type: 'Bearer',\n          expires_in: 3600,\n          scope\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } else {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u4E0D\u652F\u6301\u7684\u6388\u6743\u7C7B\u578B'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    } catch (error) {\n      console.error('OIDC\u4EE4\u724C\u8BF7\u6C42\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406OIDC\u4EE4\u724C\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // \u7528\u6237\u4FE1\u606F\u7AEF\u70B9\n  async userInfo(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      \n      // \u4ECE\u8BF7\u6C42\u5934\u4E2D\u83B7\u53D6\u8BBF\u95EE\u4EE4\u724C\n      const authHeader = request.headers.get('Authorization');\n      \n      if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u672A\u63D0\u4F9B\u8BBF\u95EE\u4EE4\u724C'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json', 'WWW-Authenticate': 'Bearer' }\n        });\n      }\n      \n      const token = authHeader.split(' ')[1];\n      \n      try {\n        // \u9A8C\u8BC1\u4EE4\u724C\n        const decoded = verify(token, env.JWT_SECRET) as { \n          sub: string,\n          email: string,\n          name: string,\n          scope: string,\n          aud: string\n        };\n        \n        // \u68C0\u67E5\u8303\u56F4\u662F\u5426\u5305\u542Bopenid\n        if (!decoded.scope || !decoded.scope.includes('openid')) {\n          return new Response(JSON.stringify({\n            success: false,\n            message: '\u4EE4\u724C\u6CA1\u6709\u8DB3\u591F\u7684\u6743\u9650'\n          }), {\n            status: 403,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // \u6784\u5EFA\u7528\u6237\u4FE1\u606F\u54CD\u5E94\n        const userInfo: any = {\n          sub: decoded.sub\n        };\n        \n        // \u6839\u636E\u8BF7\u6C42\u7684\u8303\u56F4\u6DFB\u52A0\u7528\u6237\u4FE1\u606F\n        if (decoded.scope.includes('profile') && decoded.name) {\n          userInfo.name = decoded.name;\n        }\n        \n        if (decoded.scope.includes('email') && decoded.email) {\n          userInfo.email = decoded.email;\n          userInfo.email_verified = true; // \u5047\u8BBE\u5DF2\u9A8C\u8BC1\n        }\n        \n        return new Response(JSON.stringify(userInfo), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u65E0\u6548\u6216\u8FC7\u671F\u7684\u4EE4\u724C'\n        }), {\n          status: 401,\n          headers: { \n            'Content-Type': 'application/json',\n            'WWW-Authenticate': 'Bearer error=\"invalid_token\", error_description=\"The access token is invalid\"' \n          }\n        });\n      }\n    } catch (error) {\n      console.error('OIDC\u7528\u6237\u4FE1\u606F\u8BF7\u6C42\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406OIDC\u7528\u6237\u4FE1\u606F\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  },\n  \n  // OIDC\u56DE\u8C03\u5904\u7406\n  async callback(request: Request): Promise<Response> {\n    try {\n      const env = (request as any).env;\n      \n      // \u83B7\u53D6\u8BF7\u6C42\u6570\u636E\n      const data = await request.json() as any;\n      const { code, state, sessionId } = data;\n      \n      if (!code || !sessionId) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6OIDC\u4F1A\u8BDD\u4FE1\u606F\n      const sessionJson = await env.SESSIONS.get(`oidc:${sessionId}`);\n      \n      if (!sessionJson) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'OIDC\u4F1A\u8BDD\u4E0D\u5B58\u5728\u6216\u5DF2\u8FC7\u671F'\n        }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      const session = JSON.parse(sessionJson);\n      \n      // \u9A8C\u8BC1state\u53C2\u6570\n      if (session.state && session.state !== state) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: 'state\u53C2\u6570\u4E0D\u5339\u914D'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u83B7\u53D6\u5F53\u524D\u767B\u5F55\u7528\u6237\u4FE1\u606F\n      const authResult = await verifyToken(request as ExtendedRequest);\n      if (!authResult.success) {\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u7528\u6237\u672A\u767B\u5F55'\n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // \u521B\u5EFA\u6388\u6743\u7801\n      const authCode = crypto.randomUUID();\n      \n      // \u5B58\u50A8\u6388\u6743\u7801\u6570\u636E\n      await env.SESSIONS.put(`oidc-code:${authCode}`, JSON.stringify({\n        userId: authResult.user?.sub,\n        clientId: session.clientId,\n        redirectUri: session.redirectUri,\n        scope: session.scope,\n        nonce: session.nonce,\n        createdAt: Date.now()\n      }), { expirationTtl: 60 * 5 }) // 5\u5206\u949F\u8FC7\u671F\n      \n      // \u5220\u9664\u6388\u6743\u4F1A\u8BDD\n      await env.SESSIONS.delete(`oidc:${sessionId}`);\n      \n      // \u6784\u5EFA\u91CD\u5B9A\u5411URL\n      let redirectUrl = session.redirectUri;\n      \n      // \u6839\u636E\u54CD\u5E94\u7C7B\u578B\u6784\u5EFA\u4E0D\u540C\u7684\u54CD\u5E94\n      if (session.responseType === 'code') {\n        // \u6388\u6743\u7801\u6D41\u7A0B\n        redirectUrl += (redirectUrl.includes('?') ? '&' : '?') + `code=${authCode}`;\n        if (session.state) {\n          redirectUrl += `&state=${encodeURIComponent(session.state)}`;\n        }\n      } else {\n        // \u5176\u4ED6\u6D41\u7A0B\uFF0C\u5982\u9690\u5F0F\u6D41\u7A0B\u7B49\n        // \u8FD9\u91CC\u7B80\u5316\u5904\u7406\uFF0C\u4EC5\u5B9E\u73B0\u6388\u6743\u7801\u6D41\u7A0B\n        return new Response(JSON.stringify({\n          success: false,\n          message: '\u4EC5\u652F\u6301\u6388\u6743\u7801\u6D41\u7A0B'\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      return new Response(JSON.stringify({\n        success: true,\n        redirectUrl\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } catch (error) {\n      console.error('OIDC\u56DE\u8C03\u5904\u7406\u9519\u8BEF:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        message: '\u5904\u7406OIDC\u56DE\u8C03\u65F6\u53D1\u751F\u9519\u8BEF',\n        error: error instanceof Error ? error.message : String(error)\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  }\n};\n", "// CORS \u914D\u7F6E\nexport const corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n  'Access-Control-Max-Age': '86400',\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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A,MAClB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,QAAQ;AAAA,MACR,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,iBAAiB;AAAA,IAClB;AAAA;AAAA;;;AC7NA,IAEM,eACO,kBACE,MAAM,UAAU,UAGzB,cAMJ,OACA,aACA,6BACA,qCACA,qCACA,aACA,mBACA,MACA,MACA,OACA,OACA,QACA,WACA,mBACA,iBACA,UACA,KACA,WACA,QACA,YACA,MACA,aACA,KACA,YACA,UACA,UACA,cACA,UACA,wBACA,iBACAC,SACA,MACA,WACA,eACA,aACA,IACA,KACA,MACA,KACA,MACA,iBACA,qBACA,cACA,SACA,oBACA,gBACA,QACA,eACA,iBACA,sBACA,QACA,OACA,QACA,OACA,kBACA,kBACA,OACA,QACA,SACA,UACA,QACA,YACA,gBACA,YACA,WACAC,SACA,SACA,MACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,YACA,YACA,SACA,cACA,UACA,eACA,WACA,eACA,iBACA,mBACA,oBACA,OACA,kBACA,WACA,4BACA,2BACA,eACA,aACA,cACA,iBACA,UACA,OACA,gBAEI,UA8GC;AAnOP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AACvC,KAAM,EAAE,MAAM,UAAU,aAAa;AAAA,MAC1C;AAAA,IACF;AACA,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACF,CAAC;AACM,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MA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A,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAC1F;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,MAAM;AAAA,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QAAG,CAAC,YAAY,SAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,SAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,SAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,SAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,WAAY,SAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,UAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,UAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,SAAU;AAAA,QACjD,CAAC,YAAY,SAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,SAAU;AAAA,QACjD,CAAC,YAAY,UAAU;AAAA,QAAG,CAAC,YAAY,UAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,UAAU;AAAA,QACjD,CAAC,WAAY,UAAU;AAAA,QAAG,CAAC,WAAY,SAAU;AAAA,QA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,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI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Q,GAAG,QAAW,GAAG,CAAC;AAAA,EAClE,GAHY;AAIZ,MAAI,gBAAgBD;AACpB,MAAI,SAAS;AACb,SAAO;AACR;AAVA,IAWaE,SACAC,aACAC,QACAC,QACAC,WACAC,KACAC,SACAC,SACAC,OACAC,QACAC,UACAC,QACAC,UACAC,WACAC,OACAC,UACAC,UACAC,WACAC,WACAC,SACAC,KACAC,QACAC,OACAC,UACAC,WACAC,SACAC,SACAC,YACAC,SACA,OACA,kBACA,mBACA,QACA,QACA,QACA,WACA,OACA,OACA,WACA,SACA,WACA,MACA,OACA,cACA,UACA,aACAC,QACA,WACA,OACA,QACA,kBACA,YACAC,OACA,gBACA,YACA,WACA,WACA,WACA,cACA,QACA,YACA,YACA,YACA,eACA,WACA,WACA,eACA,aACA,YACA,YACA,UACA,aACA,WACA,aACA,UACA,aACA,aACA,UACA,WACA,cACA,cACA,YACA,QACA,WACA,aACA,cACA,YACA,YACA,eACA,WACA,YACA,YACA;AAvGb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACS,WAAAlC,cAAA;AASF,IAAMG,UAASH,aAAgB,MAAM;AACrC,IAAMI,cAAaJ,aAAgB,UAAU;AAC7C,IAAMK,SAAQL,aAAgB,KAAK;AACnC,IAAMM,SAAQN,aAAgB,KAAK;AACnC,IAAMO,YAAWP,aAAgB,QAAQ;AACzC,IAAMQ,MAAKR,aAAgB,EAAE;AAC7B,IAAMS,UAAST,aAAgB,MAAM;AACrC,IAAMU,UAASV,aAAgB,MAAM;AACrC,IAAMW,QAAOX,aAAgB,IAAI;AACjC,IAAMY,SAAQZ,aAAgB,KAAK;AACnC,IAAMa,WAAUb,aAAgB,OAAO;AACvC,IAAMc,SAAQd,aAAgB,KAAK;AACnC,IAAMe,WAAUf,aAAgB,OAAO;AACvC,IAAMgB,YAAWhB,aAAgB,QAAQ;AACzC,IAAMiB,QAAOjB,aAAgB,IAAI;AACjC,IAAMkB,WAAUlB,aAAgB,OAAO;AACvC,IAAMmB,WAAUnB,aAAgB,OAAO;AACvC,IAAMoB,YAAWpB,aAAgB,QAAQ;AACzC,IA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K,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OACL,KAAK,OAAU,KAAK,OACpB,KAAK,OACL,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,OAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,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,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SACL,KAAK,SAAU,KAAK;AAAA,MAC5B;AAEA,gBAAU,eAAe,SAAU,GAAG;AAClC,eAAO,KAAK,MAAU,KAAK,MACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,MACL,KAAK,MACL,KAAK,MACL,UAAU,SAAS,CAAC,KACpB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,SAAU,KAAK,SACpB,KAAK,SACL,KAAK,SACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAAK,OACL,KAA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AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAA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",
  "names": ["name", "fn", "init_performance", "init_performance", "name", "PerformanceMark", "e", "callback", "fn", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "dir", "callback", "env", "count", "init_performance", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "init_performance", "Buffer", "libDefault", "init_performance", "init_performance", "init_performance", "default", "TextDecoder", "TextEncoder", "init_performance", "TextDecoder", "TextEncoder", "debug", "log", "types", "init_util", "init_performance", "init_performance", "init_util", "init_performance", "Buffer", "write", "init_performance", "init_performance", "init_performance", "init_performance", "subtle", "webcrypto", "init_crypto", "init_performance", "init_performance", "init_crypto", "init_performance", "init_performance", "Buffer", "init_performance", "Buffer", "init_performance", "Buffer", "crypto", "sign", "timingSafeEqual", "verify", "init_performance", "Buffer", "init_performance", "Buffer", "sign", "e", "init_performance", "Buffer", "isObject", "e", "verify", "init_performance", "createSign", "createVerify", "init_performance", "e", "init_performance", "error", "init_performance", "init_performance", "init_performance", "parse", "name", "init_performance", "time", "init_performance", "init_performance", "debug", "init_performance", "debug", "name", "init_performance", "init_performance", "init_performance", "debug", "version", "release", "init_performance", "parse", "version", "init_performance", "parse", "version", "init_performance", "parse", "version", "init_performance", "version", "release", "init_performance", "parse", "version2", "v1", "init_performance", "init_performance", "init_performance", "init_performance", "parse", "version", "init_performance", "compare", "init_performance", "compare", "init_performance", "compare", "init_performance", "init_performance", "init_performance", "init_performance", "compare", "init_performance", "compare", "init_performance", "compare", "init_performance", "compare", "init_performance", "compare", "init_performance", "compare", "init_performance", "init_performance", "parse", "version", "init_performance", "init_performance", "debug", "version", "init_performance", "debug", "version", "init_performance", "version", "init_performance", "init_performance", "versions", "init_performance", "versions", "init_performance", "require_valid", "init_performance", "init_performance", "version", "init_performance", "version", "init_performance", "version", "init_performance", "init_performance", "compare", "versions", "version", "init_performance", "compare", "require_semver", "init_performance", "constants", "parse", "compare", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "KeyObject", "createSecretKey", "createPublicKey", "callback", "header", "secretOrPublicKey", "_", "e", "init_performance", "isArray", "isString", "isFunction", "isObject", "isSymbol", "sign", "require_lodash", "init_performance", "isBoolean", "require_lodash", "init_performance", "isObject", "isSymbol", "sign", "require_lodash", "init_performance", "isNumber", "require_lodash", "init_performance", "e", "require_lodash", "init_performance", "isArray", "isString", "require_lodash", "init_performance", "once", "isObject", "isSymbol", "sign", "init_performance", "isBoolean", "isNumber", "isString", "once", "KeyObject", "createSecretKey", "createPrivateKey", "validate", "callback", "_", "error", "init_performance", "init_performance", "init_performance", "table", "require_util", "init_performance", "callback", "handler", "e", "count", "error", "format", "group", "avg", "i", "overlap", "init_performance", "name", "init_performance", "count", "init_performance", "name", "self", "e", "e2", "options", "init_performance", "name", "init_performance", "error", "format", "e", "init_performance", "init_performance", "_key", "init_performance", "md5", "f", "init_performance", "init_performance", "name", "self", "options", "init_performance", "crypto", "callback", "err", "init_performance", "e", "f", "init_performance", "count", "callback", "md", "getRandomValues", "_crypto", "i", "e", "listener", "init_performance", "jQuery", "key", "count", "callback", "getRandomValues", "e", "init_performance", "createCipher", "count", "init_performance", "e", "f", "init_performance", "sha1", "e", "f", "init_performance", "error", "hash", "count", "init_performance", "callback", "rng", "e", "i", "init_performance", "error", "e", "rng", "callback", "key", "digest", "d", "fn", "init_performance", "count", "error", "key", "iv", "hash", "init_performance", "init_performance", "init_performance", "init_performance", "hash", "init_performance", "error", "hash", "e", "cert", "i", "init_performance", "error", "e", "sha1", "count", "init_performance", "error", "pki", "init_performance", "key", "version", "verify", "error", "callback", "c", "b", "chain", "init_performance", "init_performance", "init_performance", "init_performance", "error", "hash", "e", "f", "init_performance", "hash", "init_performance", "i", "logger", "level", "lock", "f", "init_performance", "init_performance", "error", "init_performance", "init_performance", "init_performance", "on", "init_performance", "f", "count", "init_performance", "init_performance", "table", "init_performance", "init_performance", "f", "init_performance", "init_performance", "require_deflate", "init_performance", "init_performance", "init_performance", "table", "count", "init_performance", "require_constants", "init_performance", "init_performance", "require_inflate", "init_performance", "init_performance", "constants", "isString", "format", "BindingNamespace", "MessageSignatureOrder", "StatusCode", "ParserType", "getRandomValues", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "name", "version", "URL", "init_performance", "init_performance", "init_performance", "init_performance", "e", "init_performance", "init_performance", "init_performance", "version", "init_performance", "init_performance", "init_performance", "init_constants", "init_performance", "init_promises", "init_performance", "init_constants", "ReadStream", "WriteStream", "init_performance", "callbackify", "fn", "error", "access", "appendFile", "chown", "chmod", "copyFile", "cp", "lchown", "lchmod", "link", "lstat", "lutimes", "mkdir", "mkdtemp", "realpath", "open", "opendir", "readdir", "readFile", "readlink", "rename", "rm", "rmdir", "stat", "symlink", "truncate", "unlink", "utimes", "writeFile", "statfs", "watch", "glob", "init_performance", "init_fs", "init_performance", "init_promises", "init_constants", "ReadStream", "WriteStream", "access", "appendFile", "chmod", "chown", "copyFile", "cp", "glob", "lchmod", "lchown", "link", "lstat", "lutimes", "mkdir", "mkdtemp", "open", "opendir", "readFile", "readdir", "readlink", "realpath", "rename", "rm", "rmdir", "stat", "statfs", "symlink", "truncate", "unlink", "utimes", "watch", "writeFile", "init_performance", "init_fs", "init_performance", "exports", "fn", "f", "types", "name", "e", "filter", "self", "context", "count", "XPathException", "error", "map", "parse", "xpath", "init_performance", "init_performance", "t", "error", "version", "callback", "hasDoctypeChildThatIsNotChild", "node", "cp", "name", "count", "getTextContent", "e", "init_performance", "init_performance", "parse", "a", "end", "config", "e", "f", "value", "name", "init_performance", "sax", "fn", "name", "error", "require_lib", "init_performance", "context", "init_performance", "name", "context", "node", "Metadata", "binding", "dlopen", "init_constants", "init_performance", "init_constants", "init_performance", "dlopen", "require_constants", "init_performance", "init_constants", "init_performance", "require_jsbn", "init_performance", "e", "f", "require_pkcs1", "init_performance", "constants", "key", "options", "hash", "init_performance", "count", "hash", "key", "options", "require_pss", "init_performance", "key", "options", "hash", "init_performance", "init_performance", "init_performance", "crypto", "constants", "init_performance", "crypto", "constants", "init_performance", "require_rsa", "init_performance", "init_performance", "e", "init_performance", "libDefault", "init_performance", "init_performance", "Buffer", "e", "init_performance", "assert", "Buffer", "init_performance", "assert", "Buffer", "self", "bytes", "init_performance", "types", "e", "require_lib", "init_performance", "require_pkcs1", "init_performance", "init_performance", "init_performance", "init_performance", "e", "init_performance", "format", "init_performance", "constants", "format", "e", "require_xpath", "init_performance", "exports", "fn", "f", "types", "name", "e", "filter", "self", "context", "count", "XPathException", "error", "map", "parse", "xpath", "NodeTypes", "ancestorNs", "attr", "crypto", "crypto", "callback", "name", "hash", "xpath", "prefix", "libDefault", "init_performance", "init_performance", "escape", "init_performance", "init_performance", "require_utils", "init_performance", "init_performance", "crypto", "callback", "e", "require_lib", "init_performance", "init_performance", "escape", "name", "signatureNode", "validate", "init_performance", "init_performance", "format", "self", "input", "count", "name", "keys", "IdpMetadata", "f", "binding", "SpMetadata", "f", "name", "e", "_a", "binding", "libDefault", "init_performance", "binding", "context", "info", "config", "binding", "info", "config", "context", "self", "binding", "Entity", "f", "binding", "context", "self", "binding", "context", "info", "config", "IdentityProvider", "binding", "context", "self", "ServiceProvider", "binding", "context", "self", "init_performance", "init_performance", "init_performance", "init_performance", "e", "a", "r", "l", "init_performance", "init_performance", "init_performance", "init_crypto", "randomBytes", "randomBytes", "callback", "nextTick", "hash", "callback", "salt", "nextTick", "callback", "nextTick", "hash", "nextTick", "off", "callback", "err", "hash", "init_performance", "name", "init_performance", "getCookie", "error", "name", "error", "init_performance", "error", "name", "init_performance", "error", "init_performance", "env", "error", "init_performance", "import_jsonwebtoken", "env", "error", "formData", "init_performance", "env", "error", "init_performance", "env", "e", "init_performance", "e", "env", "error", "init_performance", "env", "env"]
}
